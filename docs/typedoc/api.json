{
	"id": 0,
	"name": "@ganache/ethereum",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "default",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 2,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 166,
							"character": 2,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L166"
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "new default",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This is the Ethereum API that the provider interacts with.\nThe only methods permitted on the prototype are the supported json-rpc\nmethods."
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 166,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L166"
								}
							],
							"parameters": [
								{
									"id": 4,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../options/src/index.ts",
											"qualifiedName": "EthereumInternalOptions"
										},
										"name": "EthereumInternalOptions",
										"package": "@ganache/ethereum-options"
									}
								},
								{
									"id": 5,
									"name": "wallet",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/wallet.ts",
											"qualifiedName": "default"
										},
										"name": "default",
										"package": "@ganache/ethereum"
									}
								},
								{
									"id": 6,
									"name": "blockchain",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/blockchain.ts",
											"qualifiedName": "default"
										},
										"name": "default",
										"package": "@ganache/ethereum"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"name": "default",
								"package": "@ganache/ethereum"
							}
						}
					]
				},
				{
					"id": 13,
					"name": "#blockchain",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 155,
							"character": 11,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L155"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/blockchain.ts",
							"qualifiedName": "default"
						},
						"name": "default",
						"package": "@ganache/ethereum"
					}
				},
				{
					"id": 10,
					"name": "#filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 152,
							"character": 11,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L152"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../utils/src/types/filters.ts",
									"qualifiedName": "InternalFilter"
								},
								"name": "InternalFilter",
								"package": "@ganache/ethereum-utils"
							}
						],
						"name": "Map",
						"package": "typescript"
					},
					"defaultValue": "..."
				},
				{
					"id": 7,
					"name": "#getId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 148,
							"character": 11,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L148"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 8,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 149,
									"character": 10,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L149"
								}
							],
							"signatures": [
								{
									"id": 9,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "ethereum/src/api.ts",
											"line": 149,
											"character": 10,
											"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L149"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
											"qualifiedName": "Quantity"
										},
										"name": "Quantity",
										"package": "@ganache/utils"
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 12,
					"name": "#options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 154,
							"character": 11,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L154"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../options/src/index.ts",
							"qualifiedName": "EthereumInternalOptions"
						},
						"name": "EthereumInternalOptions",
						"package": "@ganache/ethereum-options"
					}
				},
				{
					"id": 11,
					"name": "#subscriptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 153,
							"character": 11,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L153"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../utils/node_modules/emittery/index.d.ts",
									"qualifiedName": "Emittery.UnsubscribeFn"
								},
								"name": "UnsubscribeFn",
								"package": "emittery",
								"qualifiedName": "Emittery.UnsubscribeFn"
							}
						],
						"name": "Map",
						"package": "typescript"
					},
					"defaultValue": "..."
				},
				{
					"id": 14,
					"name": "#wallet",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 156,
							"character": 11,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L156"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/wallet.ts",
							"qualifiedName": "default"
						},
						"name": "default",
						"package": "@ganache/ethereum"
					}
				},
				{
					"id": 33,
					"name": "bzz_hive",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 258,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L258"
						}
					],
					"signatures": [
						{
							"id": 34,
							"name": "bzz_hive",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the kademlia table in a readable table format."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Returns the kademlia table in a readable table format."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"bzz_hive\"));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 257,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L257"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 35,
					"name": "bzz_info",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 271,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L271"
						}
					],
					"signatures": [
						{
							"id": 36,
							"name": "bzz_info",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns details about the swarm node."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Returns details about the swarm node."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"bzz_info\"));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 270,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L270"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 29,
					"name": "db_getHex",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 243,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L243"
						}
					],
					"signatures": [
						{
							"id": 30,
							"name": "db_getHex",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns binary data from the local database."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The previously stored data."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"db_getHex\", [\"testDb\", \"testKey\"] ));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 242,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L242"
								}
							],
							"parameters": [
								{
									"id": 31,
									"name": "dbName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Database name."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Key name."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 20,
					"name": "db_getString",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 210,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L210"
						}
					],
					"signatures": [
						{
							"id": 21,
							"name": "db_getString",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns string from the local database."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The previously stored string."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"db_getString\", [\"testDb\", \"testKey\"] ));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 209,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L209"
								}
							],
							"parameters": [
								{
									"id": 22,
									"name": "dbName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Database name."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 23,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Key name."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 24,
					"name": "db_putHex",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 227,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L227"
						}
					],
					"signatures": [
						{
							"id": 25,
							"name": "db_putHex",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stores binary data in the local database."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "true if the value was stored, otherwise false."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"db_putHex\", [\"testDb\", \"testKey\", \"0x0\"] ));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 226,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L226"
								}
							],
							"parameters": [
								{
									"id": 26,
									"name": "dbName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Database name."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 27,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Key name."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 28,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Data to store."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 15,
					"name": "db_putString",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 190,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L190"
						}
					],
					"signatures": [
						{
							"id": 16,
							"name": "db_putString",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stores a string in the local database."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "returns true if the value was stored, otherwise false."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"db_putString\", [\"testDb\", \"testKey\", \"testValue\"] ));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 189,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L189"
								}
							],
							"parameters": [
								{
									"id": 17,
									"name": "dbName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Database name."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 18,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Key name."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 19,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "String to store."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 330,
					"name": "debug_storageRangeAt",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 3217,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3217"
						}
					],
					"signatures": [
						{
							"id": 331,
							"name": "debug_storageRangeAt",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Attempts to replay the transaction as it was executed on the network and\nreturn storage data given a starting key and max number of entries to return."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Returns a storage object with the keys being keccak-256 hashes of the storage keys,\nand the values being the raw, unhashed key and value for that specific storage slot. Also\nreturns a next key which is the keccak-256 hash of the next key in storage for continuous downloading."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\n// Simple.sol\n// // SPDX-License-Identifier: MIT\n//  pragma solidity >= 0.4.22 <0.9.0;\n//\n// import \"console.sol\";\n//\n//  contract Simple {\n//      uint256 public value;\n//      constructor() payable {\n//          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n//          value = 5;\n//      }\n//  }\nconst simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\nconst [from] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst initialTxHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n\nconst {contractAddress} = await provider.request({ method: \"eth_getTransactionReceipt\", params: [initialTxHash] });\n\n// set value to 19\nconst data = \"0x552410770000000000000000000000000000000000000000000000000000000000000019\";\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to: contractAddress, data }] });\n\nconst { blockHash, transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\nconst storage = await provider.request({ method: \"debug_storageRangeAt\", params: [blockHash, transactionIndex, contractAddress, \"0x01\", 1] });\nconsole.log(storage);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 3216,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3216"
								}
							],
							"parameters": [
								{
									"id": 332,
									"name": "blockHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Hash of a block."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 333,
									"name": "transactionIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Integer of the transaction index position."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 334,
									"name": "contractAddress",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Address of the contract."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 335,
									"name": "startKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Hash of the start key for grabbing storage entries."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 336,
									"name": "maxResult",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Integer of maximum number of storage entries to return."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../utils/src/types/debug-storage.ts",
											"qualifiedName": "StorageRangeAtResult"
										},
										"name": "StorageRangeAtResult",
										"package": "@ganache/ethereum-utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 326,
					"name": "debug_traceTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 3164,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3164"
						}
					],
					"signatures": [
						{
							"id": 327,
							"name": "debug_traceTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Attempt to run the transaction in the exact same manner as it was executed\non the network. It will replay any transaction that may have been executed\nprior to this one before it will finally attempt to execute the transaction\nthat corresponds to the given hash.\n\nIn addition to the hash of the transaction you may give it a secondary\noptional argument, which specifies the options for this specific call.\nThe possible options are:\n\n* "
									},
									{
										"kind": "code",
										"text": "`disableStorage`"
									},
									{
										"kind": "text",
										"text": ": {boolean} Setting this to "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " will disable storage capture (default = "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ").\n* "
									},
									{
										"kind": "code",
										"text": "`disableMemory`"
									},
									{
										"kind": "text",
										"text": ": {boolean} Setting this to "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " will disable memory capture (default = "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ").\n* "
									},
									{
										"kind": "code",
										"text": "`disableStack`"
									},
									{
										"kind": "text",
										"text": ": {boolean} Setting this to "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " will disable stack capture (default = "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ")."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Returns the "
											},
											{
												"kind": "code",
												"text": "`gas`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`structLogs`"
											},
											{
												"kind": "text",
												"text": ", and "
											},
											{
												"kind": "code",
												"text": "`returnValue`"
											},
											{
												"kind": "text",
												"text": " for the traced transaction.\n\nThe "
											},
											{
												"kind": "code",
												"text": "`structLogs`"
											},
											{
												"kind": "text",
												"text": " are an array of logs, which contains the following fields:\n* "
											},
											{
												"kind": "code",
												"text": "`depth`"
											},
											{
												"kind": "text",
												"text": ": The execution depth.\n* "
											},
											{
												"kind": "code",
												"text": "`error`"
											},
											{
												"kind": "text",
												"text": ": Information about an error, if one occurred.\n* "
											},
											{
												"kind": "code",
												"text": "`gas`"
											},
											{
												"kind": "text",
												"text": ": The number of gas remaining.\n* "
											},
											{
												"kind": "code",
												"text": "`gasCost`"
											},
											{
												"kind": "text",
												"text": ": The cost of gas in wei.\n* "
											},
											{
												"kind": "code",
												"text": "`memory`"
											},
											{
												"kind": "text",
												"text": ": An array containing the contract's memory data.\n* "
											},
											{
												"kind": "code",
												"text": "`op`"
											},
											{
												"kind": "text",
												"text": ": The current opcode.\n* "
											},
											{
												"kind": "code",
												"text": "`pc`"
											},
											{
												"kind": "text",
												"text": ": The current program counter.\n* "
											},
											{
												"kind": "code",
												"text": "`stack`"
											},
											{
												"kind": "text",
												"text": ": The EVM execution stack.\n* "
											},
											{
												"kind": "code",
												"text": "`storage`"
											},
											{
												"kind": "text",
												"text": ": An object containing the contract's storage data."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\n// Simple.sol\n// // SPDX-License-Identifier: MIT\n//  pragma solidity >= 0.4.22 <0.9.0;\n//\n// import \"console.sol\";\n//\n//  contract Simple {\n//      uint256 public value;\n//      constructor() payable {\n//          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n//          value = 5;\n//      }\n//  }\nconst simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\nconst [from] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\nconst transactionTrace = await provider.request({ method: \"debug_traceTransaction\", params: [txHash] });\nconsole.log(transactionTrace);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 3163,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3163"
								}
							],
							"parameters": [
								{
									"id": 328,
									"name": "transactionHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Hash of the transaction to trace."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 329,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "See options in source."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../utils/src/types/trace-transaction.ts",
											"qualifiedName": "TraceTransactionOptions"
										},
										"name": "TraceTransactionOptions",
										"package": "@ganache/ethereum-utils"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../utils/src/types/trace-transaction.ts",
											"qualifiedName": "TraceTransactionResult"
										},
										"name": "TraceTransactionResult",
										"package": "@ganache/ethereum-utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 238,
					"name": "eth_accounts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1637,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1637"
						}
					],
					"signatures": [
						{
							"id": 239,
							"name": "eth_accounts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a list of addresses owned by client."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of 20 Bytes - addresses owned by the client."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst accounts = await provider.request({ method: \"eth_accounts\", params: [] });\nconsole.log(accounts);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1636,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1636"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 240,
					"name": "eth_blockNumber",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1651,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1651"
						}
					],
					"signatures": [
						{
							"id": 241,
							"name": "eth_blockNumber",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of the most recent block."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The current block number the client is on."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst blockNumber = await provider.request({ method: \"eth_blockNumber\" });\nconsole.log(blockNumber);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1650,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1650"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
											"qualifiedName": "Quantity"
										},
										"name": "Quantity",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 316,
					"name": "eth_call",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 2803,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2803"
						}
					],
					"signatures": [
						{
							"id": 317,
							"name": "eth_call",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Executes a new message call immediately without creating a transaction on the block chain.\n\nTransaction call object:\n* "
									},
									{
										"kind": "code",
										"text": "`from`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": ", 20 bytes (optional) - The address the transaction is sent from.\n* "
									},
									{
										"kind": "code",
										"text": "`to`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": ", 20 bytes - The address the transaction is sent to.\n* "
									},
									{
										"kind": "code",
										"text": "`gas`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer of the maximum gas allowance for the transaction.\n* "
									},
									{
										"kind": "code",
										"text": "`gasPrice`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer of the price of gas in wei.\n* "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer of the value in wei.\n* "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": " (optional) - Hash of the method signature and the ABI encoded parameters.\n\nState Override object - An address-to-state mapping, where each entry specifies some\nstate to be ephemerally overridden prior to executing the call. Each address maps to an\nobject containing:\n* "
									},
									{
										"kind": "code",
										"text": "`balance`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY`"
									},
									{
										"kind": "text",
										"text": " (optional) - The balance to set for the account before executing the call.\n* "
									},
									{
										"kind": "code",
										"text": "`nonce`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY`"
									},
									{
										"kind": "text",
										"text": " (optional) - The nonce to set for the account before executing the call.\n* "
									},
									{
										"kind": "code",
										"text": "`code`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": " (optional) - The EVM bytecode to set for the account before executing the call.\n* "
									},
									{
										"kind": "code",
										"text": "`state`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`OBJECT`"
									},
									{
										"kind": "text",
										"text": " (optional*) - Key-value mapping to override *all* slots in the account storage before executing the call.\n* "
									},
									{
										"kind": "code",
										"text": "`stateDiff`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`OBJECT`"
									},
									{
										"kind": "text",
										"text": " (optional*) - Key-value mapping to override *individual* slots in the account storage before executing the call.\n* *Note - "
									},
									{
										"kind": "code",
										"text": "`state`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`stateDiff`"
									},
									{
										"kind": "text",
										"text": " fields are mutually exclusive."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The return value of executed contract."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\n// Simple.sol\n// // SPDX-License-Identifier: MIT\n//  pragma solidity >= 0.4.22 <0.9.0;\n//\n// import \"console.sol\";\n//\n//  contract Simple {\n//      uint256 public value;\n//      constructor() payable {\n//          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n//          value = 5;\n//      }\n//  }\nconst simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\nconst [from] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst txObj = { from, gas: \"0x5b8d80\", gasPrice: \"0x1dfd14000\", value:\"0x0\", data: simpleSol };\nconst slot = \"0x0000000000000000000000000000000000000000000000000000000000000005\"\nconst overrides = { [from]: { balance: \"0x3e8\", nonce: \"0x5\", code: \"0xbaddad42\", stateDiff: { [slot]: \"0x00000000000000000000000000000000000000000000000000000000baddad42\"}}};\nconst result = await provider.request({ method: \"eth_call\", params: [txObj, \"latest\", overrides] });\nconsole.log(result);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 2802,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2802"
								}
							],
							"parameters": [
								{
									"id": 318,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction call object as seen in source."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/api-types.ts",
											"qualifiedName": "Ethereum.Call.Transaction"
										},
										"name": "Transaction",
										"package": "@ganache/ethereum",
										"qualifiedName": "Ethereum.Call.Transaction"
									}
								},
								{
									"id": 319,
									"name": "blockNumber",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Integer block number, or the string \"latest\", \"earliest\"\n or \"pending\"."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "Tag.latest"
								},
								{
									"id": 320,
									"name": "overrides",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "State overrides to apply during the simulation."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/helpers/run-call.ts",
											"qualifiedName": "CallOverrides"
										},
										"name": "CallOverrides",
										"package": "@ganache/ethereum"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-data.ts",
											"qualifiedName": "Data"
										},
										"name": "Data",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 242,
					"name": "eth_chainId",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1668,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1668"
						}
					],
					"signatures": [
						{
							"id": 243,
							"name": "eth_chainId",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the currently configured chain id, a value used in\nreplay-protected transaction signing as introduced by EIP-155."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The chain id as a string."
											}
										]
									},
									{
										"tag": "@EIP",
										"content": [
											{
												"kind": "text",
												"text": "[155 – Simple replay attack protection](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md)"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst chainId = await provider.send(\"eth_chainId\");\nconsole.log(chainId);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1667,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1667"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
											"qualifiedName": "Quantity"
										},
										"name": "Quantity",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 112,
					"name": "eth_coinbase",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1019,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1019"
						}
					],
					"signatures": [
						{
							"id": 113,
							"name": "eth_coinbase",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the client coinbase address."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The current coinbase address."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst coinbaseAddress = await provider.request({ method: \"eth_coinbase\" });\nconsole.log(coinbaseAddress);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1018,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1018"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../address/index.ts",
											"qualifiedName": "Address"
										},
										"name": "Address",
										"package": "@ganache/ethereum-address"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 104,
					"name": "eth_estimateGas",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 909,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L909"
						}
					],
					"signatures": [
						{
							"id": 105,
							"name": "eth_estimateGas",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates and returns an estimate of how much gas is necessary to allow the\ntransaction to complete. The transaction will not be added to the\nblockchain. Note that the estimate may be significantly more than the\namount of gas actually used by the transaction, for a variety of reasons\nincluding EVM mechanics and node performance.\n\nTransaction call object:\n* "
									},
									{
										"kind": "code",
										"text": "`from`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": ", 20 bytes (optional) - The address the transaction is sent from.\n* "
									},
									{
										"kind": "code",
										"text": "`to`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": ", 20 bytes - The address the transaction is sent to.\n* "
									},
									{
										"kind": "code",
										"text": "`gas`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer of the maximum gas allowance for the transaction.\n* "
									},
									{
										"kind": "code",
										"text": "`gasPrice`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer of the price of gas in wei.\n* "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer of the value in wei.\n* "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": " (optional) - Hash of the method signature and the ABI encoded parameters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The amount of gas used."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst gasEstimate = await provider.request({ method: \"eth_estimateGas\", params: [{ from, to }, \"latest\" ] });\nconsole.log(gasEstimate);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 908,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L908"
								}
							],
							"parameters": [
								{
									"id": 106,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction call object as seen in source."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/api-types.ts",
											"qualifiedName": "Ethereum.Transaction"
										},
										"name": "Transaction",
										"package": "@ganache/ethereum",
										"qualifiedName": "Ethereum.Transaction"
									}
								},
								{
									"id": 107,
									"name": "blockNumber",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Integer block number, or the string \"latest\", \"earliest\"\n or \"pending\"."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "Tag.latest"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
											"qualifiedName": "Quantity"
										},
										"name": "Quantity",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 321,
					"name": "eth_feeHistory",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 2943,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2943"
						}
					],
					"signatures": [
						{
							"id": 322,
							"name": "eth_feeHistory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a collection of historical block gas data and optional effective fee spent per unit of gas for a given percentile of block gas usage."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Transaction base fee per gas and effective priority fee per gas for the requested/supported block range\n\n* "
											},
											{
												"kind": "code",
												"text": "`oldestBlock`"
											},
											{
												"kind": "text",
												"text": ":  - Lowest number block of the returned range.\n* "
											},
											{
												"kind": "code",
												"text": "`baseFeePerGas`"
											},
											{
												"kind": "text",
												"text": ":  - An array of block base fees per gas. This includes the next block after the newest of the returned range,\nbecause this value can be derived from the newest block. Zeroes are returned for pre-EIP-1559 blocks.\n* "
											},
											{
												"kind": "code",
												"text": "`gasUsedRatio`"
											},
											{
												"kind": "text",
												"text": ":  - An array of block gas used ratios. These are calculated as the ratio of "
											},
											{
												"kind": "code",
												"text": "`gasUsed`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`gasLimit`"
											},
											{
												"kind": "text",
												"text": ".\n* "
											},
											{
												"kind": "code",
												"text": "`reward`"
											},
											{
												"kind": "text",
												"text": ":  - An array of effective priority fee per gas data points from a single block. All zeroes are returned if the\nblock is empty."
											}
										]
									},
									{
										"tag": "@EIP",
										"content": [
											{
												"kind": "text",
												"text": "[1559 - Fee market change](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1559.md)"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_sendTransaction\", params: [{ from, to }] });\nconst feeHistory = await provider.request({ method: \"eth_feeHistory\", params: [\"0x1\", \"0x1\", [10, 100]] });\nconsole.log(feeHistory);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 2942,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2942"
								}
							],
							"parameters": [
								{
									"id": 323,
									"name": "blockCount",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Range of blocks between 1 and 1024. Will return less than the requested range if not all blocks are available."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 324,
									"name": "newestBlock",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Highest block of the requested range."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 325,
									"name": "rewardPercentiles",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A monotonically increasing list of percentile values. For each block in the requested range,\nthe transactions will be sorted in ascending order by effective tip per gas and the corresponding effective tip for the percentile\nwill be determined, accounting for gas consumed."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../utils/src/types/fee-history.ts",
											"qualifiedName": "FeeHistory"
										},
										"name": "FeeHistory",
										"package": "@ganache/ethereum-utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 234,
					"name": "eth_gasPrice",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1609,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1609"
						}
					],
					"signatures": [
						{
							"id": 235,
							"name": "eth_gasPrice",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current price per gas in wei."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Integer of the current gas price in wei."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst gasPrice = await provider.request({ method: \"eth_gasPrice\", params: [] });\nconsole.log(gasPrice);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1608,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1608"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
											"qualifiedName": "Quantity"
										},
										"name": "Quantity",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 244,
					"name": "eth_getBalance",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1688,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1688"
						}
					],
					"signatures": [
						{
							"id": 245,
							"name": "eth_getBalance",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the balance of the account of given address."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Integer of the account balance in wei."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst accounts = await provider.request({ method: \"eth_accounts\", params: [] });\nconst balance = await provider.request({ method: \"eth_getBalance\", params: [accounts[0], \"latest\"] });\nconsole.log(balance);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1687,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1687"
								}
							],
							"parameters": [
								{
									"id": 246,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Address to check for balance."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 247,
									"name": "blockNumber",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Integer block number, or the string \"latest\", \"earliest\"\n or \"pending\"."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "Tag.latest"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
											"qualifiedName": "Quantity"
										},
										"name": "Quantity",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 130,
					"name": "eth_getBlockByHash",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1218,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1218"
						}
					],
					"signatures": [
						{
							"id": 131,
							"name": "eth_getBlockByHash",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns information about a block by block hash."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The block, "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " if the block doesn't exist.\n\n* "
											},
											{
												"kind": "code",
												"text": "`hash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - Hash of the block. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`parentHash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - Hash of the parent block.\n* "
											},
											{
												"kind": "code",
												"text": "`sha3Uncles`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - SHA3 of the uncles data in the block.\n* "
											},
											{
												"kind": "code",
												"text": "`miner`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 20 Bytes -  Address of the miner.\n* "
											},
											{
												"kind": "code",
												"text": "`stateRoot`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - The root of the state trie of the block.\n* "
											},
											{
												"kind": "code",
												"text": "`transactionsRoot`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - The root of the transaction trie of the block.\n* "
											},
											{
												"kind": "code",
												"text": "`receiptsRoot`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - The root of the receipts trie of the block.\n* "
											},
											{
												"kind": "code",
												"text": "`logsBloom`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 256 Bytes - The bloom filter for the logs of the block. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`difficulty`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - Integer of the difficulty of this block.\n* "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The block number. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`gasLimit`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The maximum gas allowed in the block.\n* "
											},
											{
												"kind": "code",
												"text": "`gasUsed`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - Total gas used by all transactions in the block.\n* "
											},
											{
												"kind": "code",
												"text": "`timestamp`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The unix timestamp for when the block was collated.\n* "
											},
											{
												"kind": "code",
												"text": "`extraData`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": " - Extra data for the block.\n* "
											},
											{
												"kind": "code",
												"text": "`mixHash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 256 Bytes - Hash identifier for the block.\n* "
											},
											{
												"kind": "code",
												"text": "`nonce`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 8 Bytes - Hash of the generated proof-of-work. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`totalDifficulty`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - Integer of the total difficulty of the chain until this block.\n* "
											},
											{
												"kind": "code",
												"text": "`size`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - Integer the size of the block in bytes.\n* "
											},
											{
												"kind": "code",
												"text": "`transactions`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`Array`"
											},
											{
												"kind": "text",
												"text": " - Array of transaction objects or 32 Bytes transaction hashes depending on the last parameter.\n* "
											},
											{
												"kind": "code",
												"text": "`uncles`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`Array`"
											},
											{
												"kind": "text",
												"text": " - Array of uncle hashes."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\n// Simple.sol\n// // SPDX-License-Identifier: MIT\n//  pragma solidity >= 0.4.22 <0.9.0;\n//\n// import \"console.sol\";\n//\n//  contract Simple {\n//      uint256 public value;\n//      constructor() payable {\n//          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n//          value = 5;\n//      }\n//  }\nconst simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\nconst [from] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\nconst txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\nconst block = await provider.request({ method: \"eth_getBlockByHash\", params: [txReceipt.blockHash, true] });\nconsole.log(block);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1217,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1217"
								}
							],
							"typeParameter": [
								{
									"id": 132,
									"name": "IncludeTransactions",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"default": {
										"type": "literal",
										"value": false
									}
								}
							],
							"parameters": [
								{
									"id": 133,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Hash of a block."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 134,
									"name": "transactions",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " it returns the full transaction objects, if "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " only the hashes of the\ntransactions."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "IncludeTransactions",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 135,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 136,
															"name": "hash",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "ethereum/src/api-types.ts",
																	"line": 177,
																	"character": 8,
																	"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L177"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-data.ts",
																	"qualifiedName": "Data"
																},
																"name": "Data",
																"package": "@ganache/utils"
															}
														},
														{
															"id": 137,
															"name": "size",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "ethereum/src/api-types.ts",
																	"line": 178,
																	"character": 8,
																	"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L178"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
																	"qualifiedName": "Quantity"
																},
																"name": "Quantity",
																"package": "@ganache/utils"
															}
														},
														{
															"id": 138,
															"name": "transactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "ethereum/src/api-types.ts",
																	"line": 179,
																	"character": 8,
																	"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L179"
																}
															],
															"type": {
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": -1,
																	"name": "IncludeTransactions",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "literal",
																	"value": true
																},
																"trueType": {
																	"type": "array",
																	"elementType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../transaction/src/transaction-types.ts",
																					"qualifiedName": "LegacyTransactionJSON"
																				},
																				"name": "LegacyTransactionJSON",
																				"package": "@ganache/ethereum-transaction"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../transaction/src/transaction-types.ts",
																					"qualifiedName": "EIP1559FeeMarketTransactionJSON"
																				},
																				"name": "EIP1559FeeMarketTransactionJSON",
																				"package": "@ganache/ethereum-transaction"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../transaction/src/transaction-types.ts",
																					"qualifiedName": "EIP2930AccessListTransactionJSON"
																				},
																				"name": "EIP2930AccessListTransactionJSON",
																				"package": "@ganache/ethereum-transaction"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "src/api-types.ts",
																					"qualifiedName": "Ethereum.Pool.Transaction"
																				},
																				"typeArguments": [
																					{
																						"type": "literal",
																						"value": "private"
																					}
																				],
																				"name": "Transaction",
																				"package": "@ganache/ethereum",
																				"qualifiedName": "Ethereum.Pool.Transaction"
																			}
																		]
																	}
																},
																"falseType": {
																	"type": "array",
																	"elementType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-data.ts",
																			"qualifiedName": "Data"
																		},
																		"name": "Data",
																		"package": "@ganache/utils"
																	}
																}
															}
														},
														{
															"id": 139,
															"name": "uncles",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "ethereum/src/api-types.ts",
																	"line": 182,
																	"character": 8,
																	"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L182"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-data.ts",
																		"qualifiedName": "Data"
																	},
																	"name": "Data",
																	"package": "@ganache/utils"
																}
															}
														},
														{
															"id": 140,
															"name": "withdrawals",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "ethereum/src/api-types.ts",
																	"line": 183,
																	"character": 8,
																	"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L183"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../block/src/serialize.ts",
																		"qualifiedName": "Withdrawal"
																	},
																	"name": "Withdrawal",
																	"package": "@ganache/ethereum-block"
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																136,
																137,
																138,
																139,
																140
															]
														}
													],
													"sources": [
														{
															"fileName": "ethereum/src/api-types.ts",
															"line": 176,
															"character": 6,
															"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L176"
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../block/src/runtime-block.ts",
													"qualifiedName": "BlockHeader"
												},
												"name": "BlockHeader",
												"package": "@ganache/ethereum-block"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 114,
					"name": "eth_getBlockByNumber",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1059,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1059"
						}
					],
					"signatures": [
						{
							"id": 115,
							"name": "eth_getBlockByNumber",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns information about a block by block number."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The block, "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " if the block doesn't exist.\n\n* "
											},
											{
												"kind": "code",
												"text": "`hash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - Hash of the block. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`parentHash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - Hash of the parent block.\n* "
											},
											{
												"kind": "code",
												"text": "`sha3Uncles`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - SHA3 of the uncles data in the block.\n* "
											},
											{
												"kind": "code",
												"text": "`miner`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 20 Bytes -  Address of the miner.\n* "
											},
											{
												"kind": "code",
												"text": "`stateRoot`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - The root of the state trie of the block.\n* "
											},
											{
												"kind": "code",
												"text": "`transactionsRoot`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - The root of the transaction trie of the block.\n* "
											},
											{
												"kind": "code",
												"text": "`receiptsRoot`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - The root of the receipts trie of the block.\n* "
											},
											{
												"kind": "code",
												"text": "`logsBloom`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 256 Bytes - The bloom filter for the logs of the block. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`difficulty`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - Integer of the difficulty of this block.\n* "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The block number. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`gasLimit`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The maximum gas allowed in the block.\n* "
											},
											{
												"kind": "code",
												"text": "`gasUsed`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - Total gas used by all transactions in the block.\n* "
											},
											{
												"kind": "code",
												"text": "`timestamp`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The unix timestamp for when the block was collated.\n* "
											},
											{
												"kind": "code",
												"text": "`extraData`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": " - Extra data for the block.\n* "
											},
											{
												"kind": "code",
												"text": "`mixHash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 256 Bytes - Hash identifier for the block.\n* "
											},
											{
												"kind": "code",
												"text": "`nonce`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 8 Bytes - Hash of the generated proof-of-work. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`totalDifficulty`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - Integer of the total difficulty of the chain until this block.\n* "
											},
											{
												"kind": "code",
												"text": "`size`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - Integer the size of the block in bytes.\n* "
											},
											{
												"kind": "code",
												"text": "`transactions`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`Array`"
											},
											{
												"kind": "text",
												"text": " - Array of transaction objects or 32 Bytes transaction hashes depending on the last parameter.\n* "
											},
											{
												"kind": "code",
												"text": "`uncles`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`Array`"
											},
											{
												"kind": "text",
												"text": " - Array of uncle hashes."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst block = await provider.request({ method: \"eth_getBlockByNumber\", params: [\"0x0\", false] });\nconsole.log(block);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1058,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1058"
								}
							],
							"typeParameter": [
								{
									"id": 116,
									"name": "IncludeTransactions",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"default": {
										"type": "literal",
										"value": false
									}
								}
							],
							"parameters": [
								{
									"id": 117,
									"name": "number",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Integer of a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the\ndefault block parameter."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 118,
									"name": "transactions",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " it returns the full transaction objects, if "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " only the hashes of the\ntransactions."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "IncludeTransactions",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 119,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 120,
															"name": "hash",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "ethereum/src/api-types.ts",
																	"line": 177,
																	"character": 8,
																	"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L177"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-data.ts",
																	"qualifiedName": "Data"
																},
																"name": "Data",
																"package": "@ganache/utils"
															}
														},
														{
															"id": 121,
															"name": "size",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "ethereum/src/api-types.ts",
																	"line": 178,
																	"character": 8,
																	"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L178"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
																	"qualifiedName": "Quantity"
																},
																"name": "Quantity",
																"package": "@ganache/utils"
															}
														},
														{
															"id": 122,
															"name": "transactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "ethereum/src/api-types.ts",
																	"line": 179,
																	"character": 8,
																	"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L179"
																}
															],
															"type": {
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": -1,
																	"name": "IncludeTransactions",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "literal",
																	"value": true
																},
																"trueType": {
																	"type": "array",
																	"elementType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../transaction/src/transaction-types.ts",
																					"qualifiedName": "LegacyTransactionJSON"
																				},
																				"name": "LegacyTransactionJSON",
																				"package": "@ganache/ethereum-transaction"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../transaction/src/transaction-types.ts",
																					"qualifiedName": "EIP1559FeeMarketTransactionJSON"
																				},
																				"name": "EIP1559FeeMarketTransactionJSON",
																				"package": "@ganache/ethereum-transaction"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../transaction/src/transaction-types.ts",
																					"qualifiedName": "EIP2930AccessListTransactionJSON"
																				},
																				"name": "EIP2930AccessListTransactionJSON",
																				"package": "@ganache/ethereum-transaction"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "src/api-types.ts",
																					"qualifiedName": "Ethereum.Pool.Transaction"
																				},
																				"typeArguments": [
																					{
																						"type": "literal",
																						"value": "private"
																					}
																				],
																				"name": "Transaction",
																				"package": "@ganache/ethereum",
																				"qualifiedName": "Ethereum.Pool.Transaction"
																			}
																		]
																	}
																},
																"falseType": {
																	"type": "array",
																	"elementType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-data.ts",
																			"qualifiedName": "Data"
																		},
																		"name": "Data",
																		"package": "@ganache/utils"
																	}
																}
															}
														},
														{
															"id": 123,
															"name": "uncles",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "ethereum/src/api-types.ts",
																	"line": 182,
																	"character": 8,
																	"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L182"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-data.ts",
																		"qualifiedName": "Data"
																	},
																	"name": "Data",
																	"package": "@ganache/utils"
																}
															}
														},
														{
															"id": 124,
															"name": "withdrawals",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "ethereum/src/api-types.ts",
																	"line": 183,
																	"character": 8,
																	"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L183"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../block/src/serialize.ts",
																		"qualifiedName": "Withdrawal"
																	},
																	"name": "Withdrawal",
																	"package": "@ganache/ethereum-block"
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																120,
																121,
																122,
																123,
																124
															]
														}
													],
													"sources": [
														{
															"fileName": "ethereum/src/api-types.ts",
															"line": 176,
															"character": 6,
															"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L176"
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../block/src/runtime-block.ts",
													"qualifiedName": "BlockHeader"
												},
												"name": "BlockHeader",
												"package": "@ganache/ethereum-block"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 144,
					"name": "eth_getBlockTransactionCountByHash",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1284,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1284"
						}
					],
					"signatures": [
						{
							"id": 145,
							"name": "eth_getBlockTransactionCountByHash",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of transactions in a block from a block matching the given block hash."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Number of transactions in the block."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\n// Simple.sol\n// // SPDX-License-Identifier: MIT\n//  pragma solidity >= 0.4.22 <0.9.0;\n//\n// import \"console.sol\";\n//\n//  contract Simple {\n//      uint256 public value;\n//      constructor() payable {\n//          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n//          value = 5;\n//      }\n//  }\nconst simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\nconst [from] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\nconst txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\nconst txCount = await provider.request({ method: \"eth_getBlockTransactionCountByHash\", params: [txReceipt.blockHash] });\nconsole.log(txCount);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1283,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1283"
								}
							],
							"parameters": [
								{
									"id": 146,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Hash of a block."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
											"qualifiedName": "Quantity"
										},
										"name": "Quantity",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 141,
					"name": "eth_getBlockTransactionCountByNumber",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1243,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1243"
						}
					],
					"signatures": [
						{
							"id": 142,
							"name": "eth_getBlockTransactionCountByNumber",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of transactions in a block from a block matching the given block number."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Integer of the number of transactions in the block."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst txCount = await provider.request({ method: \"eth_getBlockTransactionCountByNumber\", params: [\"0x0\"] });\nconsole.log(txCount);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1242,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1242"
								}
							],
							"parameters": [
								{
									"id": 143,
									"name": "blockNumber",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
											"qualifiedName": "Quantity"
										},
										"name": "Quantity",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 248,
					"name": "eth_getCode",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1729,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1729"
						}
					],
					"signatures": [
						{
							"id": 249,
							"name": "eth_getCode",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns code at a given address."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The code from the given address."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\n// Simple.sol\n// // SPDX-License-Identifier: MIT\n//  pragma solidity >= 0.4.22 <0.9.0;\n//\n// import \"console.sol\";\n//\n//  contract Simple {\n//      uint256 public value;\n//      constructor() payable {\n//          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n//          value = 5;\n//      }\n//  }\nconst simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\nconst [from] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\nconst txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\nconst code = await provider.request({ method: \"eth_getCode\", params: [txReceipt.contractAddress, \"latest\"] });\nconsole.log(code);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1728,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1728"
								}
							],
							"parameters": [
								{
									"id": 250,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 251,
									"name": "blockNumber",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Integer block number, or the string \"latest\", \"earliest\" or \"pending\"."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "Tag.latest"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-data.ts",
											"qualifiedName": "Data"
										},
										"name": "Data",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 147,
					"name": "eth_getCompilers",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1302,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1302"
						}
					],
					"signatures": [
						{
							"id": 148,
							"name": "eth_getCompilers",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a list of available compilers."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "List of available compilers."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst compilers = await provider.send(\"eth_getCompilers\");\nconsole.log(compilers);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1301,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1301"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 300,
					"name": "eth_getFilterChanges",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 2585,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2585"
						}
					],
					"signatures": [
						{
							"id": 301,
							"name": "eth_getFilterChanges",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Polling method for a filter, which returns an array of logs, block hashes,\nor transaction hashes, depending on the filter type, which occurred since\nlast poll."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An array of logs, block hashes, or transaction hashes, depending\non the filter type, which occurred since last poll.\n\nFor filters created with "
											},
											{
												"kind": "code",
												"text": "`eth_newBlockFilter`"
											},
											{
												"kind": "text",
												"text": " the return are block hashes ("
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes).\n\nFor filters created with "
											},
											{
												"kind": "code",
												"text": "`eth_newPendingTransactionFilter`"
											},
											{
												"kind": "text",
												"text": " the return are transaction hashes ("
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes).\n\nFor filters created with "
											},
											{
												"kind": "code",
												"text": "`eth_newFilter`"
											},
											{
												"kind": "text",
												"text": " the return are log objects with the following parameters:\n* "
											},
											{
												"kind": "code",
												"text": "`removed`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`TAG`"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " when the log was removed, "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " if its a valid log.\n* "
											},
											{
												"kind": "code",
												"text": "`logIndex`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - Integer of the log index position in the block. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`transactionIndex`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - Integer of the transactions index position. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`transactionHash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - Hash of the transaction where the log was. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`blockHash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - Hash of the block where the log was. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`blockNumber`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The block number where the log was in. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`address`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 20 Bytes - The address from which the log originated.\n* "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": " - Contains one or more 32 Bytes non-indexed arguments of the log.\n* "
											},
											{
												"kind": "code",
												"text": "`topics`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`Array of DATA`"
											},
											{
												"kind": "text",
												"text": " - Array of 0 to 4 32 Bytes "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": " of indexed log arguments."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\n// Logs.sol\n// // SPDX-License-Identifier: MIT\n// pragma solidity >= 0.4.22 <0.9.0;\n//\n// import \"console.sol\";\n//\n// contract Logs {\n//   event Event(uint256 indexed first, uint256 indexed second);\n//   constructor() {\n//     console.log(\"Entered Logs contract constructor.\");\n//     emit Event(1, 2);\n//   }\n//\n//   function logNTimes(uint8 n) public {\n//     console.log(\"Called logNTimes with the parameter: %o\", n);\n//     for (uint8 i = 0; i < n; i++) {\n//       emit Event(i, i);\n//     }\n//   }\n// }\n\nconst logsContract = \"0x608060405234801561001057600080fd5b5061003c60405180606001604052806022815260200161064b6022913961007160201b6100cd1760201c565b600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a36101f0565b61010d8160405160240161008591906101ce565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061011060201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561016f578082015181840152602081019050610154565b8381111561017e576000848401525b50505050565b6000601f19601f8301169050919050565b60006101a082610135565b6101aa8185610140565b93506101ba818560208601610151565b6101c381610184565b840191505092915050565b600060208201905081810360008301526101e88184610195565b905092915050565b61044c806101ff6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635e19e69f14610030575b600080fd5b61004a60048036038101906100459190610265565b61004c565b005b6100716040518060600160405280602781526020016103f0602791398260ff16610166565b60005b8160ff168160ff1610156100c9578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a380806100c1906102c1565b915050610074565b5050565b610163816040516024016100e19190610384565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b50565b6101fe828260405160240161017c9291906103bf565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b5050565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600080fd5b600060ff82169050919050565b6102428161022c565b811461024d57600080fd5b50565b60008135905061025f81610239565b92915050565b60006020828403121561027b5761027a610227565b5b600061028984828501610250565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102cc8261022c565b915060ff8214156102e0576102df610292565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561032557808201518184015260208101905061030a565b83811115610334576000848401525b50505050565b6000601f19601f8301169050919050565b6000610356826102eb565b61036081856102f6565b9350610370818560208601610307565b6103798161033a565b840191505092915050565b6000602082019050818103600083015261039e818461034b565b905092915050565b6000819050919050565b6103b9816103a6565b82525050565b600060408201905081810360008301526103d9818561034b565b90506103e860208301846103b0565b939250505056fe43616c6c6564206c6f674e54696d657320776974682074686520706172616d657465723a20256fa2646970667358221220efe39b9dc769a10eb54b65df8344ee92d584288e80e1c170636e1ede5dd7c3e064736f6c634300080b0033456e7465726564204c6f677320636f6e747261637420636f6e7374727563746f722e\";\nconst [from] = await provider.send(\"eth_accounts\");\nconst filterId = await provider.send(\"eth_newFilter\");\n\nconst subscriptionId = await provider.send(\"eth_subscribe\", [\"newHeads\"]);\nawait provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\n\nconst changes = await provider.request({ method: \"eth_getFilterChanges\", params: [filterId] });\nconsole.log(changes);\n\nawait provider.send(\"eth_unsubscribe\", [subscriptionId]);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 2584,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2584"
								}
							],
							"parameters": [
								{
									"id": 302,
									"name": "filterId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filter id."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-data.ts",
												"qualifiedName": "Data"
											},
											"name": "Data",
											"package": "@ganache/utils"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 306,
					"name": "eth_getFilterLogs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 2659,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2659"
						}
					],
					"signatures": [
						{
							"id": 307,
							"name": "eth_getFilterLogs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an array of all logs matching filter with given id."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of log objects, or an empty array."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\n// Logs.sol\n// // SPDX-License-Identifier: MIT\n// pragma solidity >= 0.4.22 <0.9.0;\n//\n// import \"console.sol\";\n//\n// contract Logs {\n//   event Event(uint256 indexed first, uint256 indexed second);\n//   constructor() {\n//     console.log(\"Entered Logs contract constructor.\");\n//     emit Event(1, 2);\n//   }\n//\n//   function logNTimes(uint8 n) public {\n//     console.log(\"Called logNTimes with the parameter: %o\", n);\n//     for (uint8 i = 0; i < n; i++) {\n//       emit Event(i, i);\n//     }\n//   }\n// }\n\nconst logsContract = \"0x608060405234801561001057600080fd5b5061003c60405180606001604052806022815260200161064b6022913961007160201b6100cd1760201c565b600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a36101f0565b61010d8160405160240161008591906101ce565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061011060201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561016f578082015181840152602081019050610154565b8381111561017e576000848401525b50505050565b6000601f19601f8301169050919050565b60006101a082610135565b6101aa8185610140565b93506101ba818560208601610151565b6101c381610184565b840191505092915050565b600060208201905081810360008301526101e88184610195565b905092915050565b61044c806101ff6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635e19e69f14610030575b600080fd5b61004a60048036038101906100459190610265565b61004c565b005b6100716040518060600160405280602781526020016103f0602791398260ff16610166565b60005b8160ff168160ff1610156100c9578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a380806100c1906102c1565b915050610074565b5050565b610163816040516024016100e19190610384565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b50565b6101fe828260405160240161017c9291906103bf565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b5050565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600080fd5b600060ff82169050919050565b6102428161022c565b811461024d57600080fd5b50565b60008135905061025f81610239565b92915050565b60006020828403121561027b5761027a610227565b5b600061028984828501610250565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102cc8261022c565b915060ff8214156102e0576102df610292565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561032557808201518184015260208101905061030a565b83811115610334576000848401525b50505050565b6000601f19601f8301169050919050565b6000610356826102eb565b61036081856102f6565b9350610370818560208601610307565b6103798161033a565b840191505092915050565b6000602082019050818103600083015261039e818461034b565b905092915050565b6000819050919050565b6103b9816103a6565b82525050565b600060408201905081810360008301526103d9818561034b565b90506103e860208301846103b0565b939250505056fe43616c6c6564206c6f674e54696d657320776974682074686520706172616d657465723a20256fa2646970667358221220efe39b9dc769a10eb54b65df8344ee92d584288e80e1c170636e1ede5dd7c3e064736f6c634300080b0033456e7465726564204c6f677320636f6e747261637420636f6e7374727563746f722e\";\nconst [from] = await provider.send(\"eth_accounts\");\nconst filterId = await provider.send(\"eth_newFilter\");\n\nawait provider.send(\"eth_subscribe\", [\"newHeads\"]);\nawait provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\n\nconst logs = await provider.request({ method: \"eth_getFilterLogs\", params: [filterId] });\nconsole.log(logs);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 2658,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2658"
								}
							],
							"parameters": [
								{
									"id": 308,
									"name": "filterId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filter id."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/api-types.ts",
											"qualifiedName": "Ethereum.Logs"
										},
										"name": "Logs",
										"package": "@ganache/ethereum",
										"qualifiedName": "Ethereum.Logs"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 309,
					"name": "eth_getLogs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 2720,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2720"
						}
					],
					"signatures": [
						{
							"id": 310,
							"name": "eth_getLogs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an array of all logs matching a given filter object.\n\nFilter options:\n* "
									},
									{
										"kind": "code",
										"text": "`fromBlock`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY | TAG`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer block number, or the string \"latest\", \"earliest\"\nor \"pending\".\n* "
									},
									{
										"kind": "code",
										"text": "`toBlock`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY | TAG`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer block number, or the string \"latest\", \"earliest\"\nor \"pending\".\n* "
									},
									{
										"kind": "code",
										"text": "`address`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA | Array`"
									},
									{
										"kind": "text",
										"text": " (optional) - Contract address or a list of addresses from which the logs should originate.\n* "
									},
									{
										"kind": "code",
										"text": "`topics`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`Array of DATA`"
									},
									{
										"kind": "text",
										"text": " (optional) - Array of 32 Bytes "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": " topics. Topics are order-dependent. Each topic can also\nbe an array of "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": " with \"or\" options.\n* "
									},
									{
										"kind": "code",
										"text": "`blockHash`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": ", 32 Bytes (optional) - Hash of the block to restrict logs from. If "
									},
									{
										"kind": "code",
										"text": "`blockHash`"
									},
									{
										"kind": "text",
										"text": " is present,\nthen neither "
									},
									{
										"kind": "code",
										"text": "`fromBlock`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`toBlock`"
									},
									{
										"kind": "text",
										"text": " are allowed."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of log objects, or an empty array."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\n// Logs.sol\n// // SPDX-License-Identifier: MIT\n// pragma solidity >= 0.4.22 <0.9.0;\n//\n// import \"console.sol\";\n//\n// contract Logs {\n//   event Event(uint256 indexed first, uint256 indexed second);\n//   constructor() {\n//     console.log(\"Entered Logs contract constructor.\");\n//     emit Event(1, 2);\n//   }\n//\n//   function logNTimes(uint8 n) public {\n//     console.log(\"Called logNTimes with the parameter: %o\", n);\n//     for (uint8 i = 0; i < n; i++) {\n//       emit Event(i, i);\n//     }\n//   }\n// }\n\nconst logsContract = \"0x608060405234801561001057600080fd5b5061003c60405180606001604052806022815260200161064b6022913961007160201b6100cd1760201c565b600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a36101f0565b61010d8160405160240161008591906101ce565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061011060201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561016f578082015181840152602081019050610154565b8381111561017e576000848401525b50505050565b6000601f19601f8301169050919050565b60006101a082610135565b6101aa8185610140565b93506101ba818560208601610151565b6101c381610184565b840191505092915050565b600060208201905081810360008301526101e88184610195565b905092915050565b61044c806101ff6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635e19e69f14610030575b600080fd5b61004a60048036038101906100459190610265565b61004c565b005b6100716040518060600160405280602781526020016103f0602791398260ff16610166565b60005b8160ff168160ff1610156100c9578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a380806100c1906102c1565b915050610074565b5050565b610163816040516024016100e19190610384565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b50565b6101fe828260405160240161017c9291906103bf565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b5050565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600080fd5b600060ff82169050919050565b6102428161022c565b811461024d57600080fd5b50565b60008135905061025f81610239565b92915050565b60006020828403121561027b5761027a610227565b5b600061028984828501610250565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102cc8261022c565b915060ff8214156102e0576102df610292565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561032557808201518184015260208101905061030a565b83811115610334576000848401525b50505050565b6000601f19601f8301169050919050565b6000610356826102eb565b61036081856102f6565b9350610370818560208601610307565b6103798161033a565b840191505092915050565b6000602082019050818103600083015261039e818461034b565b905092915050565b6000819050919050565b6103b9816103a6565b82525050565b600060408201905081810360008301526103d9818561034b565b90506103e860208301846103b0565b939250505056fe43616c6c6564206c6f674e54696d657320776974682074686520706172616d657465723a20256fa2646970667358221220efe39b9dc769a10eb54b65df8344ee92d584288e80e1c170636e1ede5dd7c3e064736f6c634300080b0033456e7465726564204c6f677320636f6e747261637420636f6e7374727563746f722e\";\nconst [from] = await provider.send(\"eth_accounts\");\n\nawait provider.send(\"eth_subscribe\", [\"newHeads\"]);\nconst txHash = await provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\n\nconst { contractAddress } = await provider.send(\"eth_getTransactionReceipt\", [txHash] );\n\nconst logs = await provider.request({ method: \"eth_getLogs\", params: [{ address: contractAddress }] });\nconsole.log(logs);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 2719,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2719"
								}
							],
							"parameters": [
								{
									"id": 311,
									"name": "filter",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filter options as seen in source."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../utils/src/types/filters.ts",
											"qualifiedName": "FilterArgs"
										},
										"name": "FilterArgs",
										"package": "@ganache/ethereum-utils"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/api-types.ts",
											"qualifiedName": "Ethereum.Logs"
										},
										"name": "Logs",
										"package": "@ganache/ethereum",
										"qualifiedName": "Ethereum.Logs"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 125,
					"name": "eth_getProof",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1126,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1126"
						}
					],
					"signatures": [
						{
							"id": 126,
							"name": "eth_getProof",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the details for the account at the specified address and block\nnumber, the account's Merkle proof, and the storage values for the\nspecified storage keys with their Merkle-proofs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object containing the details for the account at the specified\naddress and block number, the account's Merkle proof, and the\nstorage-values for the specified storage keys with their Merkle-proofs:\n* "
											},
											{
												"kind": "code",
												"text": "`balance`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - the balance of the account.\n* "
											},
											{
												"kind": "code",
												"text": "`codeHash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": " - 32 Bytes - hash of the account. A simple account\n  without code will return\n  "
											},
											{
												"kind": "code",
												"text": "`\"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\"`"
											},
											{
												"kind": "text",
												"text": "\n* "
											},
											{
												"kind": "code",
												"text": "`nonce`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - the nonce of the account.\n* "
											},
											{
												"kind": "code",
												"text": "`storageHash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": " - 32 Bytes - SHA3 of the StorageRoot. All storage\n  will deliver a MerkleProof starting with this rootHash.\n* "
											},
											{
												"kind": "code",
												"text": "`accountProof`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`Array`"
											},
											{
												"kind": "text",
												"text": " - Array of rlp-serialized MerkleTree-Nodes,\n  starting with the stateRoot-NODE, following the path of the SHA3\n  (address) as key.\n* "
											},
											{
												"kind": "code",
												"text": "`storageProof`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`Array`"
											},
											{
												"kind": "text",
												"text": " - Array of storage entries as requested. Each\n  entry is an object with the following properties:\n  * "
											},
											{
												"kind": "code",
												"text": "`key`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": " - the requested storage key.\n  * "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - the storage value.\n  * "
											},
											{
												"kind": "code",
												"text": "`proof`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`Array`"
											},
											{
												"kind": "text",
												"text": " - Array of rlp-serialized MerkleTree-Nodes, starting\n    with the storageHash-Node, following the path of the SHA3 (key) as\n    path."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\n// Simple.sol\n// // SPDX-License-Identifier: MIT\n//  pragma solidity >= 0.4.22 <0.9.0;\n//\n// import \"console.sol\";\n//\n//  contract Simple {\n//      uint256 public value;\n//      constructor() payable {\n//          console.log(\"Called Simple contract constructor. Setting `value` to 5.\");\n//          value = 5;\n//      }\n//  }\nconst simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\nconst [from] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\nconst txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\nconst proof = await provider.request({ method: \"eth_getProof\", params: [txReceipt.contractAddress, [\"0x0\", \"0x1\"], \"latest\"] });\nconsole.log(proof);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1125,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1125"
								}
							],
							"parameters": [
								{
									"id": 127,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Address of the account"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 128,
									"name": "storageKeys",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array of storage keys to be proofed."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 129,
									"name": "blockNumber",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A block number, or the string \"earliest\", \"latest\", or\n\"pending\"."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "Tag.latest"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../utils/src/types/account-proof.ts",
											"qualifiedName": "AccountProof"
										},
										"name": "AccountProof",
										"package": "@ganache/ethereum-utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 252,
					"name": "eth_getStorageAt",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1769,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1769"
						}
					],
					"signatures": [
						{
							"id": 253,
							"name": "eth_getStorageAt",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the value from a storage position at a given address."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The value in storage at the requested position."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\n// Simple.sol\n// // SPDX-License-Identifier: MIT\n//  pragma solidity >= 0.4.22 <0.9.0;\n//\n// import \"console.sol\";\n//\n//  contract Simple {\n//      uint256 public value;\n//      constructor() payable {\n//          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n//          value = 5;\n//      }\n//  }\nconst simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\nconst [from] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\nconst txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\nconst storageValue = await provider.request({ method: \"eth_getStorageAt\", params: [txReceipt.contractAddress, \"0x0\", \"latest\"] });\nconsole.log(storageValue);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1768,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1768"
								}
							],
							"parameters": [
								{
									"id": 254,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Address of the storage."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 255,
									"name": "position",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Integer of the position in the storage."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 256,
									"name": "blockNumber",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Integer block number, or the string \"latest\", \"earliest\"\n or \"pending\"."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "Tag.latest"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-data.ts",
											"qualifiedName": "Data"
										},
										"name": "Data",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 149,
					"name": "eth_getTransactionByBlockHashAndIndex",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1339,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1339"
						}
					],
					"signatures": [
						{
							"id": 150,
							"name": "eth_getTransactionByBlockHashAndIndex",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns information about a transaction by block hash and transaction index position."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The transaction object or "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " if no transaction was found.\n\n* "
											},
											{
												"kind": "code",
												"text": "`hash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - The transaction hash.\n* "
											},
											{
												"kind": "code",
												"text": "`nonce`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The number of transactions made by the sender prior to this one.\n* "
											},
											{
												"kind": "code",
												"text": "`blockHash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - The hash of the block the transaction is in. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`blockNumber`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The number of the block the transaction is in. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`transactionIndex`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The index position of the transaction in the block.\n* "
											},
											{
												"kind": "code",
												"text": "`from`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 20 Bytes - The address the transaction is sent from.\n* "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 20 Bytes - The address the transaction is sent to.\n* "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The value transferred in wei.\n* "
											},
											{
												"kind": "code",
												"text": "`gas`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The gas provided by the sender.\n* "
											},
											{
												"kind": "code",
												"text": "`gasPrice`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The price of gas in wei.\n* "
											},
											{
												"kind": "code",
												"text": "`input`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": " - The data sent along with the transaction.\n* "
											},
											{
												"kind": "code",
												"text": "`v`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - ECDSA recovery id.\n* "
											},
											{
												"kind": "code",
												"text": "`r`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - ECDSA signature r.\n* "
											},
											{
												"kind": "code",
												"text": "`s`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - ECDSA signature s."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\nconst { blockHash, transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n\nconst tx = await provider.request({ method: \"eth_getTransactionByBlockHashAndIndex\", params: [ blockHash, transactionIndex ] });\nconsole.log(tx);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1338,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1338"
								}
							],
							"parameters": [
								{
									"id": 151,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Hash of a block."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 152,
									"name": "index",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Integer of the transaction index position."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../transaction/src/transaction-types.ts",
													"qualifiedName": "LegacyTransactionJSON"
												},
												"name": "LegacyTransactionJSON",
												"package": "@ganache/ethereum-transaction"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../transaction/src/transaction-types.ts",
													"qualifiedName": "EIP1559FeeMarketTransactionJSON"
												},
												"name": "EIP1559FeeMarketTransactionJSON",
												"package": "@ganache/ethereum-transaction"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../transaction/src/transaction-types.ts",
													"qualifiedName": "EIP2930AccessListTransactionJSON"
												},
												"name": "EIP2930AccessListTransactionJSON",
												"package": "@ganache/ethereum-transaction"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 153,
					"name": "eth_getTransactionByBlockNumberAndIndex",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1385,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1385"
						}
					],
					"signatures": [
						{
							"id": 154,
							"name": "eth_getTransactionByBlockNumberAndIndex",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns information about a transaction by block number and transaction index position."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The transaction object or "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " if no transaction was found.\n\n* "
											},
											{
												"kind": "code",
												"text": "`hash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - The transaction hash.\n* "
											},
											{
												"kind": "code",
												"text": "`nonce`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The number of transactions made by the sender prior to this one.\n* "
											},
											{
												"kind": "code",
												"text": "`blockHash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - The hash of the block the transaction is in. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`blockNumber`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The number of the block the transaction is in. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`transactionIndex`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The index position of the transaction in the block.\n* "
											},
											{
												"kind": "code",
												"text": "`from`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 20 Bytes - The address the transaction is sent from.\n* "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 20 Bytes - The address the transaction is sent to.\n* "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The value transferred in wei.\n* "
											},
											{
												"kind": "code",
												"text": "`gas`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The gas provided by the sender.\n* "
											},
											{
												"kind": "code",
												"text": "`gasPrice`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The price of gas in wei.\n* "
											},
											{
												"kind": "code",
												"text": "`input`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": " - The data sent along with the transaction.\n* "
											},
											{
												"kind": "code",
												"text": "`v`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - ECDSA recovery id.\n* "
											},
											{
												"kind": "code",
												"text": "`r`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - ECDSA signature r.\n* "
											},
											{
												"kind": "code",
												"text": "`s`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - ECDSA signature s."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\nconst { transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n\nconst tx = await provider.request({ method: \"eth_getTransactionByBlockNumberAndIndex\", params: [ \"latest\", transactionIndex ] });\nconsole.log(tx);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1384,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1384"
								}
							],
							"parameters": [
								{
									"id": 155,
									"name": "number",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A block number, or the string \"earliest\", \"latest\" or \"pending\"."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 156,
									"name": "index",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Integer of the transaction index position."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../transaction/src/transaction-types.ts",
													"qualifiedName": "LegacyTransactionJSON"
												},
												"name": "LegacyTransactionJSON",
												"package": "@ganache/ethereum-transaction"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../transaction/src/transaction-types.ts",
													"qualifiedName": "EIP1559FeeMarketTransactionJSON"
												},
												"name": "EIP1559FeeMarketTransactionJSON",
												"package": "@ganache/ethereum-transaction"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../transaction/src/transaction-types.ts",
													"qualifiedName": "EIP2930AccessListTransactionJSON"
												},
												"name": "EIP2930AccessListTransactionJSON",
												"package": "@ganache/ethereum-transaction"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 257,
					"name": "eth_getTransactionByHash",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1841,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1841"
						}
					],
					"signatures": [
						{
							"id": 258,
							"name": "eth_getTransactionByHash",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the information about a transaction requested by transaction hash."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The transaction object or "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " if no transaction was found.\n\n* "
											},
											{
												"kind": "code",
												"text": "`hash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - The transaction hash.\n* "
											},
											{
												"kind": "code",
												"text": "`nonce`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The number of transactions made by the sender prior to this one.\n* "
											},
											{
												"kind": "code",
												"text": "`blockHash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - The hash of the block the transaction is in. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`blockNumber`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The number of the block the transaction is in. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`transactionIndex`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The index position of the transaction in the block.\n* "
											},
											{
												"kind": "code",
												"text": "`from`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 20 Bytes - The address the transaction is sent from.\n* "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 20 Bytes - The address the transaction is sent to.\n* "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The value transferred in wei.\n* "
											},
											{
												"kind": "code",
												"text": "`gas`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The gas provided by the sender.\n* "
											},
											{
												"kind": "code",
												"text": "`gasPrice`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The price of gas in wei.\n* "
											},
											{
												"kind": "code",
												"text": "`input`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": " - The data sent along with the transaction.\n* "
											},
											{
												"kind": "code",
												"text": "`v`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - ECDSA recovery id.\n* "
											},
											{
												"kind": "code",
												"text": "`r`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - ECDSA signature r.\n* "
											},
											{
												"kind": "code",
												"text": "`s`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - ECDSA signature s."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n\nconst tx = await provider.request({ method: \"eth_getTransactionByHash\", params: [ txHash ] });\nconsole.log(tx);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1840,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1840"
								}
							],
							"parameters": [
								{
									"id": 259,
									"name": "transactionHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Hash of a transaction."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../transaction/src/transaction-types.ts",
													"qualifiedName": "LegacyTransactionJSON"
												},
												"name": "LegacyTransactionJSON",
												"package": "@ganache/ethereum-transaction"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../transaction/src/transaction-types.ts",
													"qualifiedName": "EIP1559FeeMarketTransactionJSON"
												},
												"name": "EIP1559FeeMarketTransactionJSON",
												"package": "@ganache/ethereum-transaction"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../transaction/src/transaction-types.ts",
													"qualifiedName": "EIP2930AccessListTransactionJSON"
												},
												"name": "EIP2930AccessListTransactionJSON",
												"package": "@ganache/ethereum-transaction"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "src/api-types.ts",
													"qualifiedName": "Ethereum.Pool.Transaction"
												},
												"typeArguments": [
													{
														"type": "literal",
														"value": "private"
													}
												],
												"name": "Transaction",
												"package": "@ganache/ethereum",
												"qualifiedName": "Ethereum.Pool.Transaction"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 312,
					"name": "eth_getTransactionCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 2742,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2742"
						}
					],
					"signatures": [
						{
							"id": 313,
							"name": "eth_getTransactionCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of transactions sent from an address."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Number of transactions sent from this address."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nawait provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n\nconst txCount = await provider.request({ method: \"eth_getTransactionCount\", params: [ from, \"latest\" ] });\nconsole.log(txCount);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 2741,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2741"
								}
							],
							"parameters": [
								{
									"id": 314,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 20 Bytes - The address to get number of transactions sent from"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 315,
									"name": "blockNumber",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Integer block number, or the string \"latest\", \"earliest\"\nor \"pending\"."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "Tag.latest"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
											"qualifiedName": "Quantity"
										},
										"name": "Quantity",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 260,
					"name": "eth_getTransactionReceipt",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1883,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1883"
						}
					],
					"signatures": [
						{
							"id": 261,
							"name": "eth_getTransactionReceipt",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the receipt of a transaction by transaction hash.\n\nNote: The receipt is not available for pending transactions."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Returns the receipt of a transaction by transaction hash."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n\nconst txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [ txHash ] });\nconsole.log(txReceipt);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1882,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1882"
								}
							],
							"parameters": [
								{
									"id": 262,
									"name": "transactionHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Hash of a transaction."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../transaction/src/transaction-receipt.ts",
											"qualifiedName": "TransactionReceipt"
										},
										"name": "TransactionReceipt",
										"package": "@ganache/ethereum-transaction"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 163,
					"name": "eth_getUncleByBlockHashAndIndex",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1465,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1465"
						}
					],
					"signatures": [
						{
							"id": 164,
							"name": "eth_getUncleByBlockHashAndIndex",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns information about a uncle of a block by hash and uncle index position."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A block object or "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when no block is found.\n\n* "
											},
											{
												"kind": "code",
												"text": "`hash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - Hash of the block. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`parentHash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - Hash of the parent block.\n* "
											},
											{
												"kind": "code",
												"text": "`sha3Uncles`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - SHA3 of the uncles data in the block.\n* "
											},
											{
												"kind": "code",
												"text": "`miner`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 20 Bytes -  Address of the miner.\n* "
											},
											{
												"kind": "code",
												"text": "`stateRoot`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - The root of the state trie of the block.\n* "
											},
											{
												"kind": "code",
												"text": "`transactionsRoot`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - The root of the transaction trie of the block.\n* "
											},
											{
												"kind": "code",
												"text": "`receiptsRoot`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - The root of the receipts trie of the block.\n* "
											},
											{
												"kind": "code",
												"text": "`logsBloom`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 256 Bytes - The bloom filter for the logs of the block. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`difficulty`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - Integer of the difficulty of this block.\n* "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The block number. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`gasLimit`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The maximum gas allowed in the block.\n* "
											},
											{
												"kind": "code",
												"text": "`gasUsed`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - Total gas used by all transactions in the block.\n* "
											},
											{
												"kind": "code",
												"text": "`timestamp`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The unix timestamp for when the block was collated.\n* "
											},
											{
												"kind": "code",
												"text": "`extraData`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": " - Extra data for the block.\n* "
											},
											{
												"kind": "code",
												"text": "`mixHash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 256 Bytes - Hash identifier for the block.\n* "
											},
											{
												"kind": "code",
												"text": "`nonce`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 8 Bytes - Hash of the generated proof-of-work. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`totalDifficulty`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - Integer of the total difficulty of the chain until this block.\n* "
											},
											{
												"kind": "code",
												"text": "`size`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - Integer the size of the block in bytes.\n* "
											},
											{
												"kind": "code",
												"text": "`uncles`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`Array`"
											},
											{
												"kind": "text",
												"text": " - Array of uncle hashes.\n\n**NOTE: **The return does not contain a list of transactions in the uncle\nblock, to get this, make another request to "
											},
											{
												"kind": "code",
												"text": "`eth_getBlockByHash`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst blockHash = await provider.send(\"eth_getBlockByNumber\", [\"latest\"] );\nconst block = await provider.send(\"eth_getUncleByBlockHashAndIndex\", [blockHash, \"0x0\"] );\nconsole.log(block);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1464,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1464"
								}
							],
							"parameters": [
								{
									"id": 165,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Hash of a block."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 166,
									"name": "index",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The uncle's index position."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 167,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 189,
															"name": "baseFeePerGas",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 26,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 180,
															"name": "difficulty",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 17,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 186,
															"name": "extraData",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 23,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 183,
															"name": "gasLimit",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 20,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 184,
															"name": "gasUsed",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 21,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 168,
															"name": "hash",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "ethereum/src/api-types.ts",
																	"line": 177,
																	"character": 8,
																	"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L177"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 179,
															"name": "logsBloom",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 16,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 175,
															"name": "miner",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 12,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 187,
															"name": "mixHash",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 24,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 188,
															"name": "nonce",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 25,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 182,
															"name": "number",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 19,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 173,
															"name": "parentHash",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 10,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 178,
															"name": "receiptsRoot",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 15,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 174,
															"name": "sha3Uncles",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 11,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 169,
															"name": "size",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "ethereum/src/api-types.ts",
																	"line": 178,
																	"character": 8,
																	"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L178"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 176,
															"name": "stateRoot",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 13,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 185,
															"name": "timestamp",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 22,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 181,
															"name": "totalDifficulty",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 18,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 170,
															"name": "transactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "ethereum/src/api-types.ts",
																	"line": 179,
																	"character": 8,
																	"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L179"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "unknown",
																			"name": "{ hash: string; type?: string; nonce: string; blockHash: string; blockNumber: string; transactionIndex: string; from: string; to: string; value: string; gas: string; gasPrice: string; input: string; v: string; r: string; s: string; }"
																		},
																		{
																			"type": "unknown",
																			"name": "{ hash: string; type: string; chainId: string; nonce: string; blockHash: string; blockNumber: string; transactionIndex: string; from: string; to: string; value: string; maxPriorityFeePerGas: string; maxFeePerGas: string; gasPrice: string; gas: string; input: string; accessList: { address: string; storageKeys: string[]; }[]; v: string; r: string; s: string; }"
																		},
																		{
																			"type": "unknown",
																			"name": "{ hash: string; type: string; chainId: string; nonce: string; blockHash: string; blockNumber: string; transactionIndex: string; from: string; to: string; value: string; gas: string; gasPrice: string; input: string; accessList: { address: string; storageKeys: string[]; }[]; v: string; r: string; s: string; }"
																		},
																		{
																			"type": "unknown",
																			"name": "{ type?: string; nonce: string; value: string; r: string; s: string; from: string; blockNumber: null; blockHash: null; transactionIndex: null; gas: string; to: string; input: string; v: string; gasPrice: string; hash: string; }"
																		}
																	]
																}
															}
														},
														{
															"id": 177,
															"name": "transactionsRoot",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 14,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 171,
															"name": "uncles",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "ethereum/src/api-types.ts",
																	"line": 182,
																	"character": 8,
																	"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L182"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														},
														{
															"id": 172,
															"name": "withdrawals",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "ethereum/src/api-types.ts",
																	"line": 183,
																	"character": 8,
																	"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L183"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "unknown",
																	"name": "{ index: string; validatorIndex: string; address: string; amount: string; }"
																}
															}
														},
														{
															"id": 190,
															"name": "withdrawalsRoot",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 27,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																189,
																180,
																186,
																183,
																184,
																168,
																179,
																175,
																187,
																188,
																182,
																173,
																178,
																174,
																169,
																176,
																185,
																181,
																170,
																177,
																171,
																172,
																190
															]
														}
													],
													"sources": [
														{
															"fileName": "ethereum/src/provider.ts",
															"line": 106,
															"character": 6,
															"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/provider.ts#L106"
														}
													]
												}
											},
											{
												"type": "literal",
												"value": "transactions"
											}
										],
										"name": "Omit",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 191,
					"name": "eth_getUncleByBlockNumberAndIndex",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1506,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1506"
						}
					],
					"signatures": [
						{
							"id": 192,
							"name": "eth_getUncleByBlockNumberAndIndex",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns information about a uncle of a block by hash and uncle index position."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A block object or "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when no block is found.\n\n* "
											},
											{
												"kind": "code",
												"text": "`hash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - Hash of the block. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`parentHash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - Hash of the parent block.\n* "
											},
											{
												"kind": "code",
												"text": "`sha3Uncles`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - SHA3 of the uncles data in the block.\n* "
											},
											{
												"kind": "code",
												"text": "`miner`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 20 Bytes -  Address of the miner.\n* "
											},
											{
												"kind": "code",
												"text": "`stateRoot`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - The root of the state trie of the block.\n* "
											},
											{
												"kind": "code",
												"text": "`transactionsRoot`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - The root of the transaction trie of the block.\n* "
											},
											{
												"kind": "code",
												"text": "`receiptsRoot`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 32 Bytes - The root of the receipts trie of the block.\n* "
											},
											{
												"kind": "code",
												"text": "`logsBloom`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 256 Bytes - The bloom filter for the logs of the block. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`difficulty`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - Integer of the difficulty of this block.\n* "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The block number. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`gasLimit`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The maximum gas allowed in the block.\n* "
											},
											{
												"kind": "code",
												"text": "`gasUsed`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - Total gas used by all transactions in the block.\n* "
											},
											{
												"kind": "code",
												"text": "`timestamp`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - The unix timestamp for when the block was collated.\n* "
											},
											{
												"kind": "code",
												"text": "`extraData`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": " - Extra data for the block.\n* "
											},
											{
												"kind": "code",
												"text": "`mixHash`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 256 Bytes - Hash identifier for the block.\n* "
											},
											{
												"kind": "code",
												"text": "`nonce`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`DATA`"
											},
											{
												"kind": "text",
												"text": ", 8 Bytes - Hash of the generated proof-of-work. "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " when pending.\n* "
											},
											{
												"kind": "code",
												"text": "`totalDifficulty`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - Integer of the total difficulty of the chain until this block.\n* "
											},
											{
												"kind": "code",
												"text": "`size`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`QUANTITY`"
											},
											{
												"kind": "text",
												"text": " - Integer the size of the block in bytes.\n* "
											},
											{
												"kind": "code",
												"text": "`uncles`"
											},
											{
												"kind": "text",
												"text": ": "
											},
											{
												"kind": "code",
												"text": "`Array`"
											},
											{
												"kind": "text",
												"text": " - Array of uncle hashes.\n\n* **NOTE: **The return does not contain a list of transactions in the uncle\nblock, to get this, make another request to "
											},
											{
												"kind": "code",
												"text": "`eth_getBlockByHash`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst block = await provider.send(\"eth_getUncleByBlockNumberAndIndex\", [\"latest\", \"0x0\"] );\nconsole.log(block);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1505,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1505"
								}
							],
							"parameters": [
								{
									"id": 193,
									"name": "blockNumber",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A block number, or the string \"earliest\", \"latest\" or \"pending\"."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 194,
									"name": "uncleIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The uncle's index position."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 195,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 217,
															"name": "baseFeePerGas",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 26,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 208,
															"name": "difficulty",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 17,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 214,
															"name": "extraData",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 23,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 211,
															"name": "gasLimit",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 20,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 212,
															"name": "gasUsed",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 21,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 196,
															"name": "hash",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "ethereum/src/api-types.ts",
																	"line": 177,
																	"character": 8,
																	"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L177"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 207,
															"name": "logsBloom",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 16,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 203,
															"name": "miner",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 12,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 215,
															"name": "mixHash",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 24,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 216,
															"name": "nonce",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 25,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 210,
															"name": "number",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 19,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 201,
															"name": "parentHash",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 10,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 206,
															"name": "receiptsRoot",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 15,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 202,
															"name": "sha3Uncles",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 11,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 197,
															"name": "size",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "ethereum/src/api-types.ts",
																	"line": 178,
																	"character": 8,
																	"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L178"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 204,
															"name": "stateRoot",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 13,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 213,
															"name": "timestamp",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 22,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 209,
															"name": "totalDifficulty",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 18,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 198,
															"name": "transactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "ethereum/src/api-types.ts",
																	"line": 179,
																	"character": 8,
																	"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L179"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "unknown",
																			"name": "{ hash: string; type?: string; nonce: string; blockHash: string; blockNumber: string; transactionIndex: string; from: string; to: string; value: string; gas: string; gasPrice: string; input: string; v: string; r: string; s: string; }"
																		},
																		{
																			"type": "unknown",
																			"name": "{ hash: string; type: string; chainId: string; nonce: string; blockHash: string; blockNumber: string; transactionIndex: string; from: string; to: string; value: string; maxPriorityFeePerGas: string; maxFeePerGas: string; gasPrice: string; gas: string; input: string; accessList: { address: string; storageKeys: string[]; }[]; v: string; r: string; s: string; }"
																		},
																		{
																			"type": "unknown",
																			"name": "{ hash: string; type: string; chainId: string; nonce: string; blockHash: string; blockNumber: string; transactionIndex: string; from: string; to: string; value: string; gas: string; gasPrice: string; input: string; accessList: { address: string; storageKeys: string[]; }[]; v: string; r: string; s: string; }"
																		},
																		{
																			"type": "unknown",
																			"name": "{ type?: string; nonce: string; value: string; r: string; s: string; from: string; blockNumber: null; blockHash: null; transactionIndex: null; gas: string; to: string; input: string; v: string; gasPrice: string; hash: string; }"
																		}
																	]
																}
															}
														},
														{
															"id": 205,
															"name": "transactionsRoot",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 14,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 199,
															"name": "uncles",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "ethereum/src/api-types.ts",
																	"line": 182,
																	"character": 8,
																	"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L182"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														},
														{
															"id": 200,
															"name": "withdrawals",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "ethereum/src/api-types.ts",
																	"line": 183,
																	"character": 8,
																	"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api-types.ts#L183"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "unknown",
																	"name": "{ index: string; validatorIndex: string; address: string; amount: string; }"
																}
															}
														},
														{
															"id": 218,
															"name": "withdrawalsRoot",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "block/typings/src/runtime-block.d.ts",
																	"line": 27,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																217,
																208,
																214,
																211,
																212,
																196,
																207,
																203,
																215,
																216,
																210,
																201,
																206,
																202,
																197,
																204,
																213,
																209,
																198,
																205,
																199,
																200,
																218
															]
														}
													],
													"sources": [
														{
															"fileName": "ethereum/src/provider.ts",
															"line": 106,
															"character": 6,
															"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/provider.ts#L106"
														}
													]
												}
											},
											{
												"type": "literal",
												"value": "transactions"
											}
										],
										"name": "Omit",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 157,
					"name": "eth_getUncleCountByBlockHash",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1408,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1408"
						}
					],
					"signatures": [
						{
							"id": 158,
							"name": "eth_getUncleCountByBlockHash",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of uncles in a block from a block matching the given block hash."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The number of uncles in a block."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst blockHash = await provider.send(\"eth_getBlockByNumber\", [\"latest\"] );\nconst uncleCount = await provider.send(\"eth_getUncleCountByBlockHash\", [blockHash] );\nconsole.log(uncleCount);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1407,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1407"
								}
							],
							"parameters": [
								{
									"id": 159,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Hash of a block."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
											"qualifiedName": "Quantity"
										},
										"name": "Quantity",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 160,
					"name": "eth_getUncleCountByBlockNumber",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1423,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1423"
						}
					],
					"signatures": [
						{
							"id": 161,
							"name": "eth_getUncleCountByBlockNumber",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of uncles in a block from a block matching the given block hash."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The number of uncles in a block."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst uncleCount = await provider.send(\"eth_getUncleCountByBlockNumber\", [\"latest\"] );\nconsole.log(uncleCount);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1422,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1422"
								}
							],
							"parameters": [
								{
									"id": 162,
									"name": "blockNumber",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A block number, or the string \"earliest\", \"latest\" or \"pending\"."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
											"qualifiedName": "Quantity"
										},
										"name": "Quantity",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 219,
					"name": "eth_getWork",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1526,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1526"
						}
					],
					"signatures": [
						{
							"id": 220,
							"name": "eth_getWork",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns: An Array with the following elements\n1: "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": ", 32 Bytes - current block header pow-hash\n2: "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": ", 32 Bytes - the seed hash used for the DAG.\n3: "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": ", 32 Bytes - the boundary condition (\"target\"), 2^256 / difficulty."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The hash of the current block, the seedHash, and the boundary condition to be met (\"target\")."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"eth_getWork\", [] ));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1525,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1525"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "tuple"
											},
											{
												"type": "tuple",
												"elements": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 232,
					"name": "eth_hashrate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1595,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1595"
						}
					],
					"signatures": [
						{
							"id": 233,
							"name": "eth_hashrate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of hashes per second that the node is mining with."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Number of hashes per second."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst hashrate = await provider.request({ method: \"eth_hashrate\", params: [] });\nconsole.log(hashrate);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1594,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1594"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
											"qualifiedName": "Quantity"
										},
										"name": "Quantity",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 236,
					"name": "eth_maxPriorityFeePerGas",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1623,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1623"
						}
					],
					"signatures": [
						{
							"id": 237,
							"name": "eth_maxPriorityFeePerGas",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a "
									},
									{
										"kind": "code",
										"text": "`maxPriorityFeePerGas`"
									},
									{
										"kind": "text",
										"text": " value suitable for quick transaction inclusion."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The maxPriorityFeePerGas in wei."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst suggestedTip = await provider.request({ method: \"eth_maxPriorityFeePerGas\", params: [] });\nconsole.log(suggestedTip);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1622,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1622"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
											"qualifiedName": "Quantity"
										},
										"name": "Quantity",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 230,
					"name": "eth_mining",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1580,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1580"
						}
					],
					"signatures": [
						{
							"id": 231,
							"name": "eth_mining",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if client is actively mining new blocks."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "returns "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the client is mining, otherwise "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst isMining = await provider.request({ method: \"eth_mining\", params: [] });\nconsole.log(isMining);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1579,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1579"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 293,
					"name": "eth_newBlockFilter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 2417,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2417"
						}
					],
					"signatures": [
						{
							"id": 294,
							"name": "eth_newBlockFilter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a filter in the node, to notify when a new block arrives. To check\nif the state has changed, call "
									},
									{
										"kind": "code",
										"text": "`eth_getFilterChanges`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A filter id."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst filterId = await provider.request({ method: \"eth_newBlockFilter\", params: [] });\nconsole.log(filterId);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 2416,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2416"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
											"qualifiedName": "Quantity"
										},
										"name": "Quantity",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 297,
					"name": "eth_newFilter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 2503,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2503"
						}
					],
					"signatures": [
						{
							"id": 298,
							"name": "eth_newFilter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a filter object, based on filter options, to notify when the state\nchanges (logs). To check if the state has changed, call\n"
									},
									{
										"kind": "code",
										"text": "`eth_getFilterChanges`"
									},
									{
										"kind": "text",
										"text": ".\n\nIf the from "
									},
									{
										"kind": "code",
										"text": "`fromBlock`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`toBlock`"
									},
									{
										"kind": "text",
										"text": " option are equal to \"latest\" the\nfilter continually append logs for whatever block is seen as latest at the\ntime the block was mined, not just for the block that was \"latest\" when the\nfilter was created.\n\n### A note on specifying topic filters:\nTopics are order-dependent. A transaction with a log with topics [A, B]\nwill be matched by the following topic filters:\n * "
									},
									{
										"kind": "code",
										"text": "`[]`"
									},
									{
										"kind": "text",
										"text": " “anything”\n * "
									},
									{
										"kind": "code",
										"text": "`[A]`"
									},
									{
										"kind": "text",
										"text": " “A in first position (and anything after)”\n * "
									},
									{
										"kind": "code",
										"text": "`[null, B]`"
									},
									{
										"kind": "text",
										"text": " “anything in first position AND B in second position (and\nanything after)”\n * "
									},
									{
										"kind": "code",
										"text": "`[A, B]`"
									},
									{
										"kind": "text",
										"text": " “A in first position AND B in second position (and anything\nafter)”\n * "
									},
									{
										"kind": "code",
										"text": "`[[A, B], [A, B]]`"
									},
									{
										"kind": "text",
										"text": " “(A OR B) in first position AND (A OR B) in second\nposition (and anything after)”\n\nFilter options:\n* "
									},
									{
										"kind": "code",
										"text": "`fromBlock`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY | TAG`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer block number, or the string \"latest\", \"earliest\"\nor \"pending\".\n* "
									},
									{
										"kind": "code",
										"text": "`toBlock`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY | TAG`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer block number, or the string \"latest\", \"earliest\"\nor \"pending\".\n* "
									},
									{
										"kind": "code",
										"text": "`address`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA | Array`"
									},
									{
										"kind": "text",
										"text": " (optional) - Contract address or a list of addresses from which the logs should originate.\n* "
									},
									{
										"kind": "code",
										"text": "`topics`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`Array of DATA`"
									},
									{
										"kind": "text",
										"text": " (optional) - Array of 32 Bytes "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": " topics. Topics are order-dependent. Each topic can also\nbe an array of "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": " with \"or\" options."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A filter id."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst filterId = await provider.request({ method: \"eth_newFilter\", params: [] });\nconsole.log(filterId);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 2502,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2502"
								}
							],
							"parameters": [
								{
									"id": 299,
									"name": "filter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filter options as seen in source."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../utils/src/types/filters.ts",
											"qualifiedName": "RangeFilterArgs"
										},
										"name": "RangeFilterArgs",
										"package": "@ganache/ethereum-utils"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
											"qualifiedName": "Quantity"
										},
										"name": "Quantity",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 295,
					"name": "eth_newPendingTransactionFilter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 2444,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2444"
						}
					],
					"signatures": [
						{
							"id": 296,
							"name": "eth_newPendingTransactionFilter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a filter in the node, to notify when new pending transactions\narrive. To check if the state has changed, call "
									},
									{
										"kind": "code",
										"text": "`eth_getFilterChanges`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A filter id."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst filterId = await provider.request({ method: \"eth_newPendingTransactionFilter\", params: [] });\nconsole.log(filterId);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 2443,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2443"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
											"qualifiedName": "Quantity"
										},
										"name": "Quantity",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 108,
					"name": "eth_protocolVersion",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 984,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L984"
						}
					],
					"signatures": [
						{
							"id": 109,
							"name": "eth_protocolVersion",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current ethereum protocol version."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The current ethereum protocol version."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst version = await provider.request({ method: \"eth_protocolVersion\", params: [] });\nconsole.log(version);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 983,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L983"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-data.ts",
											"qualifiedName": "Data"
										},
										"name": "Data",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 269,
					"name": "eth_sendRawTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 2039,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2039"
						}
					],
					"signatures": [
						{
							"id": 270,
							"name": "eth_sendRawTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates new message call transaction or a contract creation for signed transactions."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The transaction hash."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst signedTx = await provider.request({ method: \"eth_signTransaction\", params: [{ from, to, gas: \"0x5b8d80\", maxFeePerGas: \"0xffffffff\" }] });\nconst txHash = await provider.send(\"eth_sendRawTransaction\", [signedTx] );\nconsole.log(txHash);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 2038,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2038"
								}
							],
							"parameters": [
								{
									"id": 271,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The signed transaction data."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-data.ts",
											"qualifiedName": "Data"
										},
										"name": "Data",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 263,
					"name": "eth_sendTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1944,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1944"
						}
					],
					"signatures": [
						{
							"id": 264,
							"name": "eth_sendTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates new message call transaction or a contract creation, if the data field contains code.\n\nTransaction call object:\n* "
									},
									{
										"kind": "code",
										"text": "`from`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": ", 20 bytes (optional) - The address the transaction is sent from.\n* "
									},
									{
										"kind": "code",
										"text": "`to`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": ", 20 bytes - The address the transaction is sent to.\n* "
									},
									{
										"kind": "code",
										"text": "`gas`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer of the maximum gas allowance for the transaction.\n* "
									},
									{
										"kind": "code",
										"text": "`gasPrice`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer of the price of gas in wei.\n* "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer of the value in wei.\n* "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": " (optional) - Hash of the method signature and the ABI encoded parameters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The transaction hash."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\nconsole.log(txHash);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1943,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1943"
								}
							],
							"parameters": [
								{
									"id": 265,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction call object as seen in source."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/api-types.ts",
											"qualifiedName": "Ethereum.Transaction"
										},
										"name": "Transaction",
										"package": "@ganache/ethereum",
										"qualifiedName": "Ethereum.Transaction"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-data.ts",
											"qualifiedName": "Data"
										},
										"name": "Data",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 272,
					"name": "eth_sign",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 2072,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2072"
						}
					],
					"signatures": [
						{
							"id": 273,
							"name": "eth_sign",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sign method calculates an Ethereum specific signature with:\n"
									},
									{
										"kind": "code",
										"text": "`sign(keccak256(\"\\x19Ethereum Signed Message:\\n\" + message.length + message)))`"
									},
									{
										"kind": "text",
										"text": ".\n\nBy adding a prefix to the message makes the calculated signature\nrecognizable as an Ethereum specific signature. This prevents misuse where a malicious DApp can sign arbitrary data\n (e.g. transaction) and use the signature to impersonate the victim.\n\nNote the address to sign with must be unlocked."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Signature - a hex encoded 129 byte array\nstarting with "
											},
											{
												"kind": "code",
												"text": "`0x`"
											},
											{
												"kind": "text",
												"text": ". It encodes the "
											},
											{
												"kind": "code",
												"text": "`r`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`s`"
											},
											{
												"kind": "text",
												"text": ", and "
											},
											{
												"kind": "code",
												"text": "`v`"
											},
											{
												"kind": "text",
												"text": " parameters from\nappendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n in big-endian format. Bytes 0...64 contain the "
											},
											{
												"kind": "code",
												"text": "`r`"
											},
											{
												"kind": "text",
												"text": " parameter, bytes\n64...128 the "
											},
											{
												"kind": "code",
												"text": "`s`"
											},
											{
												"kind": "text",
												"text": " parameter, and the last byte the "
											},
											{
												"kind": "code",
												"text": "`v`"
											},
											{
												"kind": "text",
												"text": " parameter. Note\nthat the "
											},
											{
												"kind": "code",
												"text": "`v`"
											},
											{
												"kind": "text",
												"text": " parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155)."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst [account] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst msg = \"0x307866666666666666666666\";\nconst signature = await provider.request({ method: \"eth_sign\", params: [account, msg] });\nconsole.log(signature);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 2071,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2071"
								}
							],
							"parameters": [
								{
									"id": 274,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Address to sign with."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 275,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Message to sign."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 266,
					"name": "eth_signTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 2000,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2000"
						}
					],
					"signatures": [
						{
							"id": 267,
							"name": "eth_signTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Signs a transaction that can be submitted to the network at a later time using "
									},
									{
										"kind": "code",
										"text": "`eth_sendRawTransaction`"
									},
									{
										"kind": "text",
										"text": ".\n\nTransaction call object:\n* "
									},
									{
										"kind": "code",
										"text": "`from`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": ", 20 bytes (optional) - The address the transaction is sent from.\n* "
									},
									{
										"kind": "code",
										"text": "`to`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": ", 20 bytes - The address the transaction is sent to.\n* "
									},
									{
										"kind": "code",
										"text": "`gas`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer of the maximum gas allowance for the transaction.\n* "
									},
									{
										"kind": "code",
										"text": "`gasPrice`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer of the price of gas in wei.\n* "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer of the value in wei.\n* "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": " (optional) - Hash of the method signature and the ABI encoded parameters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The raw, signed transaction."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst signedTx = await provider.request({ method: \"eth_signTransaction\", params: [{ from, to }] });\nconsole.log(signedTx)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1999,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1999"
								}
							],
							"parameters": [
								{
									"id": 268,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction call object as seen in source."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/api-types.ts",
											"qualifiedName": "Ethereum.Transaction"
										},
										"name": "Transaction",
										"package": "@ganache/ethereum",
										"qualifiedName": "Ethereum.Transaction"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-data.ts",
											"qualifiedName": "Data"
										},
										"name": "Data",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 276,
					"name": "eth_signTypedData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 2142,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2142"
						}
					],
					"signatures": [
						{
							"id": 277,
							"name": "eth_signTypedData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identical to eth_signTypedData_v4."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Signature. As in "
											},
											{
												"kind": "code",
												"text": "`eth_sign`"
											},
											{
												"kind": "text",
												"text": ", it is a hex encoded 129 byte array\nstarting with "
											},
											{
												"kind": "code",
												"text": "`0x`"
											},
											{
												"kind": "text",
												"text": ". It encodes the "
											},
											{
												"kind": "code",
												"text": "`r`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`s`"
											},
											{
												"kind": "text",
												"text": ", and "
											},
											{
												"kind": "code",
												"text": "`v`"
											},
											{
												"kind": "text",
												"text": " parameters from\nappendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n in big-endian format. Bytes 0...64 contain the "
											},
											{
												"kind": "code",
												"text": "`r`"
											},
											{
												"kind": "text",
												"text": " parameter, bytes\n64...128 the "
											},
											{
												"kind": "code",
												"text": "`s`"
											},
											{
												"kind": "text",
												"text": " parameter, and the last byte the "
											},
											{
												"kind": "code",
												"text": "`v`"
											},
											{
												"kind": "text",
												"text": " parameter. Note\nthat the "
											},
											{
												"kind": "code",
												"text": "`v`"
											},
											{
												"kind": "text",
												"text": " parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155)."
											}
										]
									},
									{
										"tag": "@EIP",
										"content": [
											{
												"kind": "text",
												"text": "[712](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md)"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst [account] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst typedData = {\n types: {\n   EIP712Domain: [\n     { name: 'name', type: 'string' },\n     { name: 'version', type: 'string' },\n     { name: 'chainId', type: 'uint256' },\n     { name: 'verifyingContract', type: 'address' },\n   ],\n   Person: [\n     { name: 'name', type: 'string' },\n     { name: 'wallet', type: 'address' }\n   ],\n   Mail: [\n     { name: 'from', type: 'Person' },\n     { name: 'to', type: 'Person' },\n     { name: 'contents', type: 'string' }\n   ],\n },\n primaryType: 'Mail',\n domain: {\n   name: 'Ether Mail',\n   version: '1',\n   chainId: 1,\n   verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n },\n message: {\n   from: {\n     name: 'Cow',\n     wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n   },\n   to: {\n     name: 'Bob',\n     wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n   },\n   contents: 'Hello, Bob!',\n },\n};\nconst signature = await provider.request({ method: \"eth_signTypedData\", params: [account, typedData] });\nconsole.log(signature);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 2141,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2141"
								}
							],
							"parameters": [
								{
									"id": 278,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Address of the account that will sign the messages."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 279,
									"name": "typedData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Typed structured data to be signed."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/eth-sig-util/index.d.ts",
											"qualifiedName": "TypedMessage"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/eth-sig-util/index.d.ts",
													"qualifiedName": "MessageTypes"
												},
												"name": "MessageTypes",
												"package": "eth-sig-util"
											}
										],
										"name": "TypedMessage",
										"package": "eth-sig-util"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 280,
					"name": "eth_signTypedData_v4",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 2202,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2202"
						}
					],
					"signatures": [
						{
							"id": 281,
							"name": "eth_signTypedData_v4",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Signature. As in "
											},
											{
												"kind": "code",
												"text": "`eth_sign`"
											},
											{
												"kind": "text",
												"text": ", it is a hex encoded 129 byte array\nstarting with "
											},
											{
												"kind": "code",
												"text": "`0x`"
											},
											{
												"kind": "text",
												"text": ". It encodes the "
											},
											{
												"kind": "code",
												"text": "`r`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`s`"
											},
											{
												"kind": "text",
												"text": ", and "
											},
											{
												"kind": "code",
												"text": "`v`"
											},
											{
												"kind": "text",
												"text": " parameters from\nappendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n in big-endian format. Bytes 0...64 contain the "
											},
											{
												"kind": "code",
												"text": "`r`"
											},
											{
												"kind": "text",
												"text": " parameter, bytes\n64...128 the "
											},
											{
												"kind": "code",
												"text": "`s`"
											},
											{
												"kind": "text",
												"text": " parameter, and the last byte the "
											},
											{
												"kind": "code",
												"text": "`v`"
											},
											{
												"kind": "text",
												"text": " parameter. Note\nthat the "
											},
											{
												"kind": "code",
												"text": "`v`"
											},
											{
												"kind": "text",
												"text": " parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155)."
											}
										]
									},
									{
										"tag": "@EIP",
										"content": [
											{
												"kind": "text",
												"text": "[712](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md)"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst [account] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst typedData = {\n types: {\n   EIP712Domain: [\n     { name: 'name', type: 'string' },\n     { name: 'version', type: 'string' },\n     { name: 'chainId', type: 'uint256' },\n     { name: 'verifyingContract', type: 'address' },\n   ],\n   Person: [\n     { name: 'name', type: 'string' },\n     { name: 'wallet', type: 'address' }\n   ],\n   Mail: [\n     { name: 'from', type: 'Person' },\n     { name: 'to', type: 'Person' },\n     { name: 'contents', type: 'string' }\n   ],\n },\n primaryType: 'Mail',\n domain: {\n   name: 'Ether Mail',\n   version: '1',\n   chainId: 1,\n   verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n },\n message: {\n   from: {\n     name: 'Cow',\n     wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n   },\n   to: {\n     name: 'Bob',\n     wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n   },\n   contents: 'Hello, Bob!',\n },\n};\nconst signature = await provider.request({ method: \"eth_signTypedData_v4\", params: [account, typedData] });\nconsole.log(signature);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 2201,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2201"
								}
							],
							"parameters": [
								{
									"id": 282,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Address of the account that will sign the messages."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 283,
									"name": "typedData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Typed structured data to be signed."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/eth-sig-util/index.d.ts",
											"qualifiedName": "TypedMessage"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/eth-sig-util/index.d.ts",
													"qualifiedName": "MessageTypes"
												},
												"name": "MessageTypes",
												"package": "eth-sig-util"
											}
										],
										"name": "TypedMessage",
										"package": "eth-sig-util"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 226,
					"name": "eth_submitHashrate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1566,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1566"
						}
					],
					"signatures": [
						{
							"id": 227,
							"name": "eth_submitHashrate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Used for submitting mining hashrate."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if submitting went through successfully and "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " otherwise."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst hashRate = \"0x0000000000000000000000000000000000000000000000000000000000000001\";\nconst clientId = \"0xb2222a74119abd18dbcb7d1f661c6578b7bbeb4984c50e66ed538347f606b971\";\nconst result = await provider.request({ method: \"eth_submitHashrate\", params: [hashRate, clientId] });\nconsole.log(result);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1565,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1565"
								}
							],
							"parameters": [
								{
									"id": 228,
									"name": "hashRate",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A hexadecimal string representation (32 bytes) of the hash rate."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 229,
									"name": "clientID",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A random hexadecimal(32 bytes) ID identifying the client."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 221,
					"name": "eth_submitWork",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1547,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1547"
						}
					],
					"signatures": [
						{
							"id": 222,
							"name": "eth_submitWork",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Used for submitting a proof-of-work solution."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the provided solution is valid, otherwise "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst nonce = \"0xe0df4bd14ab39a71\";\nconst powHash = \"0x0000000000000000000000000000000000000000000000000000000000000001\";\nconst digest = \"0xb2222a74119abd18dbcb7d1f661c6578b7bbeb4984c50e66ed538347f606b971\";\nconst result = await provider.request({ method: \"eth_submitWork\", params: [nonce, powHash, digest] });\nconsole.log(result);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1546,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1546"
								}
							],
							"parameters": [
								{
									"id": 223,
									"name": "nonce",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The nonce found (64 bits)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 224,
									"name": "powHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The header's pow-hash (256 bits)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 225,
									"name": "digest",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The mix digest (256 bits)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 284,
					"name": "eth_subscribe",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 2250,
							"character": 2,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2250"
						},
						{
							"fileName": "ethereum/src/api.ts",
							"line": 2265,
							"character": 2,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2265"
						},
						{
							"fileName": "ethereum/src/api.ts",
							"line": 2270,
							"character": 2,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2270"
						}
					],
					"signatures": [
						{
							"id": 285,
							"name": "eth_subscribe",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Starts a subscription to a particular event. For every event that matches\nthe subscription a JSON-RPC notification with event details and\nsubscription ID will be sent to a client."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A subscription id."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst subscriptionId = await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconsole.log(subscriptionId);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 2250,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2250"
								}
							],
							"parameters": [
								{
									"id": 286,
									"name": "subscriptionName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Name for the subscription."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../utils/src/types/subscriptions.ts",
											"qualifiedName": "SubscriptionName"
										},
										"name": "SubscriptionName",
										"package": "@ganache/ethereum-utils"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../utils/src/things/promievent.ts",
									"qualifiedName": "PromiEvent"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
											"qualifiedName": "Quantity"
										},
										"name": "Quantity",
										"package": "@ganache/utils"
									}
								],
								"name": "PromiEvent",
								"package": "@ganache/utils"
							}
						},
						{
							"id": 287,
							"name": "eth_subscribe",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Starts a subscription to a particular event. For every event that matches\nthe subscription a JSON-RPC notification with event details and\nsubscription ID will be sent to a client."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A subscription id."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 2265,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2265"
								}
							],
							"parameters": [
								{
									"id": 288,
									"name": "subscriptionName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "logs"
									}
								},
								{
									"id": 289,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Filter options:\n * "
											},
											{
												"kind": "code",
												"text": "`address`"
											},
											{
												"kind": "text",
												"text": ": either an address or an array of addresses. Only logs that\n   are created from these addresses are returned\n * "
											},
											{
												"kind": "code",
												"text": "`topics`"
											},
											{
												"kind": "text",
												"text": ", only logs which match the specified topics"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../utils/src/types/filters.ts",
											"qualifiedName": "BaseFilterArgs"
										},
										"name": "BaseFilterArgs",
										"package": "@ganache/ethereum-utils"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../utils/src/things/promievent.ts",
									"qualifiedName": "PromiEvent"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
											"qualifiedName": "Quantity"
										},
										"name": "Quantity",
										"package": "@ganache/utils"
									}
								],
								"name": "PromiEvent",
								"package": "@ganache/utils"
							}
						}
					]
				},
				{
					"id": 110,
					"name": "eth_syncing",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 1005,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1005"
						}
					],
					"signatures": [
						{
							"id": 111,
							"name": "eth_syncing",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an object containing data about the sync status or "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " when not syncing."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object with sync status data or "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": ", when not syncing.\n\n* "
											},
											{
												"kind": "code",
												"text": "`startingBlock`"
											},
											{
												"kind": "text",
												"text": ": {bigint} The block at which the import started (will\n    only be reset, after the sync reached his head).\n* "
											},
											{
												"kind": "code",
												"text": "`currentBlock`"
											},
											{
												"kind": "text",
												"text": ": {bigint} The current block, same as "
											},
											{
												"kind": "code",
												"text": "`eth_blockNumber`"
											},
											{
												"kind": "text",
												"text": ".\n* "
											},
											{
												"kind": "code",
												"text": "`highestBlock`"
											},
											{
												"kind": "text",
												"text": ": {bigint} The estimated highest block."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst result = await provider.request({ method: \"eth_syncing\", params: [] });\nconsole.log(result);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 1004,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L1004"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 303,
					"name": "eth_uninstallFilter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 2611,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2611"
						}
					],
					"signatures": [
						{
							"id": 304,
							"name": "eth_uninstallFilter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Uninstalls a filter with given id. Should always be called when watch is\nno longer needed."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the filter was successfully uninstalled, otherwise\n"
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst filterId = await provider.request({ method: \"eth_newFilter\", params: [] });\nconst result = await provider.request({ method: \"eth_uninstallFilter\", params: [filterId] });\nconsole.log(result);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 2610,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2610"
								}
							],
							"parameters": [
								{
									"id": 305,
									"name": "filterId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filter id."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 290,
					"name": "eth_unsubscribe",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 2393,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2393"
						}
					],
					"signatures": [
						{
							"id": 291,
							"name": "eth_unsubscribe",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Cancel a subscription to a particular event. Returns a boolean indicating\nif the subscription was successfully cancelled."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if subscription was cancelled successfully, otherwise "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst subscriptionId = await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst result = await provider.request({ method: \"eth_unsubscribe\", params: [subscriptionId] });\nconsole.log(result);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 2392,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L2392"
								}
							],
							"parameters": [
								{
									"id": 292,
									"name": "subscriptionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the subscription to unsubscribe to."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 71,
					"name": "evm_addAccount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 668,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L668"
						}
					],
					"signatures": [
						{
							"id": 72,
							"name": "evm_addAccount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds any arbitrary account to the "
									},
									{
										"kind": "code",
										"text": "`personal`"
									},
									{
										"kind": "text",
										"text": " namespace.\n\nNote: accounts already known to the "
									},
									{
										"kind": "code",
										"text": "`personal`"
									},
									{
										"kind": "text",
										"text": " namespace and accounts\nreturned by "
									},
									{
										"kind": "code",
										"text": "`eth_accounts`"
									},
									{
										"kind": "text",
										"text": " cannot be re-added using this method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if  the account was successfully added. "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " if the\naccount is already in the "
											},
											{
												"kind": "code",
												"text": "`personal`"
											},
											{
												"kind": "text",
												"text": " namespace."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst address = \"0x742d35Cc6634C0532925a3b844Bc454e4438f44e\";\nconst passphrase = \"passphrase\"\nconst result = await provider.send(\"evm_addAccount\", [address, passphrase] );\nconsole.log(result);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 668,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L668"
								}
							],
							"parameters": [
								{
									"id": 73,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address of the account to add to the "
											},
											{
												"kind": "code",
												"text": "`personal`"
											},
											{
												"kind": "text",
												"text": "\nnamespace."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 74,
									"name": "passphrase",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The passphrase used to encrypt the account's private key.\nNOTE: this passphrase will be needed for all "
											},
											{
												"kind": "code",
												"text": "`personal`"
											},
											{
												"kind": "text",
												"text": " namespace calls\nthat require a password."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60,
					"name": "evm_increaseTime",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 519,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L519"
						}
					],
					"signatures": [
						{
							"id": 61,
							"name": "evm_increaseTime",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Jump forward in time by the given amount of time, in seconds."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Returns the total time adjustment, in seconds."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst seconds = 10;\nconst timeAdjustment = await provider.send(\"evm_increaseTime\", [seconds] );\nconsole.log(timeAdjustment);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 518,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L518"
								}
							],
							"parameters": [
								{
									"id": 62,
									"name": "seconds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Number of seconds to jump forward in time by. Must be greater than or equal to "
											},
											{
												"kind": "code",
												"text": "`0`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 37,
					"name": "evm_mine",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 298,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L298"
						},
						{
							"fileName": "ethereum/src/api.ts",
							"line": 299,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L299"
						},
						{
							"fileName": "ethereum/src/api.ts",
							"line": 300,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L300"
						},
						{
							"fileName": "ethereum/src/api.ts",
							"line": 302,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L302"
						}
					],
					"signatures": [
						{
							"id": 38,
							"name": "evm_mine",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force a single block to be mined.\n\nMines a block independent of whether or not mining is started or stopped.\nWill mine an empty block if there are no available transactions to mine."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The string "
											},
											{
												"kind": "code",
												"text": "`\"0x0\"`"
											},
											{
												"kind": "text",
												"text": ". May return additional meta-data in the future."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(\"start\", await provider.send(\"eth_blockNumber\"));\nawait provider.send(\"evm_mine\", [{blocks: 5}] ); // mines 5 blocks\nconsole.log(\"end\", await provider.send(\"eth_blockNumber\"));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 298,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L298"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "literal",
										"value": "0x0"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 39,
							"name": "evm_mine",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 299,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L299"
								}
							],
							"parameters": [
								{
									"id": 40,
									"name": "timestamp",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "literal",
										"value": "0x0"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 41,
							"name": "evm_mine",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 300,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L300"
								}
							],
							"parameters": [
								{
									"id": 42,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/api-types.ts",
											"qualifiedName": "Ethereum.MineOptions"
										},
										"name": "MineOptions",
										"package": "@ganache/ethereum",
										"qualifiedName": "Ethereum.MineOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "literal",
										"value": "0x0"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 75,
					"name": "evm_removeAccount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 691,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L691"
						}
					],
					"signatures": [
						{
							"id": 76,
							"name": "evm_removeAccount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes an account from the "
									},
									{
										"kind": "code",
										"text": "`personal`"
									},
									{
										"kind": "text",
										"text": " namespace.\n\nNote: accounts not known to the "
									},
									{
										"kind": "code",
										"text": "`personal`"
									},
									{
										"kind": "text",
										"text": " namespace cannot be removed\nusing this method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the account was successfully removed. "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " if the\naccount was not in the "
											},
											{
												"kind": "code",
												"text": "`personal`"
											},
											{
												"kind": "text",
												"text": " namespace."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst [address] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst passphrase = \"\";\nconst result = await provider.send(\"evm_removeAccount\", [address, passphrase] );\nconsole.log(result);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 691,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L691"
								}
							],
							"parameters": [
								{
									"id": 77,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address of the account to remove from the "
											},
											{
												"kind": "code",
												"text": "`personal`"
											},
											{
												"kind": "text",
												"text": "\nnamespace."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 78,
									"name": "passphrase",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The passphrase used to decrypt the account's private key."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 66,
					"name": "evm_revert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 604,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L604"
						}
					],
					"signatures": [
						{
							"id": 67,
							"name": "evm_revert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Revert the state of the blockchain to a previous snapshot. Takes a single\nparameter, which is the snapshot id to revert to. This deletes the given\nsnapshot, as well as any snapshots taken after (e.g.: reverting to id 0x1\nwill delete snapshots with ids 0x1, 0x2, etc.)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if a snapshot was reverted, otherwise "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst [from, to] = await provider.send(\"eth_accounts\");\nconst startingBalance = BigInt(await provider.send(\"eth_getBalance\", [from] ));\n\n// take a snapshot\nconst snapshotId = await provider.send(\"evm_snapshot\");\n\n// send value to another account (over-simplified example)\nawait provider.send(\"eth_subscribe\", [\"newHeads\"] );\nawait provider.send(\"eth_sendTransaction\", [{from, to, value: \"0xffff\"}] );\n\n// ensure balance has updated\nconst newBalance = await provider.send(\"eth_getBalance\", [from] );\nassert(BigInt(newBalance) < startingBalance);\n\n// revert the snapshot\nconst isReverted = await provider.send(\"evm_revert\", [snapshotId] );\nassert(isReverted);\nconsole.log({isReverted: isReverted});\n\n// ensure balance has reverted\nconst endingBalance = await provider.send(\"eth_getBalance\", [from] );\nconst isBalanceReverted = assert.strictEqual(BigInt(endingBalance), startingBalance);\nconsole.log({isBalanceReverted: isBalanceReverted});\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 603,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L603"
								}
							],
							"parameters": [
								{
									"id": 68,
									"name": "snapshotId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The snapshot id to revert."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 47,
					"name": "evm_setAccountBalance",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 402,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L402"
						}
					],
					"signatures": [
						{
							"id": 48,
							"name": "evm_setAccountBalance",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the given account's balance to the specified WEI value. Mines a new block\nbefore returning.\n\nWarning: this will result in an invalid state tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if it worked, otherwise "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst balance = \"0x3e8\";\nconst [address] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst result = await provider.send(\"evm_setAccountBalance\", [address, balance] );\nconsole.log(result);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 401,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L401"
								}
							],
							"parameters": [
								{
									"id": 49,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The account address to update."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 50,
									"name": "balance",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The balance value, in WEI, to be set."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 51,
					"name": "evm_setAccountCode",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 442,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L442"
						}
					],
					"signatures": [
						{
							"id": 52,
							"name": "evm_setAccountCode",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the given account's code to the specified data. Mines a new block\nbefore returning.\n\nWarning: this will result in an invalid state tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if it worked, otherwise "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst data = \"0xbaddad42\";\nconst [address] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst result = await provider.send(\"evm_setAccountCode\", [address, data] );\nconsole.log(result);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 441,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L441"
								}
							],
							"parameters": [
								{
									"id": 53,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The account address to update."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 54,
									"name": "code",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The code to be set."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 43,
					"name": "evm_setAccountNonce",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 363,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L363"
						}
					],
					"signatures": [
						{
							"id": 44,
							"name": "evm_setAccountNonce",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the given account's nonce to the specified value. Mines a new block\nbefore returning.\n\nWarning: this will result in an invalid state tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if it worked, otherwise "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst nonce = \"0x3e8\";\nconst [address] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst result = await provider.send(\"evm_setAccountNonce\", [address, nonce] );\nconsole.log(result);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 362,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L362"
								}
							],
							"parameters": [
								{
									"id": 45,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The account address to update."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 46,
									"name": "nonce",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The nonce value to be set."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 55,
					"name": "evm_setAccountStorageAt",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 488,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L488"
						}
					],
					"signatures": [
						{
							"id": 56,
							"name": "evm_setAccountStorageAt",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the given account's storage slot to the specified data. Mines a new block\nbefore returning.\n\nWarning: this will result in an invalid state tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if it worked, otherwise "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst slot = \"0x0000000000000000000000000000000000000000000000000000000000000005\";\nconst data = \"0xbaddad42\";\nconst [address] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst result = await provider.send(\"evm_setAccountStorageAt\", [address, slot, data] );\nconsole.log(result);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 487,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L487"
								}
							],
							"parameters": [
								{
									"id": 57,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The account address to update."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58,
									"name": "slot",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The storage slot that should be set."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to be set."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 63,
					"name": "evm_setTime",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 548,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L548"
						}
					],
					"signatures": [
						{
							"id": 64,
							"name": "evm_setTime",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the internal clock time to the given timestamp.\n\nWarning: This will allow you to move *backwards* in time, which may cause\nnew blocks to appear to be mined before old blocks. This will result in\nan invalid state."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The amount of *seconds* between the given timestamp and now."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst currentDate = Date.now();\nawait new Promise(resolve => {\n  setTimeout(async () => {\n    const time = await provider.send(\"evm_setTime\", [currentDate]);\n    console.log(time); // should be about two seconds ago\n    resolve();\n  }, 1000);\n});\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 547,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L547"
								}
							],
							"parameters": [
								{
									"id": 65,
									"name": "time",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "JavaScript timestamp (millisecond precision)."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 69,
					"name": "evm_snapshot",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 644,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L644"
						}
					],
					"signatures": [
						{
							"id": 70,
							"name": "evm_snapshot",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Snapshot the state of the blockchain at the current block. Takes no\nparameters. Returns the id of the snapshot that was created. A snapshot can\nonly be reverted once. After a successful "
									},
									{
										"kind": "code",
										"text": "`evm_revert`"
									},
									{
										"kind": "text",
										"text": ", the same snapshot\nid cannot be used again. Consider creating a new snapshot after each\n"
									},
									{
										"kind": "code",
										"text": "`evm_revert`"
									},
									{
										"kind": "text",
										"text": " if you need to revert to the same point multiple times."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The hex-encoded identifier for this snapshot."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst provider = ganache.provider();\nconst [from, to] = await provider.send(\"eth_accounts\");\nconst startingBalance = BigInt(await provider.send(\"eth_getBalance\", [from] ));\n\n// take a snapshot\nconst snapshotId = await provider.send(\"evm_snapshot\");\n\n// send value to another account (over-simplified example)\nawait provider.send(\"eth_subscribe\", [\"newHeads\"] );\nawait provider.send(\"eth_sendTransaction\", [{from, to, value: \"0xffff\"}] );\n\n// ensure balance has updated\nconst newBalance = await provider.send(\"eth_getBalance\", [from] );\nassert(BigInt(newBalance) < startingBalance);\n\n// revert the snapshot\nconst isReverted = await provider.send(\"evm_revert\", [snapshotId] );\nassert(isReverted);\n\n// ensure balance has reverted\nconst endingBalance = await provider.send(\"eth_getBalance\", [from] );\nconst isBalanceReverted = assert.strictEqual(BigInt(endingBalance), startingBalance);\nconsole.log({isBalanceReverted: isBalanceReverted});\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 644,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L644"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
											"qualifiedName": "Quantity"
										},
										"name": "Quantity",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 87,
					"name": "miner_setEtherbase",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 779,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L779"
						}
					],
					"signatures": [
						{
							"id": 88,
							"name": "miner_setEtherbase",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the etherbase, where mining rewards will go."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst [account] = await provider.request({ method: \"eth_accounts\", params: [] });\nconsole.log(await provider.send(\"miner_setEtherbase\", [account] ));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 778,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L778"
								}
							],
							"parameters": [
								{
									"id": 89,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address where the mining rewards will go."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 90,
					"name": "miner_setExtra",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 794,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L794"
						}
					],
					"signatures": [
						{
							"id": 91,
							"name": "miner_setExtra",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the extraData block header field a miner can include."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "If successfully set returns "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": ", otherwise returns an error."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"miner_setExtra\", [\"0x0\"] ));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 793,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L793"
								}
							],
							"parameters": [
								{
									"id": 92,
									"name": "extra",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`extraData`"
											},
											{
												"kind": "text",
												"text": " to include."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 84,
					"name": "miner_setGasPrice",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 763,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L763"
						}
					],
					"signatures": [
						{
							"id": 85,
							"name": "miner_setGasPrice",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the default accepted gas price when mining transactions.\nAny transactions that don't specify a gas price will use this amount.\nTransactions that are below this limit are excluded from the mining process."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"miner_setGasPrice\", [300000] ));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 762,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L762"
								}
							],
							"parameters": [
								{
									"id": 86,
									"name": "number",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Default accepted gas price."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 79,
					"name": "miner_start",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 716,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L716"
						}
					],
					"signatures": [
						{
							"id": 80,
							"name": "miner_start",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Resume the CPU mining process with the given number of threads.\n\nNote: "
									},
									{
										"kind": "code",
										"text": "`threads`"
									},
									{
										"kind": "text",
										"text": " is ignored."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nawait provider.send(\"miner_stop\");\n// check that eth_mining returns false\nconsole.log(await provider.send(\"eth_mining\"));\nawait provider.send(\"miner_start\");\n// check that eth_mining returns true\nconsole.log(await provider.send(\"eth_mining\"));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 715,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L715"
								}
							],
							"parameters": [
								{
									"id": 81,
									"name": "threads",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Number of threads to resume the CPU mining process with."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 82,
					"name": "miner_stop",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 746,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L746"
						}
					],
					"signatures": [
						{
							"id": 83,
							"name": "miner_stop",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stop the CPU mining operation."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\n// check that eth_mining returns true\nconsole.log(await provider.send(\"eth_mining\"));\nawait provider.send(\"miner_stop\");\n// check that eth_mining returns false\nconsole.log(await provider.send(\"eth_mining\"));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 745,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L745"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 100,
					"name": "net_listening",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 860,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L860"
						}
					],
					"signatures": [
						{
							"id": 101,
							"name": "net_listening",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if client is actively listening for network connections."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " when listening, otherwise "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"net_listening\"));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 859,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L859"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 102,
					"name": "net_peerCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 873,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L873"
						}
					],
					"signatures": [
						{
							"id": 103,
							"name": "net_peerCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns number of peers currently connected to the client."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Number of connected peers."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"net_peerCount\"));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 872,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L872"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-quantity.ts",
											"qualifiedName": "Quantity"
										},
										"name": "Quantity",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 98,
					"name": "net_version",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 847,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L847"
						}
					],
					"signatures": [
						{
							"id": 99,
							"name": "net_version",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current network id."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The current network id. This value should NOT be JSON-RPC\nQuantity/Data encoded."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"net_version\"));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 846,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L846"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 342,
					"name": "personal_importRawKey",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 3301,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3301"
						}
					],
					"signatures": [
						{
							"id": 343,
							"name": "personal_importRawKey",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Imports the given unencrypted private key (hex string) into the key store, encrypting it with the passphrase."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Returns the address of the new account."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst rawKey = \"0x0123456789012345678901234567890123456789012345678901234567890123\";\nconst passphrase = \"passphrase\";\n\nconst address = await provider.send(\"personal_importRawKey\",[rawKey, passphrase] );\nconsole.log(address);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 3300,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3300"
								}
							],
							"parameters": [
								{
									"id": 344,
									"name": "rawKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The raw, unencrypted private key to import."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 345,
									"name": "passphrase",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The passphrase to encrypt with."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../address/index.ts",
											"qualifiedName": "Address"
										},
										"name": "Address",
										"package": "@ganache/ethereum-address"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 337,
					"name": "personal_listAccounts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 3253,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3253"
						}
					],
					"signatures": [
						{
							"id": 338,
							"name": "personal_listAccounts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns all the Ethereum account addresses of all keys that have been\nadded."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The Ethereum account addresses of all keys that have been added."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"personal_listAccounts\"));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 3252,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3252"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 346,
					"name": "personal_lockAccount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 3331,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3331"
						}
					],
					"signatures": [
						{
							"id": 347,
							"name": "personal_lockAccount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Locks the account. The account can no longer be used to send transactions."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Returns "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the account was locked, otherwise "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst [account] = await provider.send(\"personal_listAccounts\");\nconst isLocked = await provider.send(\"personal_lockAccount\", [account] );\nconsole.log(isLocked);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 3330,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3330"
								}
							],
							"parameters": [
								{
									"id": 348,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The account address to be locked."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 339,
					"name": "personal_newAccount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 3270,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3270"
						}
					],
					"signatures": [
						{
							"id": 340,
							"name": "personal_newAccount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a new account with private key. Returns the address of the new\naccount."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The new account's address."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst passphrase = \"passphrase\";\nconst address = await provider.send(\"personal_newAccount\", [passphrase] );\nconsole.log(address);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 3269,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3269"
								}
							],
							"parameters": [
								{
									"id": 341,
									"name": "passphrase",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The passphrase to encrypt the private key with."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../address/index.ts",
											"qualifiedName": "Address"
										},
										"name": "Address",
										"package": "@ganache/ethereum-address"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 354,
					"name": "personal_sendTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 3402,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3402"
						}
					],
					"signatures": [
						{
							"id": 355,
							"name": "personal_sendTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Validate the given passphrase and submit transaction.\n\nThe transaction is the same argument as for "
									},
									{
										"kind": "code",
										"text": "`eth_sendTransaction`"
									},
									{
										"kind": "text",
										"text": " and\ncontains the from address. If the passphrase can be used to decrypt the\nprivate key belonging to "
									},
									{
										"kind": "code",
										"text": "`tx.from`"
									},
									{
										"kind": "text",
										"text": " the transaction is verified, signed and\nsend onto the network. The account is not unlocked globally in the node\nand cannot be used in other RPC calls.\n\nTransaction call object:\n* "
									},
									{
										"kind": "code",
										"text": "`from`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": ", 20 bytes (optional) - The address the transaction is sent from.\n* "
									},
									{
										"kind": "code",
										"text": "`to`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": ", 20 bytes - The address the transaction is sent to.\n* "
									},
									{
										"kind": "code",
										"text": "`gas`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer of the maximum gas allowance for the transaction.\n* "
									},
									{
										"kind": "code",
										"text": "`gasPrice`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer of the price of gas in wei.\n* "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer of the value in wei.\n* "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": " (optional) - Hash of the method signature and the ABI encoded parameters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The transaction hash or if unsuccessful an error."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst passphrase = \"passphrase\";\nconst newAccount = await provider.send(\"personal_newAccount\", [passphrase] );\n// fund the new account\nawait provider.send(\"evm_setAccountBalance\", [newAccount,\"0xffffffffffffff\"])\nconst [to] = await provider.send(\"personal_listAccounts\");\n\n// use account and passphrase to send the transaction\nconst txHash = await provider.send(\"personal_sendTransaction\", [{ from: newAccount, to, gasLimit: \"0x5b8d80\" }, passphrase] );\nconsole.log(txHash);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 3401,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3401"
								}
							],
							"parameters": [
								{
									"id": 356,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/api-types.ts",
											"qualifiedName": "Ethereum.Transaction"
										},
										"name": "Transaction",
										"package": "@ganache/ethereum",
										"qualifiedName": "Ethereum.Transaction"
									}
								},
								{
									"id": 357,
									"name": "passphrase",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The passphrase to decrpyt the private key belonging to "
											},
											{
												"kind": "code",
												"text": "`tx.from`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-data.ts",
											"qualifiedName": "Data"
										},
										"name": "Data",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 358,
					"name": "personal_signTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 3461,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3461"
						}
					],
					"signatures": [
						{
							"id": 359,
							"name": "personal_signTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Validates the given passphrase and signs a transaction that can be\nsubmitted to the network at a later time using "
									},
									{
										"kind": "code",
										"text": "`eth_sendRawTransaction`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe transaction is the same argument as for "
									},
									{
										"kind": "code",
										"text": "`eth_signTransaction`"
									},
									{
										"kind": "text",
										"text": " and\ncontains the from address. If the passphrase can be used to decrypt the\nprivate key belonging to "
									},
									{
										"kind": "code",
										"text": "`tx.from`"
									},
									{
										"kind": "text",
										"text": " the transaction is verified and signed.\nThe account is not unlocked globally in the node and cannot be used in other RPC calls.\n\nTransaction call object:\n* "
									},
									{
										"kind": "code",
										"text": "`from`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": ", 20 bytes (optional) - The address the transaction is sent from.\n* "
									},
									{
										"kind": "code",
										"text": "`to`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": ", 20 bytes - The address the transaction is sent to.\n* "
									},
									{
										"kind": "code",
										"text": "`gas`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer of the maximum gas allowance for the transaction.\n* "
									},
									{
										"kind": "code",
										"text": "`gasPrice`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer of the price of gas in wei.\n* "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`QUANTITY`"
									},
									{
										"kind": "text",
										"text": " (optional) - Integer of the value in wei.\n* "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": ": "
									},
									{
										"kind": "code",
										"text": "`DATA`"
									},
									{
										"kind": "text",
										"text": " (optional) - Hash of the method signature and the ABI encoded parameters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The raw, signed transaction."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst [to] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst passphrase = \"passphrase\";\nconst from = await provider.send(\"personal_newAccount\", [passphrase] );\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst signedTx = await provider.request({ method: \"personal_signTransaction\", params: [{ from, to }, passphrase] });\nconsole.log(signedTx)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 3460,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3460"
								}
							],
							"parameters": [
								{
									"id": 360,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction call object as seen in source."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/api-types.ts",
											"qualifiedName": "Ethereum.Transaction"
										},
										"name": "Transaction",
										"package": "@ganache/ethereum",
										"qualifiedName": "Ethereum.Transaction"
									}
								},
								{
									"id": 361,
									"name": "passphrase",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-data.ts",
											"qualifiedName": "Data"
										},
										"name": "Data",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 349,
					"name": "personal_unlockAccount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 3359,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3359"
						}
					],
					"signatures": [
						{
							"id": 350,
							"name": "personal_unlockAccount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unlocks the account for use.\n\nThe unencrypted key will be held in memory until the unlock duration\nexpires. The unlock duration defaults to 300 seconds. An explicit duration\nof zero seconds unlocks the key until geth exits.\n\nThe account can be used with "
									},
									{
										"kind": "code",
										"text": "`eth_sign`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`eth_sendTransaction`"
									},
									{
										"kind": "text",
										"text": " while it is\nunlocked."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if it worked. Throws an error or returns "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " if it did not."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\n// generate an account\nconst passphrase = \"passphrase\";\nconst newAccount = await provider.send(\"personal_newAccount\", [passphrase] );\nconst isUnlocked = await provider.send(\"personal_unlockAccount\", [newAccount, passphrase] );\nconsole.log(isUnlocked);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 3358,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3358"
								}
							],
							"parameters": [
								{
									"id": 351,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "20 Bytes - The address of the account to unlock."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 352,
									"name": "passphrase",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Passphrase to unlock the account."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 353,
									"name": "duration",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "(default: 300) Duration in seconds how long the account\nshould remain unlocked for. Set to 0 to disable automatic locking."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "300"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 362,
					"name": "rpc_modules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 3492,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3492"
						}
					],
					"signatures": [
						{
							"id": 363,
							"name": "rpc_modules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns object of RPC modules."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "RPC modules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"rpc_modules\"));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 3491,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3491"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 364,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 365,
													"name": "eth",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isReadonly": true
													},
													"sources": [
														{
															"fileName": "ethereum/src/api.ts",
															"line": 99,
															"character": 2,
															"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L99"
														}
													],
													"type": {
														"type": "literal",
														"value": "1.0"
													},
													"defaultValue": "\"1.0\""
												},
												{
													"id": 369,
													"name": "evm",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isReadonly": true
													},
													"sources": [
														{
															"fileName": "ethereum/src/api.ts",
															"line": 103,
															"character": 2,
															"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L103"
														}
													],
													"type": {
														"type": "literal",
														"value": "1.0"
													},
													"defaultValue": "\"1.0\""
												},
												{
													"id": 366,
													"name": "net",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isReadonly": true
													},
													"sources": [
														{
															"fileName": "ethereum/src/api.ts",
															"line": 100,
															"character": 2,
															"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L100"
														}
													],
													"type": {
														"type": "literal",
														"value": "1.0"
													},
													"defaultValue": "\"1.0\""
												},
												{
													"id": 370,
													"name": "personal",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isReadonly": true
													},
													"sources": [
														{
															"fileName": "ethereum/src/api.ts",
															"line": 104,
															"character": 2,
															"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L104"
														}
													],
													"type": {
														"type": "literal",
														"value": "1.0"
													},
													"defaultValue": "\"1.0\""
												},
												{
													"id": 367,
													"name": "rpc",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isReadonly": true
													},
													"sources": [
														{
															"fileName": "ethereum/src/api.ts",
															"line": 101,
															"character": 2,
															"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L101"
														}
													],
													"type": {
														"type": "literal",
														"value": "1.0"
													},
													"defaultValue": "\"1.0\""
												},
												{
													"id": 368,
													"name": "web3",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isReadonly": true
													},
													"sources": [
														{
															"fileName": "ethereum/src/api.ts",
															"line": 102,
															"character": 2,
															"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L102"
														}
													],
													"type": {
														"type": "literal",
														"value": "1.0"
													},
													"defaultValue": "\"1.0\""
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														365,
														369,
														366,
														370,
														367,
														368
													]
												}
											],
											"sources": [
												{
													"fileName": "ethereum/src/api.ts",
													"line": 98,
													"character": 20,
													"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L98"
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 378,
					"name": "shh_addToGroup",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 3549,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3549"
						}
					],
					"signatures": [
						{
							"id": 379,
							"name": "shh_addToGroup",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a whisper identity to the group."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the identity was successfully added to the group, otherwise "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"shh_addToGroup\", [\"0x0\"] ));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 3548,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3548"
								}
							],
							"parameters": [
								{
									"id": 380,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The identity address to add to a group."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 388,
					"name": "shh_getFilterChanges",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 3597,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3597"
						}
					],
					"signatures": [
						{
							"id": 389,
							"name": "shh_getFilterChanges",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Polling method for whisper filters. Returns new messages since the last call of this method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "More Info: https://github.com/ethereum/wiki/wiki/JSON-RPC#shh_getfilterchanges"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"shh_getFilterChanges\", [\"0x0\"] ));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 3596,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3596"
								}
							],
							"parameters": [
								{
									"id": 390,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filter id. Ex: \"0x7\""
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 391,
					"name": "shh_getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 3612,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3612"
						}
					],
					"signatures": [
						{
							"id": 392,
							"name": "shh_getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get all messages matching a filter. Unlike shh_getFilterChanges this returns all messages."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "See: "
											},
											{
												"kind": "code",
												"text": "`shh_getFilterChanges`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"shh_getMessages\", [\"0x0\"] ));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 3611,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3611"
								}
							],
							"parameters": [
								{
									"id": 393,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filter id. Ex: \"0x7\""
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 373,
					"name": "shh_hasIdentity",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 3524,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3524"
						}
					],
					"signatures": [
						{
							"id": 374,
							"name": "shh_hasIdentity",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Checks if the client hold the private keys for a given identity."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Returns "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the client holds the private key for that identity, otherwise "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"shh_hasIdentity\", [\"0x0\"] ));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 3523,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3523"
								}
							],
							"parameters": [
								{
									"id": 375,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The identity address to check."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 381,
					"name": "shh_newFilter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 3566,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3566"
						}
					],
					"signatures": [
						{
							"id": 382,
							"name": "shh_newFilter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates filter to notify, when client receives whisper message matching the filter options."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Returns "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the identity was successfully added to the group, otherwise "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"shh_newFilter\", [\"0x0\", []] ));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 3565,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3565"
								}
							],
							"parameters": [
								{
									"id": 383,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "(optional) Identity of the receiver. When present it will try to decrypt any incoming message\n if the client holds the private key to this identity."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 384,
									"name": "topics",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array of topics which the incoming message's topics should match."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 376,
					"name": "shh_newGroup",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 3534,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3534"
						}
					],
					"signatures": [
						{
							"id": 377,
							"name": "shh_newGroup",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new group."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The address of the new group."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 3533,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3533"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 371,
					"name": "shh_newIdentity",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 3509,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3509"
						}
					],
					"signatures": [
						{
							"id": 372,
							"name": "shh_newIdentity",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates new whisper identity in the client."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "- The address of the new identity."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"shh_newIdentity\"));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 3508,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3508"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 394,
					"name": "shh_post",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 3627,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3627"
						}
					],
					"signatures": [
						{
							"id": 395,
							"name": "shh_post",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a whisper message and injects it into the network for distribution."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Returns "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the message was sent, otherwise "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"shh_post\", [{}] ));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 3626,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3626"
								}
							],
							"parameters": [
								{
									"id": 396,
									"name": "postData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 385,
					"name": "shh_uninstallFilter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 3582,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3582"
						}
					],
					"signatures": [
						{
							"id": 386,
							"name": "shh_uninstallFilter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Uninstalls a filter with given id. Should always be called when watch is no longer needed.\nAdditionally filters timeout when they aren't requested with "
									},
									{
										"kind": "code",
										"text": "`shh_getFilterChanges`"
									},
									{
										"kind": "text",
										"text": " for a period of time."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the filter was successfully uninstalled, otherwise "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"shh_uninstallFilter\", [\"0x0\"] ));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 3581,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3581"
								}
							],
							"parameters": [
								{
									"id": 387,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filter id. Ex: \"0x7\""
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 397,
					"name": "shh_version",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 3641,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3641"
						}
					],
					"signatures": [
						{
							"id": 398,
							"name": "shh_version",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current whisper protocol version."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The current whisper protocol version."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"shh_version\"));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 3640,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3640"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 399,
					"name": "txpool_content",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 3663,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3663"
						}
					],
					"signatures": [
						{
							"id": 400,
							"name": "txpool_content",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current content of the transaction pool."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The transactions currently pending or queued in the transaction pool."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst [from] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.send(\"miner_stop\")\nconst pendingTx = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", nonce:\"0x0\" }] });\nconst queuedTx = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", nonce:\"0x2\" }] });\nconst pool = await provider.send(\"txpool_content\");\nconsole.log(pool);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 3662,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L3662"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/api-types.ts",
											"qualifiedName": "Ethereum.Pool.Content"
										},
										"typeArguments": [
											{
												"type": "literal",
												"value": "private"
											}
										],
										"name": "Content",
										"package": "@ganache/ethereum",
										"qualifiedName": "Ethereum.Pool.Content"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 93,
					"name": "web3_clientVersion",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 815,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L815"
						}
					],
					"signatures": [
						{
							"id": 94,
							"name": "web3_clientVersion",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current client version."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The current client version."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconsole.log(await provider.send(\"web3_clientVersion\"));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 814,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L814"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 95,
					"name": "web3_sha3",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "ethereum/src/api.ts",
							"line": 831,
							"character": 8,
							"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L831"
						}
					],
					"signatures": [
						{
							"id": 96,
							"name": "web3_sha3",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns Keccak-256 (not the standardized SHA3-256) of the given data."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The SHA3 result of the given string."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst data = \"0xabcdef0123456789\";\nconst sha3 = await provider.send(\"web3_sha3\", [data] );\nconsole.log(sha3);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "ethereum/src/api.ts",
									"line": 830,
									"character": 2,
									"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L830"
								}
							],
							"parameters": [
								{
									"id": 97,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the data to convert into a SHA3 hash."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../utils/src/things/json-rpc/json-rpc-data.ts",
											"qualifiedName": "Data"
										},
										"name": "Data",
										"package": "@ganache/utils"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2
					]
				},
				{
					"title": "Properties",
					"children": [
						13,
						10,
						7,
						12,
						11,
						14
					]
				},
				{
					"title": "Methods",
					"children": [
						33,
						35,
						29,
						20,
						24,
						15,
						330,
						326,
						238,
						240,
						316,
						242,
						112,
						104,
						321,
						234,
						244,
						130,
						114,
						144,
						141,
						248,
						147,
						300,
						306,
						309,
						125,
						252,
						149,
						153,
						257,
						312,
						260,
						163,
						191,
						157,
						160,
						219,
						232,
						236,
						230,
						293,
						297,
						295,
						108,
						269,
						263,
						272,
						266,
						276,
						280,
						226,
						221,
						284,
						110,
						303,
						290,
						71,
						60,
						37,
						75,
						66,
						47,
						51,
						43,
						55,
						63,
						69,
						87,
						90,
						84,
						79,
						82,
						100,
						102,
						98,
						342,
						337,
						346,
						339,
						354,
						358,
						349,
						362,
						378,
						388,
						391,
						373,
						381,
						376,
						371,
						394,
						385,
						397,
						399,
						93,
						95
					]
				}
			],
			"sources": [
				{
					"fileName": "ethereum/src/api.ts",
					"line": 145,
					"character": 21,
					"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L145"
				}
			],
			"indexSignature": {
				"id": 401,
				"name": "__index",
				"variant": "signature",
				"kind": 8192,
				"flags": {},
				"sources": [
					{
						"fileName": "ethereum/src/api.ts",
						"line": 146,
						"character": 2,
						"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L146"
					}
				],
				"parameters": [
					{
						"id": 402,
						"name": "index",
						"variant": "param",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 403,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"sources": [
							{
								"fileName": "ethereum/src/api.ts",
								"line": 146,
								"character": 28,
								"url": "https://github.com/trufflesuite/ganache/blob/2f9762ca/packages/ethereum/ethereum/src/api.ts#L146"
							}
						],
						"signatures": [
							{
								"id": 404,
								"name": "__type",
								"variant": "signature",
								"kind": 4096,
								"flags": {},
								"parameters": [
									{
										"id": 405,
										"name": "args",
										"variant": "param",
										"kind": 32768,
										"flags": {
											"isRest": true
										},
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"type": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Promise"
									},
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "Promise",
									"package": "typescript"
								}
							}
						]
					}
				}
			},
			"implementedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../utils/src/types/api.ts",
						"qualifiedName": "Api"
					},
					"name": "Api",
					"package": "@ganache/utils"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"children": [
				1
			]
		}
	],
	"packageName": "@ganache/ethereum",
	"readme": [
		{
			"kind": "text",
			"text": "# "
		},
		{
			"kind": "code",
			"text": "`@ganache/ethereum`"
		},
		{
			"kind": "text",
			"text": "\n\nThis is ganache's Ethereum client implementation."
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default"
		},
		"2": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.__constructor"
		},
		"3": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default"
		},
		"4": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "options"
		},
		"5": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "wallet"
		},
		"6": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "blockchain"
		},
		"7": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.#getId"
		},
		"8": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "__function"
		},
		"9": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "__function"
		},
		"10": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.#filters"
		},
		"11": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.#subscriptions"
		},
		"12": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.#options"
		},
		"13": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.#blockchain"
		},
		"14": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.#wallet"
		},
		"15": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.db_putString"
		},
		"16": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.db_putString"
		},
		"17": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "dbName"
		},
		"18": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "key"
		},
		"19": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "value"
		},
		"20": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.db_getString"
		},
		"21": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.db_getString"
		},
		"22": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "dbName"
		},
		"23": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "key"
		},
		"24": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.db_putHex"
		},
		"25": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.db_putHex"
		},
		"26": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "dbName"
		},
		"27": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "key"
		},
		"28": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "data"
		},
		"29": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.db_getHex"
		},
		"30": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.db_getHex"
		},
		"31": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "dbName"
		},
		"32": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "key"
		},
		"33": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.bzz_hive"
		},
		"34": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.bzz_hive"
		},
		"35": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.bzz_info"
		},
		"36": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.bzz_info"
		},
		"37": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_mine"
		},
		"38": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_mine"
		},
		"39": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_mine"
		},
		"40": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "timestamp"
		},
		"41": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_mine"
		},
		"42": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "options"
		},
		"43": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_setAccountNonce"
		},
		"44": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_setAccountNonce"
		},
		"45": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "address"
		},
		"46": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "nonce"
		},
		"47": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_setAccountBalance"
		},
		"48": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_setAccountBalance"
		},
		"49": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "address"
		},
		"50": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "balance"
		},
		"51": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_setAccountCode"
		},
		"52": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_setAccountCode"
		},
		"53": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "address"
		},
		"54": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "code"
		},
		"55": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_setAccountStorageAt"
		},
		"56": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_setAccountStorageAt"
		},
		"57": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "address"
		},
		"58": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "slot"
		},
		"59": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "value"
		},
		"60": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_increaseTime"
		},
		"61": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_increaseTime"
		},
		"62": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "seconds"
		},
		"63": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_setTime"
		},
		"64": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_setTime"
		},
		"65": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "time"
		},
		"66": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_revert"
		},
		"67": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_revert"
		},
		"68": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "snapshotId"
		},
		"69": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_snapshot"
		},
		"70": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_snapshot"
		},
		"71": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_addAccount"
		},
		"72": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_addAccount"
		},
		"73": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "address"
		},
		"74": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "passphrase"
		},
		"75": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_removeAccount"
		},
		"76": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.evm_removeAccount"
		},
		"77": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "address"
		},
		"78": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "passphrase"
		},
		"79": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.miner_start"
		},
		"80": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.miner_start"
		},
		"81": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "threads"
		},
		"82": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.miner_stop"
		},
		"83": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.miner_stop"
		},
		"84": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.miner_setGasPrice"
		},
		"85": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.miner_setGasPrice"
		},
		"86": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "number"
		},
		"87": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.miner_setEtherbase"
		},
		"88": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.miner_setEtherbase"
		},
		"89": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "address"
		},
		"90": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.miner_setExtra"
		},
		"91": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.miner_setExtra"
		},
		"92": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "extra"
		},
		"93": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.web3_clientVersion"
		},
		"94": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.web3_clientVersion"
		},
		"95": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.web3_sha3"
		},
		"96": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.web3_sha3"
		},
		"97": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "data"
		},
		"98": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.net_version"
		},
		"99": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.net_version"
		},
		"100": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.net_listening"
		},
		"101": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.net_listening"
		},
		"102": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.net_peerCount"
		},
		"103": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.net_peerCount"
		},
		"104": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_estimateGas"
		},
		"105": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_estimateGas"
		},
		"106": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "transaction"
		},
		"107": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "blockNumber"
		},
		"108": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_protocolVersion"
		},
		"109": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_protocolVersion"
		},
		"110": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_syncing"
		},
		"111": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_syncing"
		},
		"112": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_coinbase"
		},
		"113": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_coinbase"
		},
		"114": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getBlockByNumber"
		},
		"115": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getBlockByNumber"
		},
		"116": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "IncludeTransactions"
		},
		"117": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "number"
		},
		"118": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "transactions"
		},
		"119": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "__type"
		},
		"120": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "__type.hash"
		},
		"121": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "__type.size"
		},
		"122": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "__type.transactions"
		},
		"123": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "__type.uncles"
		},
		"124": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "__type.withdrawals"
		},
		"125": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getProof"
		},
		"126": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getProof"
		},
		"127": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "address"
		},
		"128": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "storageKeys"
		},
		"129": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "blockNumber"
		},
		"130": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getBlockByHash"
		},
		"131": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getBlockByHash"
		},
		"132": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "IncludeTransactions"
		},
		"133": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "hash"
		},
		"134": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "transactions"
		},
		"135": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "__type"
		},
		"136": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "__type.hash"
		},
		"137": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "__type.size"
		},
		"138": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "__type.transactions"
		},
		"139": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "__type.uncles"
		},
		"140": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "__type.withdrawals"
		},
		"141": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getBlockTransactionCountByNumber"
		},
		"142": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getBlockTransactionCountByNumber"
		},
		"143": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "blockNumber"
		},
		"144": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getBlockTransactionCountByHash"
		},
		"145": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getBlockTransactionCountByHash"
		},
		"146": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "hash"
		},
		"147": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getCompilers"
		},
		"148": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getCompilers"
		},
		"149": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getTransactionByBlockHashAndIndex"
		},
		"150": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getTransactionByBlockHashAndIndex"
		},
		"151": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "hash"
		},
		"152": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "index"
		},
		"153": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getTransactionByBlockNumberAndIndex"
		},
		"154": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getTransactionByBlockNumberAndIndex"
		},
		"155": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "number"
		},
		"156": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "index"
		},
		"157": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getUncleCountByBlockHash"
		},
		"158": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getUncleCountByBlockHash"
		},
		"159": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "hash"
		},
		"160": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getUncleCountByBlockNumber"
		},
		"161": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getUncleCountByBlockNumber"
		},
		"162": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "blockNumber"
		},
		"163": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getUncleByBlockHashAndIndex"
		},
		"164": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getUncleByBlockHashAndIndex"
		},
		"165": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "hash"
		},
		"166": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "index"
		},
		"167": {
			"sourceFileName": "src/provider.ts",
			"qualifiedName": "__type"
		},
		"168": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "hash"
		},
		"169": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "size"
		},
		"170": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "transactions"
		},
		"171": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "uncles"
		},
		"172": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "withdrawals"
		},
		"173": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "parentHash"
		},
		"174": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "sha3Uncles"
		},
		"175": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "miner"
		},
		"176": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "stateRoot"
		},
		"177": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "transactionsRoot"
		},
		"178": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "receiptsRoot"
		},
		"179": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "logsBloom"
		},
		"180": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "difficulty"
		},
		"181": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "totalDifficulty"
		},
		"182": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "number"
		},
		"183": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "gasLimit"
		},
		"184": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "gasUsed"
		},
		"185": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "timestamp"
		},
		"186": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "extraData"
		},
		"187": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "mixHash"
		},
		"188": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "nonce"
		},
		"189": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "baseFeePerGas"
		},
		"190": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "withdrawalsRoot"
		},
		"191": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getUncleByBlockNumberAndIndex"
		},
		"192": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getUncleByBlockNumberAndIndex"
		},
		"193": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "blockNumber"
		},
		"194": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "uncleIndex"
		},
		"195": {
			"sourceFileName": "src/provider.ts",
			"qualifiedName": "__type"
		},
		"196": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "hash"
		},
		"197": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "size"
		},
		"198": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "transactions"
		},
		"199": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "uncles"
		},
		"200": {
			"sourceFileName": "src/api-types.ts",
			"qualifiedName": "withdrawals"
		},
		"201": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "parentHash"
		},
		"202": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "sha3Uncles"
		},
		"203": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "miner"
		},
		"204": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "stateRoot"
		},
		"205": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "transactionsRoot"
		},
		"206": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "receiptsRoot"
		},
		"207": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "logsBloom"
		},
		"208": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "difficulty"
		},
		"209": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "totalDifficulty"
		},
		"210": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "number"
		},
		"211": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "gasLimit"
		},
		"212": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "gasUsed"
		},
		"213": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "timestamp"
		},
		"214": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "extraData"
		},
		"215": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "mixHash"
		},
		"216": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "nonce"
		},
		"217": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "baseFeePerGas"
		},
		"218": {
			"sourceFileName": "../block/src/runtime-block.ts",
			"qualifiedName": "withdrawalsRoot"
		},
		"219": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getWork"
		},
		"220": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getWork"
		},
		"221": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_submitWork"
		},
		"222": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_submitWork"
		},
		"223": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "nonce"
		},
		"224": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "powHash"
		},
		"225": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "digest"
		},
		"226": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_submitHashrate"
		},
		"227": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_submitHashrate"
		},
		"228": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "hashRate"
		},
		"229": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "clientID"
		},
		"230": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_mining"
		},
		"231": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_mining"
		},
		"232": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_hashrate"
		},
		"233": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_hashrate"
		},
		"234": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_gasPrice"
		},
		"235": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_gasPrice"
		},
		"236": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_maxPriorityFeePerGas"
		},
		"237": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_maxPriorityFeePerGas"
		},
		"238": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_accounts"
		},
		"239": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_accounts"
		},
		"240": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_blockNumber"
		},
		"241": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_blockNumber"
		},
		"242": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_chainId"
		},
		"243": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_chainId"
		},
		"244": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getBalance"
		},
		"245": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getBalance"
		},
		"246": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "address"
		},
		"247": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "blockNumber"
		},
		"248": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getCode"
		},
		"249": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getCode"
		},
		"250": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "address"
		},
		"251": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "blockNumber"
		},
		"252": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getStorageAt"
		},
		"253": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getStorageAt"
		},
		"254": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "address"
		},
		"255": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "position"
		},
		"256": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "blockNumber"
		},
		"257": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getTransactionByHash"
		},
		"258": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getTransactionByHash"
		},
		"259": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "transactionHash"
		},
		"260": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getTransactionReceipt"
		},
		"261": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getTransactionReceipt"
		},
		"262": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "transactionHash"
		},
		"263": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_sendTransaction"
		},
		"264": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_sendTransaction"
		},
		"265": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "transaction"
		},
		"266": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_signTransaction"
		},
		"267": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_signTransaction"
		},
		"268": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "transaction"
		},
		"269": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_sendRawTransaction"
		},
		"270": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_sendRawTransaction"
		},
		"271": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "transaction"
		},
		"272": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_sign"
		},
		"273": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_sign"
		},
		"274": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "address"
		},
		"275": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "message"
		},
		"276": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_signTypedData"
		},
		"277": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_signTypedData"
		},
		"278": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "address"
		},
		"279": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "typedData"
		},
		"280": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_signTypedData_v4"
		},
		"281": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_signTypedData_v4"
		},
		"282": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "address"
		},
		"283": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "typedData"
		},
		"284": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_subscribe"
		},
		"285": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_subscribe"
		},
		"286": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "subscriptionName"
		},
		"287": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_subscribe"
		},
		"288": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "subscriptionName"
		},
		"289": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "options"
		},
		"290": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_unsubscribe"
		},
		"291": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_unsubscribe"
		},
		"292": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "subscriptionId"
		},
		"293": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_newBlockFilter"
		},
		"294": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_newBlockFilter"
		},
		"295": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_newPendingTransactionFilter"
		},
		"296": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_newPendingTransactionFilter"
		},
		"297": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_newFilter"
		},
		"298": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_newFilter"
		},
		"299": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "filter"
		},
		"300": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getFilterChanges"
		},
		"301": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getFilterChanges"
		},
		"302": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "filterId"
		},
		"303": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_uninstallFilter"
		},
		"304": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_uninstallFilter"
		},
		"305": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "filterId"
		},
		"306": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getFilterLogs"
		},
		"307": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getFilterLogs"
		},
		"308": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "filterId"
		},
		"309": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getLogs"
		},
		"310": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getLogs"
		},
		"311": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "filter"
		},
		"312": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getTransactionCount"
		},
		"313": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_getTransactionCount"
		},
		"314": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "address"
		},
		"315": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "blockNumber"
		},
		"316": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_call"
		},
		"317": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_call"
		},
		"318": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "transaction"
		},
		"319": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "blockNumber"
		},
		"320": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "overrides"
		},
		"321": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_feeHistory"
		},
		"322": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.eth_feeHistory"
		},
		"323": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "blockCount"
		},
		"324": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "newestBlock"
		},
		"325": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "rewardPercentiles"
		},
		"326": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.debug_traceTransaction"
		},
		"327": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.debug_traceTransaction"
		},
		"328": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "transactionHash"
		},
		"329": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "options"
		},
		"330": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.debug_storageRangeAt"
		},
		"331": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.debug_storageRangeAt"
		},
		"332": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "blockHash"
		},
		"333": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "transactionIndex"
		},
		"334": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "contractAddress"
		},
		"335": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "startKey"
		},
		"336": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "maxResult"
		},
		"337": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.personal_listAccounts"
		},
		"338": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.personal_listAccounts"
		},
		"339": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.personal_newAccount"
		},
		"340": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.personal_newAccount"
		},
		"341": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "passphrase"
		},
		"342": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.personal_importRawKey"
		},
		"343": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.personal_importRawKey"
		},
		"344": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "rawKey"
		},
		"345": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "passphrase"
		},
		"346": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.personal_lockAccount"
		},
		"347": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.personal_lockAccount"
		},
		"348": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "address"
		},
		"349": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.personal_unlockAccount"
		},
		"350": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.personal_unlockAccount"
		},
		"351": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "address"
		},
		"352": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "passphrase"
		},
		"353": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "duration"
		},
		"354": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.personal_sendTransaction"
		},
		"355": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.personal_sendTransaction"
		},
		"356": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "transaction"
		},
		"357": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "passphrase"
		},
		"358": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.personal_signTransaction"
		},
		"359": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.personal_signTransaction"
		},
		"360": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "transaction"
		},
		"361": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "passphrase"
		},
		"362": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.rpc_modules"
		},
		"363": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.rpc_modules"
		},
		"364": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "__object"
		},
		"365": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "__object.eth"
		},
		"366": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "__object.net"
		},
		"367": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "__object.rpc"
		},
		"368": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "__object.web3"
		},
		"369": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "__object.evm"
		},
		"370": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "__object.personal"
		},
		"371": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.shh_newIdentity"
		},
		"372": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.shh_newIdentity"
		},
		"373": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.shh_hasIdentity"
		},
		"374": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.shh_hasIdentity"
		},
		"375": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "address"
		},
		"376": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.shh_newGroup"
		},
		"377": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.shh_newGroup"
		},
		"378": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.shh_addToGroup"
		},
		"379": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.shh_addToGroup"
		},
		"380": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "address"
		},
		"381": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.shh_newFilter"
		},
		"382": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.shh_newFilter"
		},
		"383": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "to"
		},
		"384": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "topics"
		},
		"385": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.shh_uninstallFilter"
		},
		"386": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.shh_uninstallFilter"
		},
		"387": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "id"
		},
		"388": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.shh_getFilterChanges"
		},
		"389": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.shh_getFilterChanges"
		},
		"390": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "id"
		},
		"391": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.shh_getMessages"
		},
		"392": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.shh_getMessages"
		},
		"393": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "id"
		},
		"394": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.shh_post"
		},
		"395": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.shh_post"
		},
		"396": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "postData"
		},
		"397": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.shh_version"
		},
		"398": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.shh_version"
		},
		"399": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.txpool_content"
		},
		"400": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.txpool_content"
		},
		"401": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "default.__index"
		},
		"403": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "__type"
		},
		"404": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "__type"
		},
		"405": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": "args"
		}
	}
}