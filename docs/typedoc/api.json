{
	"id": 0,
	"name": "@ganache/ethereum",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "\"api\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/ganache/ganache/src/chains/ethereum/ethereum/src/api.ts",
			"children": [
				{
					"id": 2,
					"name": "EthereumApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 3,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 4,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 6,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 7,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isRest": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Promise"
											}
										}
									],
									"sources": [
										{
											"fileName": "chains/ethereum/ethereum/src/api.ts",
											"line": 144,
											"character": 27
										}
									]
								}
							}
						}
					],
					"children": [
						{
							"id": 21,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This is the Ethereum API that the provider interacts with.\nThe only methods permitted on the prototype are the supported json-rpc\nmethods."
							},
							"signatures": [
								{
									"id": 22,
									"name": "new EthereumApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "This is the Ethereum API that the provider interacts with.\nThe only methods permitted on the prototype are the supported json-rpc\nmethods."
									},
									"parameters": [
										{
											"id": 23,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "EthereumInternalOptions"
											}
										},
										{
											"id": 24,
											"name": "wallet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "Wallet"
											}
										},
										{
											"id": 25,
											"name": "blockchain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Blockchain"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2,
										"name": "EthereumApi"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 151,
									"character": 27
								}
							]
						},
						{
							"id": 19,
							"name": "#blockchain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 150,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "Blockchain"
							}
						},
						{
							"id": 9,
							"name": "#filters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 147,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 10,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 14,
													"name": "filter",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "chains/ethereum/utils/typings/src/types/filters.d.ts",
															"line": 26,
															"character": 10
														}
													],
													"type": {
														"type": "reference",
														"name": "FilterArgs"
													}
												},
												{
													"id": 11,
													"name": "type",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "chains/ethereum/utils/typings/src/types/filters.d.ts",
															"line": 23,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"name": "FilterTypes"
													}
												},
												{
													"id": 13,
													"name": "unsubscribe",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "chains/ethereum/utils/typings/src/types/filters.d.ts",
															"line": 25,
															"character": 15
														}
													],
													"type": {
														"type": "reference",
														"name": "Emittery.UnsubscribeFn"
													}
												},
												{
													"id": 12,
													"name": "updates",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "chains/ethereum/utils/typings/src/types/filters.d.ts",
															"line": 24,
															"character": 11
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Data"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														14,
														11,
														13,
														12
													]
												}
											]
										}
									}
								],
								"name": "Map"
							},
							"defaultValue": "new Map<string, Filter>()"
						},
						{
							"id": 8,
							"name": "#getId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 146,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "(Anonymous function)"
							},
							"defaultValue": "(id => () => Quantity.from(++id))(0)"
						},
						{
							"id": 18,
							"name": "#options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 149,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "EthereumInternalOptions"
							}
						},
						{
							"id": 15,
							"name": "#subscriptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 148,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 16,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								],
								"name": "Map"
							},
							"defaultValue": "new Map<string, Emittery.UnsubscribeFn>()"
						},
						{
							"id": 20,
							"name": "#wallet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 151,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Wallet"
							}
						},
						{
							"id": 44,
							"name": "bzz_hive",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 45,
									"name": "bzz_hive",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the kademlia table in a readable table format.",
										"returns": "Returns the kademlia table in a readable table format.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"bzz_hive\"));\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 249,
									"character": 16
								}
							]
						},
						{
							"id": 46,
							"name": "bzz_info",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 47,
									"name": "bzz_info",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns details about the swarm node.",
										"returns": "Returns details about the swarm node.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"bzz_info\"));\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 262,
									"character": 16
								}
							]
						},
						{
							"id": 40,
							"name": "db_getHex",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 41,
									"name": "db_getHex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns binary data from the local database.",
										"returns": "The previously stored data.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"db_getHex\", [\"testDb\", \"testKey\"] ));\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 42,
											"name": "dbName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Database name."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Key name."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 234,
									"character": 17
								}
							]
						},
						{
							"id": 31,
							"name": "db_getString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 32,
									"name": "db_getString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns string from the local database.",
										"returns": "The previously stored string.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"db_getString\", [\"testDb\", \"testKey\"] ));\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 33,
											"name": "dbName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Database name."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Key name."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 201,
									"character": 20
								}
							]
						},
						{
							"id": 35,
							"name": "db_putHex",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "3"
									}
								}
							],
							"signatures": [
								{
									"id": 36,
									"name": "db_putHex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Stores binary data in the local database.",
										"returns": "true if the value was stored, otherwise false.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"db_putHex\", [\"testDb\", \"testKey\", \"0x0\"] ));\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 37,
											"name": "dbName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Database name."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 38,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Key name."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Data to store."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 218,
									"character": 17
								}
							]
						},
						{
							"id": 26,
							"name": "db_putString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "3"
									}
								}
							],
							"signatures": [
								{
									"id": 27,
									"name": "db_putString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Stores a string in the local database.",
										"returns": "returns true if the value was stored, otherwise false.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"db_putString\", [\"testDb\", \"testKey\", \"testValue\"] ));\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 28,
											"name": "dbName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Database name."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Key name."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "String to store."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 185,
									"character": 20
								}
							]
						},
						{
							"id": 627,
							"name": "debug_storageRangeAt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 628,
									"name": "debug_storageRangeAt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Attempts to replay the transaction as it was executed on the network and\nreturn storage data given a starting key and max number of entries to return.",
										"returns": "Returns a storage object with the keys being keccak-256 hashes of the storage keys,\nand the values being the raw, unhashed key and value for that specific storage slot. Also\nreturns a next key which is the keccak-256 hash of the next key in storage for continuous downloading.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\n// Simple.sol\n// // SPDX-License-Identifier: MIT\n//  pragma solidity ^0.7.4;\n//\n//  contract Simple {\n//      uint256 public value;\n//      constructor() payable {\n//          value = 5;\n//      }\n//  }\nconst simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\nconst [from] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst initialTxHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\nawait provider.once(\"message\"); // Note: `await provider.once` is non-standard\n\nconst {contractAddress} = await provider.request({ method: \"eth_getTransactionReceipt\", params: [initialTxHash] });\n\n// set value to 19\nconst data = \"0x552410770000000000000000000000000000000000000000000000000000000000000019\";\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to: contractAddress, data }] });\nawait provider.once(\"message\"); // Note: `await provider.once` is non-standard\n\nconst { blockHash, transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\nconst storage = await provider.request({ method: \"debug_storageRangeAt\", params: [blockHash, transactionIndex, contractAddress, \"0x01\", 1] });\nconsole.log(storage);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 629,
											"name": "blockHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Hash of a block."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 630,
											"name": "transactionIndex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Integer of the transaction index position."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 631,
											"name": "contractAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Address of the contract."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 632,
											"name": "startKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Hash of the start key for grabbing storage entries."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 633,
											"name": "maxResult",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Integer of maximum number of storage entries to return."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "StorageRangeResult"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 2695,
									"character": 28
								}
							]
						},
						{
							"id": 623,
							"name": "debug_traceTransaction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 624,
									"name": "debug_traceTransaction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Attempt to run the transaction in the exact same manner as it was executed\non the network. It will replay any transaction that may have been executed\nprior to this one before it will finally attempt to execute the transaction\nthat corresponds to the given hash.",
										"text": "In addition to the hash of the transaction you may give it a secondary\noptional argument, which specifies the options for this specific call.\nThe possible options are:\n\n* `disableStorage`: \\{boolean\\} Setting this to `true` will disable storage capture (default = `false`).\n* `disableMemory`: \\{boolean\\} Setting this to `true` will disable memory capture (default = `false`).\n* `disableStack`: \\{boolean\\} Setting this to `true` will disable stack capture (default = `false`).\n",
										"returns": "Returns the `gas`, `structLogs`, and `returnValue` for the traced transaction.\n\nThe `structLogs` are an array of logs, which contains the following fields:\n* `depth`: The execution depth.\n* `error`: Information about an error, if one occurred.\n* `gas`: The number of gas remaining.\n* `gasCost`: The cost of gas in wei.\n* `memory`: An array containing the contract's memory data.\n* `op`: The current opcode.\n* `pc`: The current program counter.\n* `stack`: The EVM execution stack.\n* `storage`: An object containing the contract's storage data.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\n// Simple.sol\n// // SPDX-License-Identifier: MIT\n//  pragma solidity ^0.7.4;\n//\n//  contract Simple {\n//      uint256 public value;\n//      constructor() payable {\n//          value = 5;\n//      }\n//  }\nconst simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\nconst [from] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\nawait provider.once(\"message\"); // Note: `await provider.once` is non-standard\nconst transactionTrace = await provider.request({ method: \"debug_traceTransaction\", params: [txHash] });\nconsole.log(transactionTrace);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 625,
											"name": "transactionHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Hash of the transaction to trace."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 626,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "See options in source."
											},
											"type": {
												"type": "reference",
												"name": "TransactionTraceOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TraceTransactionResult"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 2645,
									"character": 30
								}
							]
						},
						{
							"id": 505,
							"name": "eth_accounts",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 506,
									"name": "eth_accounts",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns a list of addresses owned by client.",
										"returns": "Array of 20 Bytes - addresses owned by the client.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst accounts = await provider.request({ method: \"eth_accounts\", params: [] });\nconsole.log(accounts);\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1358,
									"character": 20
								}
							]
						},
						{
							"id": 507,
							"name": "eth_blockNumber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 508,
									"name": "eth_blockNumber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the number of the most recent block.",
										"returns": "The current block number the client is on.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst blockNumber = await provider.request({ method: \"eth_blockNumber\" });\nconsole.log(blockNumber);\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1372,
									"character": 23
								}
							]
						},
						{
							"id": 619,
							"name": "eth_call",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1",
										"max": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 620,
									"name": "eth_call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Executes a new message call immediately without creating a transaction on the block chain.",
										"text": "Transaction call object:\n* `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n* `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n* `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n* `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n* `value`: `QUANTITY` (optional) - Integer of the value in wei.\n* `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n",
										"returns": "The return value of executed contract.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\n// Simple.sol\n// // SPDX-License-Identifier: MIT\n//  pragma solidity ^0.7.4;\n//\n//  contract Simple {\n//      uint256 public value;\n//      constructor() payable {\n//          value = 5;\n//      }\n//  }\nconst simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\nconst [from] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst txObj = { from, gas: \"0x5b8d80\", gasPrice: \"0x1dfd14000\", value:\"0x0\", data: simpleSol };\nconst result = await provider.request({ method: \"eth_call\", params: [txObj, \"latest\"] });\nconsole.log(result);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 621,
											"name": "transaction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The transaction call object as seen in source."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 622,
											"name": "blockNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Integer block number, or the string \"latest\", \"earliest\"\n or \"pending\".\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "QUANTITY"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											},
											"defaultValue": "Tag.LATEST"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Data"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 2495,
									"character": 16
								}
							]
						},
						{
							"id": 509,
							"name": "eth_chainId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 510,
									"name": "eth_chainId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the currently configured chain id, a value used in\nreplay-protected transaction signing as introduced by EIP-155.",
										"returns": "The chain id as a string.",
										"tags": [
											{
												"tag": "eip",
												"text": "[155 – Simple replay attack protection](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md)\n"
											},
											{
												"tag": "example",
												"text": "\n```javascript\nconst chainId = await provider.send(\"eth_chainId\");\nconsole.log(chainId);\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1389,
									"character": 19
								}
							]
						},
						{
							"id": 111,
							"name": "eth_coinbase",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 112,
									"name": "eth_coinbase",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the client coinbase address.",
										"returns": "The current coinbase address.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst coinbaseAddress = await provider.request({ method: \"eth_coinbase\" });\nconsole.log(coinbaseAddress);\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Address"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 861,
									"character": 20
								}
							]
						},
						{
							"id": 103,
							"name": "eth_estimateGas",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1",
										"max": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 104,
									"name": "eth_estimateGas",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Generates and returns an estimate of how much gas is necessary to allow the\ntransaction to complete. The transaction will not be added to the\nblockchain. Note that the estimate may be significantly more than the\namount of gas actually used by the transaction, for a variety of reasons\nincluding EVM mechanics and node performance.",
										"text": "Transaction call object:\n* `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n* `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n* `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n* `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n* `value`: `QUANTITY` (optional) - Integer of the value in wei.\n* `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n",
										"returns": "The amount of gas used.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst gasEstimate = await provider.request({ method: \"eth_estimateGas\", params: [{ from, to }, \"latest\" ] });\nconsole.log(gasEstimate);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 105,
											"name": "transaction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The transaction call object as seen in source."
											},
											"type": {
												"type": "reference",
												"name": "TypedRpcTransaction"
											}
										},
										{
											"id": 106,
											"name": "blockNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Integer block number, or the string \"latest\", \"earliest\"\n or \"pending\".\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "QUANTITY"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											},
											"defaultValue": "Tag.LATEST"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 768,
									"character": 23
								}
							]
						},
						{
							"id": 503,
							"name": "eth_gasPrice",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 504,
									"name": "eth_gasPrice",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the current price per gas in wei.",
										"returns": "Integer of the current gas price in wei.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst gasPrice = await provider.request({ method: \"eth_gasPrice\", params: [] });\nconsole.log(gasPrice);\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1344,
									"character": 20
								}
							]
						},
						{
							"id": 511,
							"name": "eth_getBalance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1",
										"max": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 512,
									"name": "eth_getBalance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the balance of the account of given address.",
										"returns": "Integer of the account balance in wei.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst accounts = await provider.request({ method: \"eth_accounts\", params: [] });\nconst balance = await provider.request({ method: \"eth_getBalance\", params: [accounts[0], \"latest\"] });\nconsole.log(balance);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 513,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Address to check for balance."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 514,
											"name": "blockNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Integer block number, or the string \"latest\", \"earliest\"\n or \"pending\".\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "QUANTITY"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											},
											"defaultValue": "Tag.LATEST"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1409,
									"character": 22
								}
							]
						},
						{
							"id": 193,
							"name": "eth_getBlockByHash",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1",
										"max": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 194,
									"name": "eth_getBlockByHash",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns information about a block by block hash.",
										"returns": "The block, `null` if the block doesn't exist.\n\n* `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n* `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n* `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n* `miner`: `DATA`, 20 Bytes -  Address of the miner.\n* `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n* `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n* `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n* `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n* `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n* `number`: `QUANTITY` - The block number. `null` when pending.\n* `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n* `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n* `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n* `extraData`: `DATA` - Extra data for the block.\n* `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n* `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n* `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n* `size`: `QUANTITY` - Integer the size of the block in bytes.\n* `transactions`: `Array` - Array of transaction objects or 32 Bytes transaction hashes depending on the last parameter.\n* `uncles`: `Array` - Array of uncle hashes.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\n// Simple.sol\n// // SPDX-License-Identifier: MIT\n//  pragma solidity ^0.7.4;\n//\n//  contract Simple {\n//      uint256 public value;\n//      constructor() payable {\n//          value = 5;\n//      }\n//  }\nconst simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\nconst [from] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\nawait provider.once(\"message\"); // Note: `await provider.once` is non-standard\nconst txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\nconst block = await provider.request({ method: \"eth_getBlockByHash\", params: [txReceipt.blockHash, true] });\nconsole.log(block);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 195,
											"name": "hash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Hash of a block."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 196,
											"name": "transactions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "If `true` it returns the full transaction objects, if `false` only the hashes of the\ntransactions."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 197,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 271,
															"name": "baseFeePerGas",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 43,
																	"character": 21
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 262,
															"name": "difficulty",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 34,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 268,
															"name": "extraData",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 40,
																	"character": 17
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 265,
															"name": "gasLimit",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 37,
																	"character": 16
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 266,
															"name": "gasUsed",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 38,
																	"character": 15
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 272,
															"name": "hash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 44,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 261,
															"name": "logsBloom",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 33,
																	"character": 17
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 257,
															"name": "miner",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 29,
																	"character": 13
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 269,
															"name": "mixHash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 41,
																	"character": 15
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 270,
															"name": "nonce",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 42,
																	"character": 13
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 264,
															"name": "number",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 36,
																	"character": 14
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 255,
															"name": "parentHash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 27,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 260,
															"name": "receiptsRoot",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 32,
																	"character": 20
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 256,
															"name": "sha3Uncles",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 28,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 198,
															"name": "size",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 24,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 258,
															"name": "stateRoot",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 30,
																	"character": 17
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 267,
															"name": "timestamp",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 39,
																	"character": 17
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 263,
															"name": "totalDifficulty",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 35,
																	"character": 23
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 199,
															"name": "transactions",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 25,
																	"character": 20
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "reference",
																			"name": "Data"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 200,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {
																					"isExported": true
																				},
																				"children": [
																					{
																						"id": 204,
																						"name": "blockHash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 15,
																								"character": 13
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 205,
																						"name": "blockNumber",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 16,
																								"character": 15
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 207,
																						"name": "from",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 18,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 210,
																						"name": "gas",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 21,
																								"character": 7
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 211,
																						"name": "gasPrice",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 22,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 201,
																						"name": "hash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 12,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 212,
																						"name": "input",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 23,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 203,
																						"name": "nonce",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 14,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 214,
																						"name": "r",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 25,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 215,
																						"name": "s",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 26,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 208,
																						"name": "to",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 19,
																								"character": 6
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Address"
																						}
																					},
																					{
																						"id": 206,
																						"name": "transactionIndex",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 17,
																								"character": 20
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 202,
																						"name": "type",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true,
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 13,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 213,
																						"name": "v",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 24,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 209,
																						"name": "value",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 20,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Variables",
																						"kind": 32,
																						"children": [
																							204,
																							205,
																							207,
																							210,
																							211,
																							201,
																							212,
																							203,
																							214,
																							215,
																							208,
																							206,
																							202,
																							213,
																							209
																						]
																					}
																				]
																			}
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 216,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {
																					"isExported": true
																				},
																				"children": [
																					{
																						"id": 230,
																						"name": "accessList",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 42,
																								"character": 14
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "AccessList"
																						}
																					},
																					{
																						"id": 221,
																						"name": "blockHash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 33,
																								"character": 13
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 222,
																						"name": "blockNumber",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 34,
																								"character": 15
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 219,
																						"name": "chainId",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 31,
																								"character": 11
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 224,
																						"name": "from",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 36,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 227,
																						"name": "gas",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 39,
																								"character": 7
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 228,
																						"name": "gasPrice",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 40,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 217,
																						"name": "hash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 29,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 229,
																						"name": "input",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 41,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 220,
																						"name": "nonce",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 32,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 232,
																						"name": "r",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 44,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 233,
																						"name": "s",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 45,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 225,
																						"name": "to",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 37,
																								"character": 6
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Address"
																						}
																					},
																					{
																						"id": 223,
																						"name": "transactionIndex",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 35,
																								"character": 20
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 218,
																						"name": "type",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 30,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 231,
																						"name": "v",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 43,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 226,
																						"name": "value",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 38,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Variables",
																						"kind": 32,
																						"children": [
																							230,
																							221,
																							222,
																							219,
																							224,
																							227,
																							228,
																							217,
																							229,
																							220,
																							232,
																							233,
																							225,
																							223,
																							218,
																							231,
																							226
																						]
																					}
																				]
																			}
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 234,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {
																					"isExported": true
																				},
																				"children": [
																					{
																						"id": 250,
																						"name": "accessList",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 63,
																								"character": 14
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "AccessList"
																						}
																					},
																					{
																						"id": 239,
																						"name": "blockHash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 52,
																								"character": 13
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 240,
																						"name": "blockNumber",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 53,
																								"character": 15
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 237,
																						"name": "chainId",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 50,
																								"character": 11
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 242,
																						"name": "from",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 55,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 248,
																						"name": "gas",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 61,
																								"character": 7
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 247,
																						"name": "gasPrice",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 60,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 235,
																						"name": "hash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 48,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 249,
																						"name": "input",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 62,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 246,
																						"name": "maxFeePerGas",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 59,
																								"character": 16
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 245,
																						"name": "maxPriorityFeePerGas",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 58,
																								"character": 24
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 238,
																						"name": "nonce",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 51,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 252,
																						"name": "r",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 65,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 253,
																						"name": "s",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 66,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 243,
																						"name": "to",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 56,
																								"character": 6
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Address"
																						}
																					},
																					{
																						"id": 241,
																						"name": "transactionIndex",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 54,
																								"character": 20
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 236,
																						"name": "type",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 49,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 251,
																						"name": "v",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 64,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 244,
																						"name": "value",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 57,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Variables",
																						"kind": 32,
																						"children": [
																							250,
																							239,
																							240,
																							237,
																							242,
																							248,
																							247,
																							235,
																							249,
																							246,
																							245,
																							238,
																							252,
																							253,
																							243,
																							241,
																							236,
																							251,
																							244
																						]
																					}
																				]
																			}
																		}
																	]
																}
															}
														},
														{
															"id": 259,
															"name": "transactionsRoot",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 31,
																	"character": 24
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 254,
															"name": "uncles",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 26,
																	"character": 14
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																271,
																262,
																268,
																265,
																266,
																272,
																261,
																257,
																269,
																270,
																264,
																255,
																260,
																256,
																198,
																258,
																267,
																263,
																199,
																259,
																254
															]
														}
													]
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 959,
									"character": 26
								}
							]
						},
						{
							"id": 113,
							"name": "eth_getBlockByNumber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1",
										"max": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 114,
									"name": "eth_getBlockByNumber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns information about a block by block number.",
										"returns": "The block, `null` if the block doesn't exist.\n\n* `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n* `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n* `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n* `miner`: `DATA`, 20 Bytes -  Address of the miner.\n* `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n* `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n* `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n* `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n* `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n* `number`: `QUANTITY` - The block number. `null` when pending.\n* `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n* `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n* `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n* `extraData`: `DATA` - Extra data for the block.\n* `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n* `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n* `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n* `size`: `QUANTITY` - Integer the size of the block in bytes.\n* `transactions`: `Array` - Array of transaction objects or 32 Bytes transaction hashes depending on the last parameter.\n* `uncles`: `Array` - Array of uncle hashes.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst block = await provider.request({ method: \"eth_getBlockByNumber\", params: [\"0x0\", false] });\nconsole.log(block);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 115,
											"name": "number",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Integer of a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the\ndefault block parameter."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "QUANTITY"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											}
										},
										{
											"id": 116,
											"name": "transactions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "If `true` it returns the full transaction objects, if `false` only the hashes of the\ntransactions."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 117,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 191,
															"name": "baseFeePerGas",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 43,
																	"character": 21
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 182,
															"name": "difficulty",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 34,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 188,
															"name": "extraData",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 40,
																	"character": 17
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 185,
															"name": "gasLimit",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 37,
																	"character": 16
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 186,
															"name": "gasUsed",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 38,
																	"character": 15
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 192,
															"name": "hash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 44,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 181,
															"name": "logsBloom",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 33,
																	"character": 17
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 177,
															"name": "miner",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 29,
																	"character": 13
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 189,
															"name": "mixHash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 41,
																	"character": 15
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 190,
															"name": "nonce",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 42,
																	"character": 13
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 184,
															"name": "number",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 36,
																	"character": 14
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 175,
															"name": "parentHash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 27,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 180,
															"name": "receiptsRoot",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 32,
																	"character": 20
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 176,
															"name": "sha3Uncles",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 28,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 118,
															"name": "size",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 24,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 178,
															"name": "stateRoot",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 30,
																	"character": 17
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 187,
															"name": "timestamp",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 39,
																	"character": 17
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 183,
															"name": "totalDifficulty",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 35,
																	"character": 23
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 119,
															"name": "transactions",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 25,
																	"character": 20
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "reference",
																			"name": "Data"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 120,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {
																					"isExported": true
																				},
																				"children": [
																					{
																						"id": 124,
																						"name": "blockHash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 15,
																								"character": 13
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 125,
																						"name": "blockNumber",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 16,
																								"character": 15
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 127,
																						"name": "from",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 18,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 130,
																						"name": "gas",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 21,
																								"character": 7
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 131,
																						"name": "gasPrice",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 22,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 121,
																						"name": "hash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 12,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 132,
																						"name": "input",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 23,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 123,
																						"name": "nonce",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 14,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 134,
																						"name": "r",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 25,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 135,
																						"name": "s",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 26,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 128,
																						"name": "to",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 19,
																								"character": 6
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Address"
																						}
																					},
																					{
																						"id": 126,
																						"name": "transactionIndex",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 17,
																								"character": 20
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 122,
																						"name": "type",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true,
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 13,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 133,
																						"name": "v",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 24,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 129,
																						"name": "value",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 20,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Variables",
																						"kind": 32,
																						"children": [
																							124,
																							125,
																							127,
																							130,
																							131,
																							121,
																							132,
																							123,
																							134,
																							135,
																							128,
																							126,
																							122,
																							133,
																							129
																						]
																					}
																				]
																			}
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 136,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {
																					"isExported": true
																				},
																				"children": [
																					{
																						"id": 150,
																						"name": "accessList",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 42,
																								"character": 14
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "AccessList"
																						}
																					},
																					{
																						"id": 141,
																						"name": "blockHash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 33,
																								"character": 13
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 142,
																						"name": "blockNumber",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 34,
																								"character": 15
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 139,
																						"name": "chainId",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 31,
																								"character": 11
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 144,
																						"name": "from",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 36,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 147,
																						"name": "gas",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 39,
																								"character": 7
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 148,
																						"name": "gasPrice",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 40,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 137,
																						"name": "hash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 29,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 149,
																						"name": "input",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 41,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 140,
																						"name": "nonce",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 32,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 152,
																						"name": "r",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 44,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 153,
																						"name": "s",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 45,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 145,
																						"name": "to",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 37,
																								"character": 6
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Address"
																						}
																					},
																					{
																						"id": 143,
																						"name": "transactionIndex",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 35,
																								"character": 20
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 138,
																						"name": "type",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 30,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 151,
																						"name": "v",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 43,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 146,
																						"name": "value",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 38,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Variables",
																						"kind": 32,
																						"children": [
																							150,
																							141,
																							142,
																							139,
																							144,
																							147,
																							148,
																							137,
																							149,
																							140,
																							152,
																							153,
																							145,
																							143,
																							138,
																							151,
																							146
																						]
																					}
																				]
																			}
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 154,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {
																					"isExported": true
																				},
																				"children": [
																					{
																						"id": 170,
																						"name": "accessList",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 63,
																								"character": 14
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "AccessList"
																						}
																					},
																					{
																						"id": 159,
																						"name": "blockHash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 52,
																								"character": 13
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 160,
																						"name": "blockNumber",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 53,
																								"character": 15
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 157,
																						"name": "chainId",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 50,
																								"character": 11
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 162,
																						"name": "from",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 55,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 168,
																						"name": "gas",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 61,
																								"character": 7
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 167,
																						"name": "gasPrice",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 60,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 155,
																						"name": "hash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 48,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 169,
																						"name": "input",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 62,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 166,
																						"name": "maxFeePerGas",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 59,
																								"character": 16
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 165,
																						"name": "maxPriorityFeePerGas",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 58,
																								"character": 24
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 158,
																						"name": "nonce",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 51,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 172,
																						"name": "r",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 65,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 173,
																						"name": "s",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 66,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 163,
																						"name": "to",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 56,
																								"character": 6
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Address"
																						}
																					},
																					{
																						"id": 161,
																						"name": "transactionIndex",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 54,
																								"character": 20
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 156,
																						"name": "type",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 49,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 171,
																						"name": "v",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 64,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 164,
																						"name": "value",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 57,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Variables",
																						"kind": 32,
																						"children": [
																							170,
																							159,
																							160,
																							157,
																							162,
																							168,
																							167,
																							155,
																							169,
																							166,
																							165,
																							158,
																							172,
																							173,
																							163,
																							161,
																							156,
																							171,
																							164
																						]
																					}
																				]
																			}
																		}
																	]
																}
															}
														},
														{
															"id": 179,
															"name": "transactionsRoot",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 31,
																	"character": 24
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 174,
															"name": "uncles",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 26,
																	"character": 14
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																191,
																182,
																188,
																185,
																186,
																192,
																181,
																177,
																189,
																190,
																184,
																175,
																180,
																176,
																118,
																178,
																187,
																183,
																119,
																179,
																174
															]
														}
													]
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 901,
									"character": 28
								}
							]
						},
						{
							"id": 276,
							"name": "eth_getBlockTransactionCountByHash",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 277,
									"name": "eth_getBlockTransactionCountByHash",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the number of transactions in a block from a block matching the given block hash.",
										"returns": "Number of transactions in the block.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\n// Simple.sol\n// // SPDX-License-Identifier: MIT\n//  pragma solidity ^0.7.4;\n//\n//  contract Simple {\n//      uint256 public value;\n//      constructor() payable {\n//          value = 5;\n//      }\n//  }\nconst simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\nconst [from] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\nawait provider.once(\"message\"); // Note: `await provider.once` is non-standard\nconst txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\nconst txCount = await provider.request({ method: \"eth_getBlockTransactionCountByHash\", params: [txReceipt.blockHash] });\nconsole.log(txCount);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 278,
											"name": "hash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Hash of a block."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1015,
									"character": 42
								}
							]
						},
						{
							"id": 273,
							"name": "eth_getBlockTransactionCountByNumber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 274,
									"name": "eth_getBlockTransactionCountByNumber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the number of transactions in a block from a block matching the given block number.",
										"returns": "Integer of the number of transactions in the block.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst txCount = await provider.request({ method: \"eth_getBlockTransactionCountByNumber\", params: [\"0x0\"] });\nconsole.log(txCount);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 275,
											"name": "blockNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "QUANTITY"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 978,
									"character": 44
								}
							]
						},
						{
							"id": 515,
							"name": "eth_getCode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1",
										"max": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 516,
									"name": "eth_getCode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns code at a given address.",
										"returns": "The code from the given address.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\n// Simple.sol\n// // SPDX-License-Identifier: MIT\n//  pragma solidity ^0.7.4;\n//\n//  contract Simple {\n//      uint256 public value;\n//      constructor() payable {\n//          value = 5;\n//      }\n//  }\nconst simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\nconst [from] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\nawait provider.once(\"message\"); // Note: `await provider.once` is non-standard\nconst txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\nconst code = await provider.request({ method: \"eth_getCode\", params: [txReceipt.contractAddress, \"latest\"] });\nconsole.log(code);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 517,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Address."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 518,
											"name": "blockNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Integer block number, or the string \"latest\", \"earliest\" or \"pending\"."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "QUANTITY"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											},
											"defaultValue": "Tag.LATEST"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Data"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1448,
									"character": 19
								}
							]
						},
						{
							"id": 279,
							"name": "eth_getCompilers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 280,
									"name": "eth_getCompilers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns a list of available compilers.",
										"returns": "List of available compilers.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst compilers = await provider.send(\"eth_getCompilers\");\nconsole.log(compilers);\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1037,
									"character": 24
								}
							]
						},
						{
							"id": 583,
							"name": "eth_getFilterChanges",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 584,
									"name": "eth_getFilterChanges",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Polling method for a filter, which returns an array of logs, block hashes,\nor transaction hashes, depending on the filter type, which occurred since\nlast poll.",
										"returns": "An array of logs, block hashes, or transaction hashes, depending\non the filter type, which occurred since last poll.\n\nFor filters created with `eth_newBlockFilter` the return are block hashes (`DATA`, 32 Bytes).\n\nFor filters created with `eth_newPendingTransactionFilter` the return are transaction hashes (`DATA`, 32 Bytes).\n\nFor filters created with `eth_newFilter` the return are log objects with the following parameters:\n* `removed`: `TAG` - `true` when the log was removed, `false` if its a valid log.\n* `logIndex`: `QUANTITY` - Integer of the log index position in the block. `null` when pending.\n* `transactionIndex`: `QUANTITY` - Integer of the transactions index position. `null` when pending.\n* `transactionHash`: `DATA`, 32 Bytes - Hash of the transaction where the log was. `null` when pending.\n* `blockHash`: `DATA`, 32 Bytes - Hash of the block where the log was. `null` when pending.\n* `blockNumber`: `QUANTITY` - The block number where the log was in. `null` when pending.\n* `address`: `DATA`, 20 Bytes - The address from which the log originated.\n* `data`: `DATA` - Contains one or more 32 Bytes non-indexed arguments of the log.\n* `topics`: `Array of DATA` - Array of 0 to 4 32 Bytes `DATA` of indexed log arguments.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\n// Logs.sol\n// // SPDX-License-Identifier: MIT\n// pragma solidity ^0.7.4;\n// contract Logs {\n//   event Event(uint256 indexed first, uint256 indexed second);\n//   constructor() {\n//     emit Event(1, 2);\n//   }\n//\n//   function logNTimes(uint8 n) public {\n//     for (uint8 i = 0; i < n; i++) {\n//       emit Event(i, i);\n//     }\n//   }\n// }\n\nconst logsContract = \"0x608060405234801561001057600080fd5b50600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a360e58061004f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635e19e69f14602d575b600080fd5b605960048036036020811015604157600080fd5b81019080803560ff169060200190929190505050605b565b005b60005b8160ff168160ff16101560ab578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a38080600101915050605e565b505056fea26469706673582212201af9c13c7b00e2b628c1258d45f9f62d2aad8cd32fc32fd9515d8ad1e792679064736f6c63430007040033\";\nconst [from] = await provider.send(\"eth_accounts\");\nconst filterId = await provider.send(\"eth_newFilter\");\n\nconst subscriptionId = await provider.send(\"eth_subscribe\", [\"newHeads\"]);\nawait provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\nawait provider.once(\"message\");\n\nconst changes = await provider.request({ method: \"eth_getFilterChanges\", params: [filterId] });\nconsole.log(changes);\n\nawait provider.send(\"eth_unsubscribe\", [subscriptionId]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 585,
											"name": "filterId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The filter id."
											},
											"type": {
												"type": "reference",
												"name": "QUANTITY"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Data"
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 2299,
									"character": 28
								}
							]
						},
						{
							"id": 589,
							"name": "eth_getFilterLogs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 590,
									"name": "eth_getFilterLogs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns an array of all logs matching filter with given id.",
										"returns": "Array of log objects, or an empty array.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\n// Logs.sol\n// // SPDX-License-Identifier: MIT\n// pragma solidity ^0.7.4;\n// contract Logs {\n//   event Event(uint256 indexed first, uint256 indexed second);\n//   constructor() {\n//     emit Event(1, 2);\n//   }\n//\n//   function logNTimes(uint8 n) public {\n//     for (uint8 i = 0; i < n; i++) {\n//       emit Event(i, i);\n//     }\n//   }\n// }\n\nconst logsContract = \"0x608060405234801561001057600080fd5b50600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a360e58061004f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635e19e69f14602d575b600080fd5b605960048036036020811015604157600080fd5b81019080803560ff169060200190929190505050605b565b005b60005b8160ff168160ff16101560ab578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a38080600101915050605e565b505056fea26469706673582212201af9c13c7b00e2b628c1258d45f9f62d2aad8cd32fc32fd9515d8ad1e792679064736f6c63430007040033\";\nconst [from] = await provider.send(\"eth_accounts\");\nconst filterId = await provider.send(\"eth_newFilter\");\n\nawait provider.send(\"eth_subscribe\", [\"newHeads\"]);\nawait provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\nawait provider.once(\"message\");\n\nconst logs = await provider.request({ method: \"eth_getFilterLogs\", params: [filterId] });\nconsole.log(logs);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 591,
											"name": "filterId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The filter id."
											},
											"type": {
												"type": "reference",
												"name": "QUANTITY"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 592,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {
															"isExported": true
														},
														"children": [
															{
																"id": 593,
																"name": "address",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 121,
																		"character": 15
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Address"
																}
															},
															{
																"id": 594,
																"name": "blockHash",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 122,
																		"character": 17
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Data"
																}
															},
															{
																"id": 595,
																"name": "blockNumber",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 123,
																		"character": 19
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Quantity"
																}
															},
															{
																"id": 596,
																"name": "data",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 124,
																		"character": 12
																	}
																],
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "reference",
																			"name": "Data"
																		},
																		{
																			"type": "array",
																			"elementType": {
																				"type": "reference",
																				"name": "Data"
																			}
																		}
																	]
																}
															},
															{
																"id": 597,
																"name": "logIndex",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 125,
																		"character": 16
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Quantity"
																}
															},
															{
																"id": 598,
																"name": "removed",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 126,
																		"character": 15
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "boolean"
																}
															},
															{
																"id": 599,
																"name": "topics",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 127,
																		"character": 14
																	}
																],
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "reference",
																			"name": "Data"
																		},
																		{
																			"type": "array",
																			"elementType": {
																				"type": "reference",
																				"name": "Data"
																			}
																		}
																	]
																}
															},
															{
																"id": 600,
																"name": "transactionHash",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 128,
																		"character": 23
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Data"
																}
															},
															{
																"id": 601,
																"name": "transactionIndex",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 129,
																		"character": 24
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Quantity"
																}
															}
														],
														"groups": [
															{
																"title": "Variables",
																"kind": 32,
																"children": [
																	593,
																	594,
																	595,
																	596,
																	597,
																	598,
																	599,
																	600,
																	601
																]
															}
														]
													}
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 2369,
									"character": 25
								}
							]
						},
						{
							"id": 602,
							"name": "eth_getLogs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 603,
									"name": "eth_getLogs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns an array of all logs matching a given filter object.",
										"text": "Filter options:\n* `fromBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\nor \"pending\".\n* `toBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\nor \"pending\".\n* `address`: `DATA | Array` (optional) - Contract address or a list of addresses from which the logs should originate.\n* `topics`: `Array of DATA` (optional) - Array of 32 Bytes `DATA` topcis. Topics are order-dependent. Each topic can also\nbe an array of `DATA` with \"or\" options.\n* `blockHash`: `DATA`, 32 Bytes (optional) - Hash of the block to restrict logs from. If `blockHash` is present,\nthen neither `fromBlock` or `toBlock` are allowed.\n",
										"returns": "Array of log objects, or an empty array.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\n// Logs.sol\n// // SPDX-License-Identifier: MIT\n// pragma solidity ^0.7.4;\n// contract Logs {\n//   event Event(uint256 indexed first, uint256 indexed second);\n//   constructor() {\n//     emit Event(1, 2);\n//   }\n//\n//   function logNTimes(uint8 n) public {\n//     for (uint8 i = 0; i < n; i++) {\n//       emit Event(i, i);\n//     }\n//   }\n// }\n\nconst logsContract = \"0x608060405234801561001057600080fd5b50600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a360e58061004f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635e19e69f14602d575b600080fd5b605960048036036020811015604157600080fd5b81019080803560ff169060200190929190505050605b565b005b60005b8160ff168160ff16101560ab578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a38080600101915050605e565b505056fea26469706673582212201af9c13c7b00e2b628c1258d45f9f62d2aad8cd32fc32fd9515d8ad1e792679064736f6c63430007040033\";\nconst [from] = await provider.send(\"eth_accounts\");\n\nawait provider.send(\"eth_subscribe\", [\"newHeads\"]);\nconst txHash = await provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\nawait provider.once(\"message\");\n\nconst { contractAddress } = await provider.send(\"eth_getTransactionReceipt\", [txHash] );\n\nconst logs = await provider.request({ method: \"eth_getLogs\", params: [{ address: contractAddress }] });\nconsole.log(logs);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 604,
											"name": "filter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The filter options as seen in source."
											},
											"type": {
												"type": "reference",
												"name": "FilterArgs"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 605,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {
															"isExported": true
														},
														"children": [
															{
																"id": 606,
																"name": "address",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 121,
																		"character": 15
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Address"
																}
															},
															{
																"id": 607,
																"name": "blockHash",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 122,
																		"character": 17
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Data"
																}
															},
															{
																"id": 608,
																"name": "blockNumber",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 123,
																		"character": 19
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Quantity"
																}
															},
															{
																"id": 609,
																"name": "data",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 124,
																		"character": 12
																	}
																],
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "reference",
																			"name": "Data"
																		},
																		{
																			"type": "array",
																			"elementType": {
																				"type": "reference",
																				"name": "Data"
																			}
																		}
																	]
																}
															},
															{
																"id": 610,
																"name": "logIndex",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 125,
																		"character": 16
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Quantity"
																}
															},
															{
																"id": 611,
																"name": "removed",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 126,
																		"character": 15
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "boolean"
																}
															},
															{
																"id": 612,
																"name": "topics",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 127,
																		"character": 14
																	}
																],
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "reference",
																			"name": "Data"
																		},
																		{
																			"type": "array",
																			"elementType": {
																				"type": "reference",
																				"name": "Data"
																			}
																		}
																	]
																}
															},
															{
																"id": 613,
																"name": "transactionHash",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 128,
																		"character": 23
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Data"
																}
															},
															{
																"id": 614,
																"name": "transactionIndex",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 129,
																		"character": 24
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Quantity"
																}
															}
														],
														"groups": [
															{
																"title": "Variables",
																"kind": 32,
																"children": [
																	606,
																	607,
																	608,
																	609,
																	610,
																	611,
																	612,
																	613,
																	614
																]
															}
														]
													}
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 2426,
									"character": 19
								}
							]
						},
						{
							"id": 519,
							"name": "eth_getStorageAt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2",
										"max": "3"
									}
								}
							],
							"signatures": [
								{
									"id": 520,
									"name": "eth_getStorageAt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the value from a storage position at a given address.",
										"returns": "The value in storage at the requested position.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\n// Simple.sol\n// // SPDX-License-Identifier: MIT\n//  pragma solidity ^0.7.4;\n//\n//  contract Simple {\n//      uint256 public value;\n//      constructor() payable {\n//          value = 5;\n//      }\n//  }\nconst simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\nconst [from] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\nawait provider.once(\"message\"); // Note: `await provider.once` is non-standard\nconst txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\nconst storageValue = await provider.request({ method: \"eth_getStorageAt\", params: [txReceipt.contractAddress, \"0x0\", \"latest\"] });\nconsole.log(storageValue);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 521,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Address of the storage."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 522,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Integer of the position in the storage."
											},
											"type": {
												"type": "reference",
												"name": "QUANTITY"
											}
										},
										{
											"id": 523,
											"name": "blockNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Integer block number, or the string \"latest\", \"earliest\"\n or \"pending\"."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "QUANTITY"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											},
											"defaultValue": "Tag.LATEST"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Data"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1483,
									"character": 24
								}
							]
						},
						{
							"id": 281,
							"name": "eth_getTransactionByBlockHashAndIndex",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 282,
									"name": "eth_getTransactionByBlockHashAndIndex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns information about a transaction by block hash and transaction index position.",
										"returns": "The transaction object or `null` if no transaction was found.\n\n* `hash`: `DATA`, 32 Bytes - The transaction hash.\n* `nonce`: `QUANTITY` - The number of transactions made by the sender prior to this one.\n* `blockHash`: `DATA`, 32 Bytes - The hash of the block the transaction is in. `null` when pending.\n* `blockNumber`: `QUANTITY` - The number of the block the transaction is in. `null` when pending.\n* `transactionIndex`: `QUANTITY` - The index position of the transaction in the block.\n* `from`: `DATA`, 20 Bytes - The address the transaction is sent from.\n* `to`: `DATA`, 20 Bytes - The address the transaction is sent to.\n* `value`: `QUANTITY` - The value transferred in wei.\n* `gas`: `QUANTITY` - The gas provided by the sender.\n* `gasPrice`: `QUANTITY` - The price of gas in wei.\n* `input`: `DATA` - The data sent along with the transaction.\n* `v`: `QUANTITY` - ECDSA recovery id.\n* `r`: `DATA`, 32 Bytes - ECDSA signature r.\n* `s`: `DATA`, 32 Bytes - ECDSA signature s.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\nawait provider.once(\"message\"); // Note: `await provider.once` is non-standard\nconst { blockHash, transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n\nconst tx = await provider.request({ method: \"eth_getTransactionByBlockHashAndIndex\", params: [ blockHash, transactionIndex ] });\nconsole.log(tx);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 283,
											"name": "hash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Hash of a block."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 284,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Integer of the transaction index position."
											},
											"type": {
												"type": "reference",
												"name": "QUANTITY"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 285,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 289,
															"name": "blockHash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 15,
																	"character": 13
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 290,
															"name": "blockNumber",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 16,
																	"character": 15
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 292,
															"name": "from",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 18,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 295,
															"name": "gas",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 21,
																	"character": 7
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 296,
															"name": "gasPrice",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 22,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 286,
															"name": "hash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 12,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 297,
															"name": "input",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 23,
																	"character": 9
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 288,
															"name": "nonce",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 14,
																	"character": 9
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 299,
															"name": "r",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 25,
																	"character": 5
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 300,
															"name": "s",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 26,
																	"character": 5
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 293,
															"name": "to",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 19,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"name": "Address"
															}
														},
														{
															"id": 291,
															"name": "transactionIndex",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 17,
																	"character": 20
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 287,
															"name": "type",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 13,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 298,
															"name": "v",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 24,
																	"character": 5
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 294,
															"name": "value",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 20,
																	"character": 9
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																289,
																290,
																292,
																295,
																296,
																286,
																297,
																288,
																299,
																300,
																293,
																291,
																287,
																298,
																294
															]
														}
													]
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1075,
									"character": 45
								}
							]
						},
						{
							"id": 301,
							"name": "eth_getTransactionByBlockNumberAndIndex",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 302,
									"name": "eth_getTransactionByBlockNumberAndIndex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns information about a transaction by block number and transaction index position.",
										"returns": "The transaction object or `null` if no transaction was found.\n\n* `hash`: `DATA`, 32 Bytes - The transaction hash.\n* `nonce`: `QUANTITY` - The number of transactions made by the sender prior to this one.\n* `blockHash`: `DATA`, 32 Bytes - The hash of the block the transaction is in. `null` when pending.\n* `blockNumber`: `QUANTITY` - The number of the block the transaction is in. `null` when pending.\n* `transactionIndex`: `QUANTITY` - The index position of the transaction in the block.\n* `from`: `DATA`, 20 Bytes - The address the transaction is sent from.\n* `to`: `DATA`, 20 Bytes - The address the transaction is sent to.\n* `value`: `QUANTITY` - The value transferred in wei.\n* `gas`: `QUANTITY` - The gas provided by the sender.\n* `gasPrice`: `QUANTITY` - The price of gas in wei.\n* `input`: `DATA` - The data sent along with the transaction.\n* `v`: `QUANTITY` - ECDSA recovery id.\n* `r`: `DATA`, 32 Bytes - ECDSA signature r.\n* `s`: `DATA`, 32 Bytes - ECDSA signature s.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\nawait provider.once(\"message\"); // Note: `await provider.once` is non-standard\nconst { transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n\nconst tx = await provider.request({ method: \"eth_getTransactionByBlockNumberAndIndex\", params: [ \"latest\", transactionIndex ] });\nconsole.log(tx);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 303,
											"name": "number",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "A block number, or the string \"earliest\", \"latest\" or \"pending\"."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "QUANTITY"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											}
										},
										{
											"id": 304,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Integer of the transaction index position."
											},
											"type": {
												"type": "reference",
												"name": "QUANTITY"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 305,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 309,
															"name": "blockHash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 15,
																	"character": 13
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 310,
															"name": "blockNumber",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 16,
																	"character": 15
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 312,
															"name": "from",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 18,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 315,
															"name": "gas",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 21,
																	"character": 7
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 316,
															"name": "gasPrice",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 22,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 306,
															"name": "hash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 12,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 317,
															"name": "input",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 23,
																	"character": 9
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 308,
															"name": "nonce",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 14,
																	"character": 9
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 319,
															"name": "r",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 25,
																	"character": 5
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 320,
															"name": "s",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 26,
																	"character": 5
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 313,
															"name": "to",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 19,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"name": "Address"
															}
														},
														{
															"id": 311,
															"name": "transactionIndex",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 17,
																	"character": 20
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 307,
															"name": "type",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 13,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 318,
															"name": "v",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 24,
																	"character": 5
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 314,
															"name": "value",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 20,
																	"character": 9
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																309,
																310,
																312,
																315,
																316,
																306,
																317,
																308,
																319,
																320,
																313,
																311,
																307,
																318,
																314
															]
														}
													]
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1121,
									"character": 47
								}
							]
						},
						{
							"id": 524,
							"name": "eth_getTransactionByHash",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 525,
									"name": "eth_getTransactionByHash",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the information about a transaction requested by transaction hash.",
										"returns": "The transaction object or `null` if no transaction was found.\n\n* `hash`: `DATA`, 32 Bytes - The transaction hash.\n* `nonce`: `QUANTITY` - The number of transactions made by the sender prior to this one.\n* `blockHash`: `DATA`, 32 Bytes - The hash of the block the transaction is in. `null` when pending.\n* `blockNumber`: `QUANTITY` - The number of the block the transaction is in. `null` when pending.\n* `transactionIndex`: `QUANTITY` - The index position of the transaction in the block.\n* `from`: `DATA`, 20 Bytes - The address the transaction is sent from.\n* `to`: `DATA`, 20 Bytes - The address the transaction is sent to.\n* `value`: `QUANTITY` - The value transferred in wei.\n* `gas`: `QUANTITY` - The gas provided by the sender.\n* `gasPrice`: `QUANTITY` - The price of gas in wei.\n* `input`: `DATA` - The data sent along with the transaction.\n* `v`: `QUANTITY` - ECDSA recovery id.\n* `r`: `DATA`, 32 Bytes - ECDSA signature r.\n* `s`: `DATA`, 32 Bytes - ECDSA signature s.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\nawait provider.once(\"message\"); // Note: `await provider.once` is non-standard\n\nconst tx = await provider.request({ method: \"eth_getTransactionByHash\", params: [ txHash ] });\nconsole.log(tx);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 526,
											"name": "transactionHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Hash of a transaction."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 527,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 531,
															"name": "blockHash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 15,
																	"character": 13
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 532,
															"name": "blockNumber",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 16,
																	"character": 15
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 534,
															"name": "from",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 18,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 537,
															"name": "gas",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 21,
																	"character": 7
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 538,
															"name": "gasPrice",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 22,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 528,
															"name": "hash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 12,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 539,
															"name": "input",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 23,
																	"character": 9
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 530,
															"name": "nonce",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 14,
																	"character": 9
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 541,
															"name": "r",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 25,
																	"character": 5
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 542,
															"name": "s",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 26,
																	"character": 5
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 535,
															"name": "to",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 19,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"name": "Address"
															}
														},
														{
															"id": 533,
															"name": "transactionIndex",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 17,
																	"character": 20
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 529,
															"name": "type",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 13,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 540,
															"name": "v",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 24,
																	"character": 5
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 536,
															"name": "value",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																	"line": 20,
																	"character": 9
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																531,
																532,
																534,
																537,
																538,
																528,
																539,
																530,
																541,
																542,
																535,
																533,
																529,
																540,
																536
															]
														}
													]
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1556,
									"character": 32
								}
							]
						},
						{
							"id": 615,
							"name": "eth_getTransactionCount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1",
										"max": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 616,
									"name": "eth_getTransactionCount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the number of transactions sent from an address.",
										"returns": "Number of transactions sent from this address.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nawait provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\nawait provider.once(\"message\"); // Note: `await provider.once` is non-standard\n\nconst txCount = await provider.request({ method: \"eth_getTransactionCount\", params: [ from, \"latest\" ] });\nconsole.log(txCount);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 617,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "`DATA`, 20 Bytes - The address to get number of transactions sent from"
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 618,
											"name": "blockNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Integer block number, or the string \"latest\", \"earliest\"\nor \"pending\"."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "QUANTITY"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											},
											"defaultValue": "Tag.LATEST"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 2449,
									"character": 31
								}
							]
						},
						{
							"id": 543,
							"name": "eth_getTransactionReceipt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 544,
									"name": "eth_getTransactionReceipt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the receipt of a transaction by transaction hash.",
										"text": "Note: The receipt is not available for pending transactions.\n",
										"returns": "Returns the receipt of a transaction by transaction hash.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\nawait provider.once(\"message\"); // Note: `await provider.once` is non-standard\n\nconst txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [ txHash ] });\nconsole.log(txReceipt);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 545,
											"name": "transactionHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Hash of a transaction."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TransactionReceiptJSON"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1593,
									"character": 33
								}
							]
						},
						{
							"id": 327,
							"name": "eth_getUncleByBlockHashAndIndex",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 328,
									"name": "eth_getUncleByBlockHashAndIndex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns information about a uncle of a block by hash and uncle index position.",
										"returns": "A block object or `null` when no block is found.\n\n* `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n* `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n* `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n* `miner`: `DATA`, 20 Bytes -  Address of the miner.\n* `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n* `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n* `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n* `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n* `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n* `number`: `QUANTITY` - The block number. `null` when pending.\n* `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n* `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n* `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n* `extraData`: `DATA` - Extra data for the block.\n* `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n* `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n* `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n* `size`: `QUANTITY` - Integer the size of the block in bytes.\n* `transactions`: `Array` - Array of transaction objects or 32 Bytes transaction hashes depending on the last parameter.\n* `uncles`: `Array` - Array of uncle hashes.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst blockHash = await provider.send(\"eth_getBlockByNumber\", [\"latest\"] );\nconst block = await provider.send(\"eth_getUncleByBlockHashAndIndex\", [blockHash, \"0x0\"] );\nconsole.log(block);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 329,
											"name": "hash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Hash of a block."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 330,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The uncle's index position."
											},
											"type": {
												"type": "reference",
												"name": "QUANTITY"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 331,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 405,
															"name": "baseFeePerGas",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 43,
																	"character": 21
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 396,
															"name": "difficulty",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 34,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 402,
															"name": "extraData",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 40,
																	"character": 17
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 399,
															"name": "gasLimit",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 37,
																	"character": 16
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 400,
															"name": "gasUsed",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 38,
																	"character": 15
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 406,
															"name": "hash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 44,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 395,
															"name": "logsBloom",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 33,
																	"character": 17
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 391,
															"name": "miner",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 29,
																	"character": 13
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 403,
															"name": "mixHash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 41,
																	"character": 15
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 404,
															"name": "nonce",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 42,
																	"character": 13
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 398,
															"name": "number",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 36,
																	"character": 14
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 389,
															"name": "parentHash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 27,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 394,
															"name": "receiptsRoot",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 32,
																	"character": 20
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 390,
															"name": "sha3Uncles",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 28,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 332,
															"name": "size",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 24,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 392,
															"name": "stateRoot",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 30,
																	"character": 17
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 401,
															"name": "timestamp",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 39,
																	"character": 17
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 397,
															"name": "totalDifficulty",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 35,
																	"character": 23
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 333,
															"name": "transactions",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 25,
																	"character": 20
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "reference",
																			"name": "Data"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 334,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {
																					"isExported": true
																				},
																				"children": [
																					{
																						"id": 338,
																						"name": "blockHash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 15,
																								"character": 13
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 339,
																						"name": "blockNumber",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 16,
																								"character": 15
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 341,
																						"name": "from",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 18,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 344,
																						"name": "gas",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 21,
																								"character": 7
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 345,
																						"name": "gasPrice",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 22,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 335,
																						"name": "hash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 12,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 346,
																						"name": "input",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 23,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 337,
																						"name": "nonce",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 14,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 348,
																						"name": "r",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 25,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 349,
																						"name": "s",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 26,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 342,
																						"name": "to",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 19,
																								"character": 6
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Address"
																						}
																					},
																					{
																						"id": 340,
																						"name": "transactionIndex",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 17,
																								"character": 20
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 336,
																						"name": "type",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true,
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 13,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 347,
																						"name": "v",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 24,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 343,
																						"name": "value",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 20,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Variables",
																						"kind": 32,
																						"children": [
																							338,
																							339,
																							341,
																							344,
																							345,
																							335,
																							346,
																							337,
																							348,
																							349,
																							342,
																							340,
																							336,
																							347,
																							343
																						]
																					}
																				]
																			}
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 350,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {
																					"isExported": true
																				},
																				"children": [
																					{
																						"id": 364,
																						"name": "accessList",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 42,
																								"character": 14
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "AccessList"
																						}
																					},
																					{
																						"id": 355,
																						"name": "blockHash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 33,
																								"character": 13
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 356,
																						"name": "blockNumber",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 34,
																								"character": 15
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 353,
																						"name": "chainId",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 31,
																								"character": 11
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 358,
																						"name": "from",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 36,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 361,
																						"name": "gas",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 39,
																								"character": 7
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 362,
																						"name": "gasPrice",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 40,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 351,
																						"name": "hash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 29,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 363,
																						"name": "input",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 41,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 354,
																						"name": "nonce",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 32,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 366,
																						"name": "r",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 44,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 367,
																						"name": "s",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 45,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 359,
																						"name": "to",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 37,
																								"character": 6
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Address"
																						}
																					},
																					{
																						"id": 357,
																						"name": "transactionIndex",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 35,
																								"character": 20
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 352,
																						"name": "type",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 30,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 365,
																						"name": "v",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 43,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 360,
																						"name": "value",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 38,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Variables",
																						"kind": 32,
																						"children": [
																							364,
																							355,
																							356,
																							353,
																							358,
																							361,
																							362,
																							351,
																							363,
																							354,
																							366,
																							367,
																							359,
																							357,
																							352,
																							365,
																							360
																						]
																					}
																				]
																			}
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 368,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {
																					"isExported": true
																				},
																				"children": [
																					{
																						"id": 384,
																						"name": "accessList",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 63,
																								"character": 14
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "AccessList"
																						}
																					},
																					{
																						"id": 373,
																						"name": "blockHash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 52,
																								"character": 13
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 374,
																						"name": "blockNumber",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 53,
																								"character": 15
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 371,
																						"name": "chainId",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 50,
																								"character": 11
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 376,
																						"name": "from",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 55,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 382,
																						"name": "gas",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 61,
																								"character": 7
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 381,
																						"name": "gasPrice",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 60,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 369,
																						"name": "hash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 48,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 383,
																						"name": "input",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 62,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 380,
																						"name": "maxFeePerGas",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 59,
																								"character": 16
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 379,
																						"name": "maxPriorityFeePerGas",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 58,
																								"character": 24
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 372,
																						"name": "nonce",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 51,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 386,
																						"name": "r",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 65,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 387,
																						"name": "s",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 66,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 377,
																						"name": "to",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 56,
																								"character": 6
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Address"
																						}
																					},
																					{
																						"id": 375,
																						"name": "transactionIndex",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 54,
																								"character": 20
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 370,
																						"name": "type",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 49,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 385,
																						"name": "v",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 64,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 378,
																						"name": "value",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 57,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Variables",
																						"kind": 32,
																						"children": [
																							384,
																							373,
																							374,
																							371,
																							376,
																							382,
																							381,
																							369,
																							383,
																							380,
																							379,
																							372,
																							386,
																							387,
																							377,
																							375,
																							370,
																							385,
																							378
																						]
																					}
																				]
																			}
																		}
																	]
																}
															}
														},
														{
															"id": 393,
															"name": "transactionsRoot",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 31,
																	"character": 24
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 388,
															"name": "uncles",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 26,
																	"character": 14
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																405,
																396,
																402,
																399,
																400,
																406,
																395,
																391,
																403,
																404,
																398,
																389,
																394,
																390,
																332,
																392,
																401,
																397,
																333,
																393,
																388
															]
														}
													]
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1201,
									"character": 39
								}
							]
						},
						{
							"id": 407,
							"name": "eth_getUncleByBlockNumberAndIndex",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 408,
									"name": "eth_getUncleByBlockNumberAndIndex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns information about a uncle of a block by hash and uncle index position.",
										"returns": "A block object or `null` when no block is found.\n\n* `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n* `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n* `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n* `miner`: `DATA`, 20 Bytes -  Address of the miner.\n* `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n* `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n* `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n* `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n* `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n* `number`: `QUANTITY` - The block number. `null` when pending.\n* `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n* `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n* `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n* `extraData`: `DATA` - Extra data for the block.\n* `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n* `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n* `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n* `size`: `QUANTITY` - Integer the size of the block in bytes.\n* `transactions`: `Array` - Array of transaction objects or 32 Bytes transaction hashes depending on the last parameter.\n* `uncles`: `Array` - Array of uncle hashes.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst block = await provider.send(\"eth_getUncleByBlockNumberAndIndex\", [\"latest\", \"0x0\"] );\nconsole.log(block);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 409,
											"name": "blockNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "A block number, or the string \"earliest\", \"latest\" or \"pending\"."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "QUANTITY"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											}
										},
										{
											"id": 410,
											"name": "uncleIndex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The uncle's index position."
											},
											"type": {
												"type": "reference",
												"name": "QUANTITY"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 411,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 485,
															"name": "baseFeePerGas",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 43,
																	"character": 21
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 476,
															"name": "difficulty",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 34,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 482,
															"name": "extraData",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 40,
																	"character": 17
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 479,
															"name": "gasLimit",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 37,
																	"character": 16
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 480,
															"name": "gasUsed",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 38,
																	"character": 15
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 486,
															"name": "hash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 44,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 475,
															"name": "logsBloom",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 33,
																	"character": 17
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 471,
															"name": "miner",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 29,
																	"character": 13
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 483,
															"name": "mixHash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 41,
																	"character": 15
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 484,
															"name": "nonce",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 42,
																	"character": 13
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 478,
															"name": "number",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 36,
																	"character": 14
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 469,
															"name": "parentHash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 27,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 474,
															"name": "receiptsRoot",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 32,
																	"character": 20
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 470,
															"name": "sha3Uncles",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 28,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 412,
															"name": "size",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 24,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 472,
															"name": "stateRoot",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 30,
																	"character": 17
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 481,
															"name": "timestamp",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 39,
																	"character": 17
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 477,
															"name": "totalDifficulty",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 35,
																	"character": 23
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 413,
															"name": "transactions",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 25,
																	"character": 20
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "reference",
																			"name": "Data"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 414,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {
																					"isExported": true
																				},
																				"children": [
																					{
																						"id": 418,
																						"name": "blockHash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 15,
																								"character": 13
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 419,
																						"name": "blockNumber",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 16,
																								"character": 15
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 421,
																						"name": "from",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 18,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 424,
																						"name": "gas",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 21,
																								"character": 7
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 425,
																						"name": "gasPrice",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 22,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 415,
																						"name": "hash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 12,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 426,
																						"name": "input",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 23,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 417,
																						"name": "nonce",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 14,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 428,
																						"name": "r",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 25,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 429,
																						"name": "s",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 26,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 422,
																						"name": "to",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 19,
																								"character": 6
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Address"
																						}
																					},
																					{
																						"id": 420,
																						"name": "transactionIndex",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 17,
																								"character": 20
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 416,
																						"name": "type",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true,
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 13,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 427,
																						"name": "v",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 24,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 423,
																						"name": "value",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 20,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Variables",
																						"kind": 32,
																						"children": [
																							418,
																							419,
																							421,
																							424,
																							425,
																							415,
																							426,
																							417,
																							428,
																							429,
																							422,
																							420,
																							416,
																							427,
																							423
																						]
																					}
																				]
																			}
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 430,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {
																					"isExported": true
																				},
																				"children": [
																					{
																						"id": 444,
																						"name": "accessList",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 42,
																								"character": 14
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "AccessList"
																						}
																					},
																					{
																						"id": 435,
																						"name": "blockHash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 33,
																								"character": 13
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 436,
																						"name": "blockNumber",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 34,
																								"character": 15
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 433,
																						"name": "chainId",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 31,
																								"character": 11
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 438,
																						"name": "from",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 36,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 441,
																						"name": "gas",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 39,
																								"character": 7
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 442,
																						"name": "gasPrice",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 40,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 431,
																						"name": "hash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 29,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 443,
																						"name": "input",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 41,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 434,
																						"name": "nonce",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 32,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 446,
																						"name": "r",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 44,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 447,
																						"name": "s",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 45,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 439,
																						"name": "to",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 37,
																								"character": 6
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Address"
																						}
																					},
																					{
																						"id": 437,
																						"name": "transactionIndex",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 35,
																								"character": 20
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 432,
																						"name": "type",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 30,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 445,
																						"name": "v",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 43,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 440,
																						"name": "value",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 38,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Variables",
																						"kind": 32,
																						"children": [
																							444,
																							435,
																							436,
																							433,
																							438,
																							441,
																							442,
																							431,
																							443,
																							434,
																							446,
																							447,
																							439,
																							437,
																							432,
																							445,
																							440
																						]
																					}
																				]
																			}
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 448,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {
																					"isExported": true
																				},
																				"children": [
																					{
																						"id": 464,
																						"name": "accessList",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 63,
																								"character": 14
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "AccessList"
																						}
																					},
																					{
																						"id": 453,
																						"name": "blockHash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 52,
																								"character": 13
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 454,
																						"name": "blockNumber",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 53,
																								"character": 15
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 451,
																						"name": "chainId",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 50,
																								"character": 11
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 456,
																						"name": "from",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 55,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 462,
																						"name": "gas",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 61,
																								"character": 7
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 461,
																						"name": "gasPrice",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 60,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 449,
																						"name": "hash",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 48,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 463,
																						"name": "input",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 62,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Data"
																						}
																					},
																					{
																						"id": 460,
																						"name": "maxFeePerGas",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 59,
																								"character": 16
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 459,
																						"name": "maxPriorityFeePerGas",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 58,
																								"character": 24
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 452,
																						"name": "nonce",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 51,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 466,
																						"name": "r",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 65,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 467,
																						"name": "s",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 66,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 457,
																						"name": "to",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 56,
																								"character": 6
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Address"
																						}
																					},
																					{
																						"id": 455,
																						"name": "transactionIndex",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 54,
																								"character": 20
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 450,
																						"name": "type",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 49,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 465,
																						"name": "v",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 64,
																								"character": 5
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					},
																					{
																						"id": 458,
																						"name": "value",
																						"kind": 32,
																						"kindString": "Variable",
																						"flags": {
																							"isExported": true
																						},
																						"sources": [
																							{
																								"fileName": "chains/ethereum/transaction/typings/src/transaction-types.d.ts",
																								"line": 57,
																								"character": 9
																							}
																						],
																						"type": {
																							"type": "reference",
																							"name": "Quantity"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Variables",
																						"kind": 32,
																						"children": [
																							464,
																							453,
																							454,
																							451,
																							456,
																							462,
																							461,
																							449,
																							463,
																							460,
																							459,
																							452,
																							466,
																							467,
																							457,
																							455,
																							450,
																							465,
																							458
																						]
																					}
																				]
																			}
																		}
																	]
																}
															}
														},
														{
															"id": 473,
															"name": "transactionsRoot",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 31,
																	"character": 24
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 468,
															"name": "uncles",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/block/typings/src/block.d.ts",
																	"line": 26,
																	"character": 14
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																485,
																476,
																482,
																479,
																480,
																486,
																475,
																471,
																483,
																484,
																478,
																469,
																474,
																470,
																412,
																472,
																481,
																477,
																413,
																473,
																468
															]
														}
													]
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1240,
									"character": 41
								}
							]
						},
						{
							"id": 321,
							"name": "eth_getUncleCountByBlockHash",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 322,
									"name": "eth_getUncleCountByBlockHash",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the number of uncles in a block from a block matching the given block hash.",
										"returns": "The number of uncles in a block.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst blockHash = await provider.send(\"eth_getBlockByNumber\", [\"latest\"] );\nconst uncleCount = await provider.send(\"eth_getUncleCountByBlockHash\", [blockHash] );\nconsole.log(uncleCount);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 323,
											"name": "hash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Hash of a block."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1146,
									"character": 36
								}
							]
						},
						{
							"id": 324,
							"name": "eth_getUncleCountByBlockNumber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 325,
									"name": "eth_getUncleCountByBlockNumber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the number of uncles in a block from a block matching the given block hash.",
										"returns": "The number of uncles in a block.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst uncleCount = await provider.send(\"eth_getUncleCountByBlockNumber\", [\"latest\"] );\nconsole.log(uncleCount);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 326,
											"name": "blockNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "A block number, or the string \"earliest\", \"latest\" or \"pending\"."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "QUANTITY"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1161,
									"character": 38
								}
							]
						},
						{
							"id": 487,
							"name": "eth_getWork",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 488,
									"name": "eth_getWork",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns: An Array with the following elements\n1: `DATA`, 32 Bytes - current block header pow-hash\n2: `DATA`, 32 Bytes - the seed hash used for the DAG.\n3: `DATA`, 32 Bytes - the boundary condition (\"target\"), 2^256 / difficulty.",
										"returns": "The hash of the current block, the seedHash, and the boundary condition to be met (\"target\").",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"eth_getWork\", [\"0x0\"] ));\n ```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 489,
											"name": "filterId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "A filter id."
											},
											"type": {
												"type": "reference",
												"name": "QUANTITY"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "tuple"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1261,
									"character": 19
								}
							]
						},
						{
							"id": 501,
							"name": "eth_hashrate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 502,
									"name": "eth_hashrate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the number of hashes per second that the node is mining with.",
										"returns": "Number of hashes per second.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst hashrate = await provider.request({ method: \"eth_hashrate\", params: [] });\nconsole.log(hashrate);\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1330,
									"character": 20
								}
							]
						},
						{
							"id": 499,
							"name": "eth_mining",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 500,
									"name": "eth_mining",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns `true` if client is actively mining new blocks.",
										"returns": "returns `true` if the client is mining, otherwise `false`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst isMining = await provider.request({ method: \"eth_mining\", params: [] });\nconsole.log(isMining);\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1315,
									"character": 18
								}
							]
						},
						{
							"id": 576,
							"name": "eth_newBlockFilter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 577,
									"name": "eth_newBlockFilter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates a filter in the node, to notify when a new block arrives. To check\nif the state has changed, call `eth_getFilterChanges`.",
										"returns": "A filter id.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst filterId = await provider.request({ method: \"eth_newBlockFilter\", params: [] });\nconsole.log(filterId);\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 2135,
									"character": 26
								}
							]
						},
						{
							"id": 580,
							"name": "eth_newFilter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0",
										"max": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 581,
									"name": "eth_newFilter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates a filter object, based on filter options, to notify when the state\nchanges (logs). To check if the state has changed, call\n`eth_getFilterChanges`.",
										"text": "If the from `fromBlock` or `toBlock` option are equal to \"latest\" the\nfilter continually append logs for whatever block is seen as latest at the\ntime the block was mined, not just for the block that was \"latest\" when the\nfilter was created.\n\n### A note on specifying topic filters:\nTopics are order-dependent. A transaction with a log with topics [A, B]\nwill be matched by the following topic filters:\n * `[]` “anything”\n * `[A]` “A in first position (and anything after)”\n * `[null, B]` “anything in first position AND B in second position (and\nanything after)”\n * `[A, B]` “A in first position AND B in second position (and anything\nafter)”\n * `[[A, B], [A, B]]` “(A OR B) in first position AND (A OR B) in second\nposition (and anything after)”\n\nFilter options:\n* `fromBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\nor \"pending\".\n* `toBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\nor \"pending\".\n* `address`: `DATA | Array` (optional) - Contract address or a list of addresses from which the logs should originate.\n* `topics`: `Array of DATA` (optional) - Array of 32 Bytes `DATA` topcis. Topics are order-dependent. Each topic can also\nbe an array of `DATA` with \"or\" options.\n",
										"returns": "A filter id.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst filterId = await provider.request({ method: \"eth_newFilter\", params: [] });\nconsole.log(filterId);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 582,
											"name": "filter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The filter options as seen in source.\n"
											},
											"type": {
												"type": "reference",
												"name": "RangeFilterArgs"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 2221,
									"character": 21
								}
							]
						},
						{
							"id": 578,
							"name": "eth_newPendingTransactionFilter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 579,
									"name": "eth_newPendingTransactionFilter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates a filter in the node, to notify when new pending transactions\narrive. To check if the state has changed, call `eth_getFilterChanges`.",
										"returns": "A filter id.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst filterId = await provider.request({ method: \"eth_newPendingTransactionFilter\", params: [] });\nconsole.log(filterId);\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 2162,
									"character": 39
								}
							]
						},
						{
							"id": 107,
							"name": "eth_protocolVersion",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 108,
									"name": "eth_protocolVersion",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the current ethereum protocol version.",
										"returns": "The current ethereum protocol version.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst version = await provider.request({ method: \"eth_protocolVersion\", params: [] });\nconsole.log(version);\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Data"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 826,
									"character": 27
								}
							]
						},
						{
							"id": 552,
							"name": "eth_sendRawTransaction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 553,
									"name": "eth_sendRawTransaction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates new message call transaction or a contract creation for signed transactions.",
										"returns": "The transaction hash.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst signedTx = await provider.request({ method: \"eth_signTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\nconst txHash = await provider.send(\"eth_sendRawTransaction\", [signedTx] );\nconsole.log(txHash);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 554,
											"name": "transaction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The signed transaction data."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Data"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1755,
									"character": 30
								}
							]
						},
						{
							"id": 546,
							"name": "eth_sendTransaction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 547,
									"name": "eth_sendTransaction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates new message call transaction or a contract creation, if the data field contains code.",
										"text": "Transaction call object:\n* `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n* `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n* `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n* `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n* `value`: `QUANTITY` (optional) - Integer of the value in wei.\n* `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n",
										"returns": "The transaction hash.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\nawait provider.once(\"message\"); // Note: `await provider.once` is non-standard\nconsole.log(txHash);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 548,
											"name": "transaction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The transaction call object as seen in source."
											},
											"type": {
												"type": "reference",
												"name": "TypedRpcTransaction"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Data"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1661,
									"character": 27
								}
							]
						},
						{
							"id": 555,
							"name": "eth_sign",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 556,
									"name": "eth_sign",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The sign method calculates an Ethereum specific signature with:\n`sign(keccak256(\"\\x19Ethereum Signed Message:\\n\" + message.length + message)))`.",
										"text": "By adding a prefix to the message makes the calculated signature\nrecognizable as an Ethereum specific signature. This prevents misuse where a malicious DApp can sign arbitrary data\n (e.g. transaction) and use the signature to impersonate the victim.\n\nNote the address to sign with must be unlocked.\n",
										"returns": "Signature - a hex encoded 129 byte array\nstarting with `0x`. It encodes the `r`, `s`, and `v` parameters from\nappendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n64...128 the `s` parameter, and the last byte the `v` parameter. Note\nthat the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst [account] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst msg = \"0x307866666666666666666666\";\nconst signature = await provider.request({ method: \"eth_sign\", params: [account, msg] });\nconsole.log(signature);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 557,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Address to sign with."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 558,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Message to sign."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1788,
									"character": 16
								}
							]
						},
						{
							"id": 549,
							"name": "eth_signTransaction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 550,
									"name": "eth_signTransaction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Signs a transaction that can be submitted to the network at a later time using `eth_sendRawTransaction`.",
										"text": "Transaction call object:\n* `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n* `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n* `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n* `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n* `value`: `QUANTITY` (optional) - Integer of the value in wei.\n* `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n",
										"returns": "The raw, signed transaction.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst signedTx = await provider.request({ method: \"eth_signTransaction\", params: [{ from, to }] });\nconsole.log(signedTx)\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 551,
											"name": "transaction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The transaction call object as seen in source."
											},
											"type": {
												"type": "reference",
												"name": "TypedRpcTransaction"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1718,
									"character": 27
								}
							]
						},
						{
							"id": 559,
							"name": "eth_signTypedData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 560,
									"name": "eth_signTypedData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Identical to eth_signTypedData_v4.",
										"returns": "Signature. As in `eth_sign`, it is a hex encoded 129 byte array\nstarting with `0x`. It encodes the `r`, `s`, and `v` parameters from\nappendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n64...128 the `s` parameter, and the last byte the `v` parameter. Note\nthat the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).",
										"tags": [
											{
												"tag": "eip",
												"text": "[712](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md)"
											},
											{
												"tag": "example",
												"text": "\n```javascript\nconst [account] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst typedData = {\n types: {\n   EIP712Domain: [\n     { name: 'name', type: 'string' },\n     { name: 'version', type: 'string' },\n     { name: 'chainId', type: 'uint256' },\n     { name: 'verifyingContract', type: 'address' },\n   ],\n   Person: [\n     { name: 'name', type: 'string' },\n     { name: 'wallet', type: 'address' }\n   ],\n   Mail: [\n     { name: 'from', type: 'Person' },\n     { name: 'to', type: 'Person' },\n     { name: 'contents', type: 'string' }\n   ],\n },\n primaryType: 'Mail',\n domain: {\n   name: 'Ether Mail',\n   version: '1',\n   chainId: 1,\n   verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n },\n message: {\n   from: {\n     name: 'Cow',\n     wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n   },\n   to: {\n     name: 'Bob',\n     wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n   },\n   contents: 'Hello, Bob!',\n },\n};\nconst signature = await provider.request({ method: \"eth_signTypedData\", params: [account, typedData] });\nconsole.log(signature);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 561,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Address of the account that will sign the messages."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 562,
											"name": "typedData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Typed structured data to be signed."
											},
											"type": {
												"type": "reference",
												"id": 718,
												"name": "TypedData"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1859,
									"character": 25
								}
							]
						},
						{
							"id": 563,
							"name": "eth_signTypedData_v4",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 564,
									"name": "eth_signTypedData_v4",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"returns": "Signature. As in `eth_sign`, it is a hex encoded 129 byte array\nstarting with `0x`. It encodes the `r`, `s`, and `v` parameters from\nappendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n64...128 the `s` parameter, and the last byte the `v` parameter. Note\nthat the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).",
										"tags": [
											{
												"tag": "eip",
												"text": "[712](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md)"
											},
											{
												"tag": "example",
												"text": "\n```javascript\nconst [account] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst typedData = {\n types: {\n   EIP712Domain: [\n     { name: 'name', type: 'string' },\n     { name: 'version', type: 'string' },\n     { name: 'chainId', type: 'uint256' },\n     { name: 'verifyingContract', type: 'address' },\n   ],\n   Person: [\n     { name: 'name', type: 'string' },\n     { name: 'wallet', type: 'address' }\n   ],\n   Mail: [\n     { name: 'from', type: 'Person' },\n     { name: 'to', type: 'Person' },\n     { name: 'contents', type: 'string' }\n   ],\n },\n primaryType: 'Mail',\n domain: {\n   name: 'Ether Mail',\n   version: '1',\n   chainId: 1,\n   verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n },\n message: {\n   from: {\n     name: 'Cow',\n     wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n   },\n   to: {\n     name: 'Bob',\n     wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n   },\n   contents: 'Hello, Bob!',\n },\n};\nconst signature = await provider.request({ method: \"eth_signTypedData_v4\", params: [account, typedData] });\nconsole.log(signature);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 565,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Address of the account that will sign the messages."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 566,
											"name": "typedData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Typed structured data to be signed."
											},
											"type": {
												"type": "reference",
												"id": 718,
												"name": "TypedData"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1919,
									"character": 28
								}
							]
						},
						{
							"id": 495,
							"name": "eth_submitHashrate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 496,
									"name": "eth_submitHashrate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Used for submitting mining hashrate.",
										"returns": "`true` if submitting went through succesfully and `false` otherwise.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst hashRate = \"0x0000000000000000000000000000000000000000000000000000000000000001\";\nconst clientId = \"0xb2222a74119abd18dbcb7d1f661c6578b7bbeb4984c50e66ed538347f606b971\";\nconst result = await provider.request({ method: \"eth_submitHashrate\", params: [hashRate, clientId] });\nconsole.log(result);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 497,
											"name": "hashRate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "A hexadecimal string representation (32 bytes) of the hash rate."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 498,
											"name": "clientID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "A random hexadecimal(32 bytes) ID identifying the client."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1301,
									"character": 26
								}
							]
						},
						{
							"id": 490,
							"name": "eth_submitWork",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "3"
									}
								}
							],
							"signatures": [
								{
									"id": 491,
									"name": "eth_submitWork",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Used for submitting a proof-of-work solution.",
										"returns": "`true` if the provided solution is valid, otherwise `false`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst nonce = \"0xe0df4bd14ab39a71\";\nconst powHash = \"0x0000000000000000000000000000000000000000000000000000000000000001\";\nconst digest = \"0xb2222a74119abd18dbcb7d1f661c6578b7bbeb4984c50e66ed538347f606b971\";\nconst result = await provider.request({ method: \"eth_submitWork\", params: [nonce, powHash, digest] });\nconsole.log(result);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 492,
											"name": "nonce",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The nonce found (64 bits)."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 493,
											"name": "powHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The header's pow-hash (256 bits)."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 494,
											"name": "digest",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The mix digest (256 bits)."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1282,
									"character": 22
								}
							]
						},
						{
							"id": 567,
							"name": "eth_subscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1",
										"max": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 568,
									"name": "eth_subscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Starts a subscription to a particular event. For every event that matches\nthe subscription a JSON-RPC notification with event details and\nsubscription ID will be sent to a client.",
										"returns": "A subscription id.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst subscriptionId = await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconsole.log(subscriptionId);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 569,
											"name": "subscriptionName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Name for the subscription."
											},
											"type": {
												"type": "reference",
												"name": "SubscriptionName"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "PromiEvent"
									}
								},
								{
									"id": 570,
									"name": "eth_subscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Starts a subscription to a particular event. For every event that matches\nthe subscription a JSON-RPC notification with event details and\nsubscription ID will be sent to a client.",
										"returns": "A subscription id.\n"
									},
									"parameters": [
										{
											"id": 571,
											"name": "subscriptionName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SubscriptionName"
													},
													{
														"type": "stringLiteral",
														"value": "logs"
													}
												],
												"name": "Extract"
											}
										},
										{
											"id": 572,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Filter options:\n * `address`: either an address or an array of addresses. Only logs that\n   are created from these addresses are returned\n * `topics`, only logs which match the specified topics"
											},
											"type": {
												"type": "reference",
												"name": "BaseFilterArgs"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "PromiEvent"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1967,
									"character": 15
								},
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1980,
									"character": 15
								},
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1985,
									"character": 15
								}
							]
						},
						{
							"id": 109,
							"name": "eth_syncing",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 110,
									"name": "eth_syncing",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns an object containing data about the sync status or `false` when not syncing.",
										"returns": "An object with sync status data or `false`, when not syncing.\n\n* `startingBlock`: {bigint} The block at which the import started (will\n    only be reset, after the sync reached his head).\n* `currentBlock`: {bigint} The current block, same as `eth_blockNumber`.\n* `highestBlock`: {bigint} The estimated highest block.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst result = await provider.request({ method: \"eth_syncing\", params: [] });\nconsole.log(result);\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 847,
									"character": 19
								}
							]
						},
						{
							"id": 586,
							"name": "eth_uninstallFilter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 587,
									"name": "eth_uninstallFilter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Uninstalls a filter with given id. Should always be called when watch is\nno longer needed.",
										"returns": "`true` if the filter was successfully uninstalled, otherwise\n`false`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst filterId = await provider.request({ method: \"eth_newFilter\", params: [] });\nconst result = await provider.request({ method: \"eth_uninstallFilter\", params: [filterId] });\nconsole.log(result);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 588,
											"name": "filterId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The filter id."
											},
											"type": {
												"type": "reference",
												"name": "QUANTITY"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 2325,
									"character": 27
								}
							]
						},
						{
							"id": 573,
							"name": "eth_unsubscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 574,
									"name": "eth_unsubscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Cancel a subscription to a particular event. Returns a boolean indicating\nif the subscription was successfully cancelled.",
										"returns": "`true` if subscription was cancelled successfully, otherwise `false`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst subscriptionId = await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst result = await provider.request({ method: \"eth_unsubscribe\", params: [subscriptionId] });\nconsole.log(result);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 575,
											"name": "subscriptionId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The ID of the subscription to unsubscribe to."
											},
											"type": {
												"type": "reference",
												"name": "SubscriptionId"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 2111,
									"character": 23
								}
							]
						},
						{
							"id": 60,
							"name": "evm_increaseTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 61,
									"name": "evm_increaseTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Jump forward in time by the given amount of time, in seconds.",
										"returns": "Returns the total time adjustment, in seconds.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst seconds = 10;\nconst timeAdjustment = await provider.send(\"evm_increaseTime\", [seconds] );\nconsole.log(timeAdjustment);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 62,
											"name": "seconds",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Number of seconds to jump forward in time by. Must be greater than or equal to `0`."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"name": "QUANTITY"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 384,
									"character": 24
								}
							]
						},
						{
							"id": 75,
							"name": "evm_lockUnknownAccount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 76,
									"name": "evm_lockUnknownAccount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Locks any unknown account.",
										"text": "Note: accounts known to the `personal` namespace and accounts returned by\n`eth_accounts` cannot be locked using this method.\n",
										"returns": "`true` if the account was locked successfully, `false` if the\naccount was already locked. Throws an error if the account could not be\nlocked.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst address = \"0x742d35Cc6634C0532925a3b844Bc454e4438f44e\";\nconst result = await provider.send(\"evm_lockUnknownAccount\", [address] );\nconsole.log(result);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 77,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The address of the account to lock."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 550,
									"character": 30
								}
							]
						},
						{
							"id": 48,
							"name": "evm_mine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0",
										"max": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 49,
									"name": "evm_mine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Force a single block to be mined.",
										"text": "Mines a block independent of whether or not mining is started or stopped.\nWill mine an empty block if there are no available transactions to mine.\n",
										"returns": "The string `\"0x0\"`. May return additional meta-data in the future.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(\"start\", await provider.send(\"eth_blockNumber\"));\nawait provider.send(\"evm_mine\", [{blocks: 5}] ); // mines 5 blocks\nconsole.log(\"end\", await provider.send(\"eth_blockNumber\"));\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 50,
											"name": "timestamp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the timestamp the block should be mined with.\nEXPERIMENTAL: Optionally, specify an `options` object with `timestamp`\nand/or `blocks` fields. If `blocks` is given, it will mine exactly `blocks`\n number of blocks, regardless of any other blocks mined or reverted during it's\noperation. This behavior is subject to change!\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "stringLiteral",
												"value": "0x0"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 51,
									"name": "evm_mine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 52,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 53,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 55,
															"name": "blocks",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/ethereum/src/api.ts",
																	"line": 292,
																	"character": 10
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 54,
															"name": "timestamp",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/ethereum/src/api.ts",
																	"line": 291,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																55,
																54
															]
														}
													],
													"sources": [
														{
															"fileName": "chains/ethereum/ethereum/src/api.ts",
															"line": 290,
															"character": 25
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "stringLiteral",
												"value": "0x0"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 289,
									"character": 16
								},
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 290,
									"character": 16
								},
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 295,
									"character": 16
								}
							]
						},
						{
							"id": 66,
							"name": "evm_revert",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 67,
									"name": "evm_revert",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Revert the state of the blockchain to a previous snapshot. Takes a single\nparameter, which is the snapshot id to revert to. This deletes the given\nsnapshot, as well as any snapshots taken after (e.g.: reverting to id 0x1\nwill delete snapshots with ids 0x1, 0x2, etc.)",
										"returns": "`true` if a snapshot was reverted, otherwise `false`.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst [from, to] = await provider.send(\"eth_accounts\");\nconst startingBalance = BigInt(await provider.send(\"eth_getBalance\", [from] ));\n\n// take a snapshot\nconst snapshotId = await provider.send(\"evm_snapshot\");\n\n// send value to another account (over-simplified example)\nawait provider.send(\"eth_subscribe\", [\"newHeads\"] );\nawait provider.send(\"eth_sendTransaction\", [{from, to, value: \"0xffff\"}] );\nawait provider.once(\"message\"); // Note: `await provider.once` is non-standard\n\n// ensure balance has updated\nconst newBalance = await provider.send(\"eth_getBalance\", [from] );\nassert(BigInt(newBalance) < startingBalance);\n\n// revert the snapshot\nconst isReverted = await provider.send(\"evm_revert\", [snapshotId] );\nassert(isReverted);\nconsole.log({isReverted: isReverted});\n\n// ensure balance has reverted\nconst endingBalance = await provider.send(\"eth_getBalance\", [from] );\nconst isBalanceReverted = assert.strictEqual(BigInt(endingBalance), startingBalance);\nconsole.log({isBalanceReverted: isBalanceReverted});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 68,
											"name": "snapshotId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The snapshot id to revert."
											},
											"type": {
												"type": "reference",
												"name": "QUANTITY"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 465,
									"character": 18
								}
							]
						},
						{
							"id": 56,
							"name": "evm_setAccountNonce",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 57,
									"name": "evm_setAccountNonce",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the given account's nonce to the specified value. Mines a new block\nbefore returning.",
										"text": "Warning: this will result in an invalid state tree.\n",
										"returns": "`true` if it worked, otherwise `false`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst nonce = \"0x3e8\";\nconst [address] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst result = await provider.send(\"evm_setAccountNonce\", [address, nonce] );\nconsole.log(result);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 58,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The account address to update."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 59,
											"name": "nonce",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The nonce value to be set."
											},
											"type": {
												"type": "reference",
												"name": "QUANTITY"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 352,
									"character": 27
								}
							]
						},
						{
							"id": 63,
							"name": "evm_setTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0",
										"max": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 64,
									"name": "evm_setTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the internal clock time to the given timestamp.",
										"text": "Warning: This will allow you to move *backwards* in time, which may cause\nnew blocks to appear to be mined before old blocks. This is will result in\nan invalid state.\n",
										"returns": "The amount of *seconds* between the given timestamp and now.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst currentDate = Date.now();\nsetTimeout(async () => {\n  const time = await provider.send(\"evm_setTime\", [currentDate] );\n  console.log(time); // should be about two seconds ago\n}, 1000);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 65,
											"name": "time",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "JavaScript timestamp (millisecond precision)."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"name": "QUANTITY"
													},
													{
														"type": "reference",
														"name": "Date"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 411,
									"character": 19
								}
							]
						},
						{
							"id": 69,
							"name": "evm_snapshot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 70,
									"name": "evm_snapshot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Snapshot the state of the blockchain at the current block. Takes no\nparameters. Returns the id of the snapshot that was created. A snapshot can\nonly be reverted once. After a successful `evm_revert`, the same snapshot\nid cannot be used again. Consider creating a new snapshot after each\n`evm_revert` if you need to revert to the same point multiple times.",
										"returns": "The hex-encoded identifier for this snapshot.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst provider = ganache.provider();\nconst [from, to] = await provider.send(\"eth_accounts\");\nconst startingBalance = BigInt(await provider.send(\"eth_getBalance\", [from] ));\n\n// take a snapshot\nconst snapshotId = await provider.send(\"evm_snapshot\");\n\n// send value to another account (over-simplified example)\nawait provider.send(\"eth_subscribe\", [\"newHeads\"] );\nawait provider.send(\"eth_sendTransaction\", [{from, to, value: \"0xffff\"}] );\nawait provider.once(\"message\"); // Note: `await provider.once` is non-standard\n\n// ensure balance has updated\nconst newBalance = await provider.send(\"eth_getBalance\", [from] );\nassert(BigInt(newBalance) < startingBalance);\n\n// revert the snapshot\nconst isReverted = await provider.send(\"evm_revert\", [snapshotId] );\nassert(isReverted);\n\n// ensure balance has reverted\nconst endingBalance = await provider.send(\"eth_getBalance\", [from] );\nconst isBalanceReverted = assert.strictEqual(BigInt(endingBalance), startingBalance);\nconsole.log({isBalanceReverted: isBalanceReverted});\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 506,
									"character": 20
								}
							]
						},
						{
							"id": 71,
							"name": "evm_unlockUnknownAccount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 72,
									"name": "evm_unlockUnknownAccount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Unlocks any unknown account.",
										"text": "Note: accounts known to the `personal` namespace and accounts returned by\n`eth_accounts` cannot be unlocked using this method.\n",
										"returns": "`true` if the account was unlocked successfully, `false` if the\naccount was already unlocked. Throws an error if the account could not be\nunlocked.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst address = \"0x742d35Cc6634C0532925a3b844Bc454e4438f44e\";\nconst result = await provider.send(\"evm_unlockUnknownAccount\", [address] );\nconsole.log(result);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 73,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The address of the account to unlock."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 74,
											"name": "duration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "(Default: disabled) Duration in seconds how long the account\nshould remain unlocked for. Set to 0 to disable automatic locking."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 529,
									"character": 32
								}
							]
						},
						{
							"id": 86,
							"name": "miner_setEtherbase",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 87,
									"name": "miner_setEtherbase",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the etherbase, where mining rewards will go.",
										"returns": "`true`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst [account] = await provider.request({ method: \"eth_accounts\", params: [] });\nconsole.log(await provider.send(\"miner_setEtherbase\", [account] ));\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 88,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The address where the mining rewards will go."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 637,
									"character": 26
								}
							]
						},
						{
							"id": 89,
							"name": "miner_setExtra",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 90,
									"name": "miner_setExtra",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Set the extraData block header field a miner can include.",
										"returns": "If successfully set returns `true`, otherwise returns an error.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"miner_setExtra\", [\"0x0\"] ));\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 91,
											"name": "extra",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The `extraData` to include."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 652,
									"character": 22
								}
							]
						},
						{
							"id": 83,
							"name": "miner_setGasPrice",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 84,
									"name": "miner_setGasPrice",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the default accepted gas price when mining transactions.\nAny transactions that don't specify a gas price will use this amount.\nTransactions that are below this limit are excluded from the mining process.",
										"returns": "`true`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"miner_setGasPrice\", [300000] ));\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 85,
											"name": "number",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Default accepted gas price."
											},
											"type": {
												"type": "reference",
												"name": "QUANTITY"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 621,
									"character": 25
								}
							]
						},
						{
							"id": 78,
							"name": "miner_start",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0",
										"max": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 79,
									"name": "miner_start",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Resume the CPU mining process with the given number of threads.",
										"text": "Note: `threads` is ignored.",
										"returns": "`true`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nawait provider.send(\"miner_stop\");\n// check that eth_mining returns false\nconsole.log(await provider.send(\"eth_mining\"));\nawait provider.send(\"miner_start\");\n// check that eth_mining returns true\nconsole.log(await provider.send(\"eth_mining\"));\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 80,
											"name": "threads",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Number of threads to resume the CPU mining process with."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 579,
									"character": 19
								}
							]
						},
						{
							"id": 81,
							"name": "miner_stop",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 82,
									"name": "miner_stop",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Stop the CPU mining operation.",
										"returns": "`true`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\n// check that eth_mining returns true\nconsole.log(await provider.send(\"eth_mining\"));\nawait provider.send(\"miner_stop\");\n// check that eth_mining returns false\nconsole.log(await provider.send(\"eth_mining\"));\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 604,
									"character": 18
								}
							]
						},
						{
							"id": 99,
							"name": "net_listening",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 100,
									"name": "net_listening",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns `true` if client is actively listening for network connections.",
										"returns": "`true` when listening, otherwise `false`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"net_listening\"));\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 718,
									"character": 21
								}
							]
						},
						{
							"id": 101,
							"name": "net_peerCount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 102,
									"name": "net_peerCount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns number of peers currently connected to the client.",
										"returns": "Number of connected peers.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"net_peerCount\"));\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 731,
									"character": 21
								}
							]
						},
						{
							"id": 97,
							"name": "net_version",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 98,
									"name": "net_version",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the current network id.",
										"returns": "The current network id. This value should NOT be JSON-RPC\nQuantity/Data encoded.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"net_version\"));\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 705,
									"character": 19
								}
							]
						},
						{
							"id": 639,
							"name": "personal_importRawKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 640,
									"name": "personal_importRawKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Imports the given unencrypted private key (hex string) into the key store, encrypting it with the passphrase.",
										"returns": "Returns the address of the new account.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst rawKey = \"0x0123456789012345678901234567890123456789012345678901234567890123\";\nconst passphrase = \"passphrase\";\n\nconst address = await provider.send(\"personal_importRawKey\",[rawKey, passphrase] );\nconsole.log(address);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 641,
											"name": "rawKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The raw, unencrypted private key to import."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 642,
											"name": "passphrase",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The passphrase to encrypt with."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Address"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 2777,
									"character": 29
								}
							]
						},
						{
							"id": 634,
							"name": "personal_listAccounts",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 635,
									"name": "personal_listAccounts",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns all the Ethereum account addresses of all keys that have been\nadded.",
										"returns": "The Ethereum account addresses of all keys that have been added.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"personal_listAccounts\"));\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 2724,
									"character": 29
								}
							]
						},
						{
							"id": 643,
							"name": "personal_lockAccount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 644,
									"name": "personal_lockAccount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Locks the account. The account can no longer be used to send transactions.",
										"returns": "Returns `true` if the account was locked, otherwise `false`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst [account] = await provider.send(\"personal_listAccounts\");\nconst isLocked = await provider.send(\"personal_lockAccount\", [account] );\nconsole.log(isLocked);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 645,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The account address to be locked."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 2808,
									"character": 28
								}
							]
						},
						{
							"id": 636,
							"name": "personal_newAccount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 637,
									"name": "personal_newAccount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Generates a new account with private key. Returns the address of the new\naccount.",
										"returns": "The new account's address.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst passphrase = \"passphrase\";\nconst address = await provider.send(\"personal_newAccount\", [passphrase] );\nconsole.log(address);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 638,
											"name": "passphrase",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The passphrase to encrypt the private key with."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Address"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 2742,
									"character": 27
								}
							]
						},
						{
							"id": 651,
							"name": "personal_sendTransaction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 652,
									"name": "personal_sendTransaction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Validate the given passphrase and submit transaction.",
										"text": "The transaction is the same argument as for `eth_sendTransaction` and\ncontains the from address. If the passphrase can be used to decrypt the\nprivate key belonging to `tx.from` the transaction is verified, signed and\nsend onto the network. The account is not unlocked globally in the node\nand cannot be used in other RPC calls.\n\nTransaction call object:\n* `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n* `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n* `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n* `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n* `value`: `QUANTITY` (optional) - Integer of the value in wei.\n* `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n",
										"returns": "The transaction hash or if unsuccessful an error.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst passphrase = \"passphrase\";\nconst newAccount = await provider.send(\"personal_newAccount\", [passphrase] );\nconst [to] = await provider.send(\"personal_listAccounts\");\n\n// use account and passphrase to send the transaction\nconst txHash = await provider.send(\"personal_sendTransaction\", [{ from: newAccount, to, gasLimit: \"0x5b8d80\" }, passphrase] );\nconsole.log(txHash);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 653,
											"name": "transaction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "TypedRpcTransaction"
											}
										},
										{
											"id": 654,
											"name": "passphrase",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The passphrase to decrpyt the private key belonging to `tx.from`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Data"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 2881,
									"character": 32
								}
							]
						},
						{
							"id": 655,
							"name": "personal_signTransaction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 656,
									"name": "personal_signTransaction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Validates the given passphrase and signs a transaction that can be\nsubmitted to the network at a later time using `eth_sendRawTransaction`.",
										"text": "The transaction is the same argument as for `eth_signTransaction` and\ncontains the from address. If the passphrase can be used to decrypt the\nprivate key belonging to `tx.from` the transaction is verified and signed.\nThe account is not unlocked globally in the node and cannot be used in other RPC calls.\n\nTransaction call object:\n* `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n* `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n* `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n* `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n* `value`: `QUANTITY` (optional) - Integer of the value in wei.\n* `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n",
										"returns": "The raw, signed transaction.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst [to] = await provider.request({ method: \"eth_accounts\", params: [] });\nconst passphrase = \"passphrase\";\nconst from = await provider.send(\"personal_newAccount\", [passphrase] );\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst signedTx = await provider.request({ method: \"personal_signTransaction\", params: [{ from, to }, passphrase] });\nconsole.log(signedTx)\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 657,
											"name": "transaction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The transaction call object as seen in source."
											},
											"type": {
												"type": "reference",
												"name": "TypedRpcTransaction"
											}
										},
										{
											"id": 658,
											"name": "passphrase",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 2946,
									"character": 32
								}
							]
						},
						{
							"id": 646,
							"name": "personal_unlockAccount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2",
										"max": "3"
									}
								}
							],
							"signatures": [
								{
									"id": 647,
									"name": "personal_unlockAccount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Unlocks the account for use.",
										"text": "The unencrypted key will be held in memory until the unlock duration\nexpires. The unlock duration defaults to 300 seconds. An explicit duration\nof zero seconds unlocks the key until geth exits.\n\nThe account can be used with `eth_sign` and `eth_sendTransaction` while it is\nunlocked.",
										"returns": "`true` if it worked. Throws an error or returns `false` if it did not.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\n// generate an account\nconst passphrase = \"passphrase\";\nconst newAccount = await provider.send(\"personal_newAccount\", [passphrase] );\nconst isUnlocked = await provider.send(\"personal_unlockAccount\", [newAccount, passphrase] );\nconsole.log(isUnlocked);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 648,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "20 Bytes - The address of the account to unlock."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 649,
											"name": "passphrase",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Passphrase to unlock the account."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 650,
											"name": "duration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "(default: 300) Duration in seconds how long the account\nshould remain unlocked for. Set to 0 to disable automatic locking."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "300"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 2837,
									"character": 30
								}
							]
						},
						{
							"id": 659,
							"name": "rpc_modules",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 660,
									"name": "rpc_modules",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns object of RPC modules.",
										"returns": "RPC modules.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"rpc_modules\"));\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 661,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 662,
															"name": "eth",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/ethereum/src/api.ts",
																	"line": 94,
																	"character": 5
																}
															],
															"type": {
																"type": "stringLiteral",
																"value": "1.0"
															},
															"defaultValue": "\"1.0\""
														},
														{
															"id": 666,
															"name": "evm",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/ethereum/src/api.ts",
																	"line": 98,
																	"character": 5
																}
															],
															"type": {
																"type": "stringLiteral",
																"value": "1.0"
															},
															"defaultValue": "\"1.0\""
														},
														{
															"id": 663,
															"name": "net",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/ethereum/src/api.ts",
																	"line": 95,
																	"character": 5
																}
															],
															"type": {
																"type": "stringLiteral",
																"value": "1.0"
															},
															"defaultValue": "\"1.0\""
														},
														{
															"id": 667,
															"name": "personal",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/ethereum/src/api.ts",
																	"line": 99,
																	"character": 10
																}
															],
															"type": {
																"type": "stringLiteral",
																"value": "1.0"
															},
															"defaultValue": "\"1.0\""
														},
														{
															"id": 664,
															"name": "rpc",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/ethereum/src/api.ts",
																	"line": 96,
																	"character": 5
																}
															],
															"type": {
																"type": "stringLiteral",
																"value": "1.0"
															},
															"defaultValue": "\"1.0\""
														},
														{
															"id": 665,
															"name": "web3",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/ethereum/src/api.ts",
																	"line": 97,
																	"character": 6
																}
															],
															"type": {
																"type": "stringLiteral",
																"value": "1.0"
															},
															"defaultValue": "\"1.0\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																662,
																666,
																663,
																667,
																664,
																665
															]
														}
													]
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 2980,
									"character": 19
								}
							]
						},
						{
							"id": 675,
							"name": "shh_addToGroup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 676,
									"name": "shh_addToGroup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Adds a whisper identity to the group.",
										"returns": "`true` if the identity was successfully added to the group, otherwise `false`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"shh_addToGroup\", [\"0x0\"] ));\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 677,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The identity address to add to a group."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 3037,
									"character": 22
								}
							]
						},
						{
							"id": 685,
							"name": "shh_getFilterChanges",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 686,
									"name": "shh_getFilterChanges",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Polling method for whisper filters. Returns new messages since the last call of this method.",
										"returns": "More Info: https://github.com/ethereum/wiki/wiki/JSON-RPC#shh_getfilterchanges",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"shh_getFilterChanges\", [\"0x0\"] ));\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 687,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The filter id. Ex: \"0x7\""
											},
											"type": {
												"type": "reference",
												"name": "QUANTITY"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 3085,
									"character": 28
								}
							]
						},
						{
							"id": 688,
							"name": "shh_getMessages",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 689,
									"name": "shh_getMessages",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Get all messages matching a filter. Unlike shh_getFilterChanges this returns all messages.",
										"returns": "See: `shh_getFilterChanges`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"shh_getMessages\", [\"0x0\"] ));\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 690,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The filter id. Ex: \"0x7\""
											},
											"type": {
												"type": "reference",
												"name": "QUANTITY"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 3100,
									"character": 23
								}
							]
						},
						{
							"id": 670,
							"name": "shh_hasIdentity",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 671,
									"name": "shh_hasIdentity",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Checks if the client hold the private keys for a given identity.",
										"returns": "Returns `true` if the client holds the private key for that identity, otherwise `false`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"shh_hasIdentity\", [\"0x0\"] ));\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 672,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The identity address to check."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 3012,
									"character": 23
								}
							]
						},
						{
							"id": 678,
							"name": "shh_newFilter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 679,
									"name": "shh_newFilter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates filter to notify, when client receives whisper message matching the filter options.",
										"returns": "Returns `true` if the identity was successfully added to the group, otherwise `false`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"shh_newFilter\", [\"0x0\", []] ));\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 680,
											"name": "to",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "(optional) Identity of the receiver. When present it will try to decrypt any incoming message\n if the client holds the private key to this identity."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										},
										{
											"id": 681,
											"name": "topics",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Array of topics which the incoming message's topics should match."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DATA"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 3054,
									"character": 21
								}
							]
						},
						{
							"id": 673,
							"name": "shh_newGroup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 674,
									"name": "shh_newGroup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates a new group.",
										"returns": "The address of the new group.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 3022,
									"character": 20
								}
							]
						},
						{
							"id": 668,
							"name": "shh_newIdentity",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 669,
									"name": "shh_newIdentity",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates new whisper identity in the client.",
										"returns": "- The address of the new identity.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"shh_newIdentity\"));\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 2997,
									"character": 23
								}
							]
						},
						{
							"id": 691,
							"name": "shh_post",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 692,
									"name": "shh_post",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates a whisper message and injects it into the network for distribution.",
										"returns": "Returns `true` if the message was sent, otherwise `false`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"shh_post\", [{}] ));\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 693,
											"name": "postData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "WhisperPostObject"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 3115,
									"character": 16
								}
							]
						},
						{
							"id": 682,
							"name": "shh_uninstallFilter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 683,
									"name": "shh_uninstallFilter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Uninstalls a filter with given id. Should always be called when watch is no longer needed.\nAdditionally filters timeout when they aren't requested with `shh_getFilterChanges` for a period of time.",
										"returns": "`true` if the filter was successfully uninstalled, otherwise `false`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"shh_uninstallFilter\", [\"0x0\"] ));\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 684,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The filter id. Ex: \"0x7\""
											},
											"type": {
												"type": "reference",
												"name": "QUANTITY"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 3070,
									"character": 27
								}
							]
						},
						{
							"id": 694,
							"name": "shh_version",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 695,
									"name": "shh_version",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the current whisper protocol version.",
										"returns": "The current whisper protocol version.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"shh_version\"));\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 3129,
									"character": 19
								}
							]
						},
						{
							"id": 92,
							"name": "web3_clientVersion",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 93,
									"name": "web3_clientVersion",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the current client version.",
										"returns": "The current client version.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(await provider.send(\"web3_clientVersion\"));\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 673,
									"character": 26
								}
							]
						},
						{
							"id": 94,
							"name": "web3_sha3",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 95,
									"name": "web3_sha3",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns Keccak-256 (not the standardized SHA3-256) of the given data.",
										"returns": "The SHA3 result of the given string.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst data = \"hello trufflers\";\nconst sha3 = await provider.send(\"web3_sha3\", [data] );\nconsole.log(sha3);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 96,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the data to convert into a SHA3 hash."
											},
											"type": {
												"type": "reference",
												"name": "DATA"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Data"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 689,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								21
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								19,
								9,
								8,
								18,
								15,
								20
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								44,
								46,
								40,
								31,
								35,
								26,
								627,
								623,
								505,
								507,
								619,
								509,
								111,
								103,
								503,
								511,
								193,
								113,
								276,
								273,
								515,
								279,
								583,
								589,
								602,
								519,
								281,
								301,
								524,
								615,
								543,
								327,
								407,
								321,
								324,
								487,
								501,
								499,
								576,
								580,
								578,
								107,
								552,
								546,
								555,
								549,
								559,
								563,
								495,
								490,
								567,
								109,
								586,
								573,
								60,
								75,
								48,
								66,
								56,
								63,
								69,
								71,
								86,
								89,
								83,
								78,
								81,
								99,
								101,
								97,
								639,
								634,
								643,
								636,
								651,
								655,
								646,
								659,
								675,
								685,
								688,
								670,
								678,
								673,
								668,
								691,
								682,
								694,
								92,
								94
							]
						}
					],
					"sources": [
						{
							"fileName": "chains/ethereum/ethereum/src/api.ts",
							"line": 143,
							"character": 32
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "Api"
						}
					]
				},
				{
					"id": 718,
					"name": "TypedData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "chains/ethereum/ethereum/src/api.ts",
							"line": 104,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "stringLiteral",
									"value": "data"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "unknown",
										"name": "1"
									},
									"objectType": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "query",
												"queryType": {
													"type": "reference",
													"name": "signTypedData_v4"
												}
											}
										],
										"name": "Parameters"
									}
								}
							},
							{
								"type": "reference",
								"name": "NotTypedData"
							}
						],
						"name": "Exclude"
					}
				},
				{
					"id": 708,
					"name": "CLIENT_VERSION",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "chains/ethereum/ethereum/src/api.ts",
							"line": 91,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "`Ganache/v${version}/EthereumJS TestRPC/v${version}/ethereum-js`"
				},
				{
					"id": 709,
					"name": "PROTOCOL_VERSION",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "chains/ethereum/ethereum/src/api.ts",
							"line": 92,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "Data"
					},
					"defaultValue": "Data.from(\"0x3f\")"
				},
				{
					"id": 710,
					"name": "RPC_MODULES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "chains/ethereum/ethereum/src/api.ts",
							"line": 93,
							"character": 17
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 711,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 712,
									"name": "eth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "chains/ethereum/ethereum/src/api.ts",
											"line": 94,
											"character": 5
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "1.0"
									},
									"defaultValue": "\"1.0\""
								},
								{
									"id": 716,
									"name": "evm",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "chains/ethereum/ethereum/src/api.ts",
											"line": 98,
											"character": 5
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "1.0"
									},
									"defaultValue": "\"1.0\""
								},
								{
									"id": 713,
									"name": "net",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "chains/ethereum/ethereum/src/api.ts",
											"line": 95,
											"character": 5
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "1.0"
									},
									"defaultValue": "\"1.0\""
								},
								{
									"id": 717,
									"name": "personal",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "chains/ethereum/ethereum/src/api.ts",
											"line": 99,
											"character": 10
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "1.0"
									},
									"defaultValue": "\"1.0\""
								},
								{
									"id": 714,
									"name": "rpc",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "chains/ethereum/ethereum/src/api.ts",
											"line": 96,
											"character": 5
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "1.0"
									},
									"defaultValue": "\"1.0\""
								},
								{
									"id": 715,
									"name": "web3",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "chains/ethereum/ethereum/src/api.ts",
											"line": 97,
											"character": 6
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "1.0"
									},
									"defaultValue": "\"1.0\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										712,
										716,
										713,
										717,
										714,
										715
									]
								}
							]
						}
					},
					"defaultValue": "{\n  eth: \"1.0\",\n  net: \"1.0\",\n  rpc: \"1.0\",\n  web3: \"1.0\",\n  evm: \"1.0\",\n  personal: \"1.0\"\n} as const"
				},
				{
					"id": 707,
					"name": "version",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "chains/ethereum/ethereum/src/api.ts",
							"line": 87,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 719,
					"name": "assertExceptionalTransactions",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 720,
							"name": "assertExceptionalTransactions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 721,
									"name": "transactions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TypedTransaction"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "chains/ethereum/ethereum/src/api.ts",
							"line": 111,
							"character": 38
						}
					]
				},
				{
					"id": 696,
					"name": "autofillDefaultTransactionValues",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 697,
							"name": "autofillDefaultTransactionValues",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 698,
									"name": "tx",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TypedTransaction"
									}
								},
								{
									"id": 699,
									"name": "eth_estimateGas",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 700,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 701,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 702,
															"name": "tx",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "TypedRpcTransaction"
															}
														},
														{
															"id": 703,
															"name": "tag",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "QUANTITY"
																	},
																	{
																		"type": "reference",
																		"name": "Tag"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "Quantity"
															}
														],
														"name": "Promise"
													}
												}
											],
											"sources": [
												{
													"fileName": "chains/ethereum/ethereum/src/api.ts",
													"line": 57,
													"character": 18
												}
											]
										}
									}
								},
								{
									"id": 704,
									"name": "transaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TypedRpcTransaction"
									}
								},
								{
									"id": 705,
									"name": "blockchain",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Blockchain"
									}
								},
								{
									"id": 706,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EthereumInternalOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "chains/ethereum/ethereum/src/api.ts",
							"line": 55,
							"character": 47
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						718
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						708,
						709,
						710,
						707
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						719,
						696
					]
				}
			],
			"sources": [
				{
					"fileName": "chains/ethereum/ethereum/src/api.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				1
			]
		}
	]
}