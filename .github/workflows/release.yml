name: Release

on:
  push:
    branches: [alpha, beta, rc, master]

jobs:
  release:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@v1
        with:
          # use node 14 until we can evaluate using npm 7+ and lock file version 2
          node-version: 14

      - name: Set git identity
        run: |
          git config --global user.name 'Robot'
          git config --global user.email 'robot@trufflesuite.com'
          git remote set-url origin https://robot:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run installation
        run: npm ci

      - name: Test
        run: npm test
        env:
          FORCE_COLOR: 1
          INFURA_KEY: ${{ secrets.TEST_INFURA_KEY }}

      - name: Set TAG for master to latest
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          echo "TAG=latest" >> $GITHUB_ENV

      - name: Set TAG for non-master to the branch name
        if: ${{ github.ref != 'refs/heads/master' }}
        run: |
          echo "TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Update package versions for latest release (master)
        if: ${{ env.TAG == 'latest' }}
        run: $(npm bin)/lerna version patch --no-git-tag-version --no-push --yes --exact

      - name: Update package versions for pre-releases
        if: ${{ env.TAG != 'latest' }}
        run: $(npm bin)/lerna version prerelease --no-git-tag-version --no-push --yes --exact --preid "$TAG"

      - name: Add updated versions to git
        run: git add .

      - name: Run build
        run: npm run build
        env:
          INFURA_KEY: ${{ secrets.INFURA_KEY }}

      - name: Update documentation
        run: |
          npm run docs.build
          git add docs/**

      - name: Set VERSION
        run: |
          echo "VERSION=$(node -e 'console.log(require("./src/packages/ganache/package.json").version)')" >> $GITHUB_ENV

      - name: Commit all staged changes
        run: |
          VERSION=$(node -e 'console.log(require("./src/packages/ganache/package.json").version)')
          git commit -m "chore(release): publish v${VERSION}" -m "ganache@${VERSION}"

      # # TODO: sign the last commit and tag
      - name: Tag the amended release commit
        run: |
          VERSION=$(node -e 'console.log(require("./src/packages/ganache/package.json").version)')
          git tag -a "ganache@${VERSION}" -m "ganache@${VERSION}"

      - name: Push changes to git
        run: |
          git push origin ${GITHUB_REF##*/}
          git push origin --tags

      - name: Set up auth for npm publish
        run: npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - name: Smoke test release
      #   TODO: set up verdaccio to mock npm https://verdaccio.org/

      # this needs `--no-verify-access` until https://github.com/lerna/lerna/issues/2788 is fixed
      - name: Release to npm
        run: |
          $(npm bin)/lerna publish from-package --yes --dist-tag ${TAG} --pre-dist-tag ${TAG} --no-verify-access
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # publish to docker and github packages
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: |
            trufflesuite/ganache
            ghcr.io/${{ github.repository}}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: ./src/packages/ganache/Dockerfile
          push: true
          tags: ${{ format('trufflesuite/ganache:{0}, trufflesuite/ganache:v{1}', env.TAG, env.VERSION) }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            INFURA_KEY=${{ secrets.INFURA_KEY }}
