name: TestRelease

on:
  push:
    branches: [master-release-automation]

jobs:
  release:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@v1
        with:
          # use node 14 until we can evaluate using npm 7+ and lock file version 2
          node-version: 14

      - name: Run installation
        run: npm ci

            - name: Set git identity
        run: |
          git config --global user.name 'Robot'
          git config --global user.email 'robot@trufflesuite.com'
          git remote set-url origin https://robot:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test
        run: npm test
        env:
          FORCE_COLOR: 1
          INFURA_KEY: ${{ secrets.TEST_INFURA_KEY }}

      - name: Set TAG for master to latest
        if: ${{ github.ref == 'refs/heads/master-release-automation' }}
        run: |
          echo "TAG=latest" >> $GITHUB_ENV

      - name: Set TAG for non-master to the branch name
        if: ${{ github.ref != 'refs/heads/master-release-automation' }}
        run: |
          echo "TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Update package versions for latest release (master)
        if: ${{ env.TAG == 'latest' }}
        run: $(npm bin)/lerna version patch --no-git-tag-version --no-push --yes --exact

      - name: Update package versions for pre-releases
        if: ${{ env.TAG != 'latest' }}
        run: $(npm bin)/lerna version prerelease --no-git-tag-version --no-push --yes --exact --preid "$TAG"

      - name: Add updated versions to git
        run: git add .

      - name: Run build
        run: npm run build
        env:
          INFURA_KEY: ${{ secrets.INFURA_KEY }}

      - name: Update documentation
        run: |
          npm run docs.build
          git add docs/**

      - name: Set VERSION
        run: |
          echo "VERSION=$(node -e 'console.log(require("./src/packages/ganache/package.json").version)')" >> $GITHUB_ENV

      - name: Commit all staged changes
        run: |
          git commit -m "chore(release): publish v${VERSION}" -m "ganache@${VERSION}"

      # TODO: sign the last commit and tag
      - name: Tag the amended release commit
        run: |
          git tag -a "ganache@${VERSION}" -m "ganache@${VERSION}"

      - name: DO NOT Push changes to git
        run: |
          git tag -l | grep '7.0.0'

      - name: Set up auth for npm publish
        run: npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # this needs `--no-verify-access` until https://github.com/lerna/lerna/issues/2788 is fixed
      - name: NOT Release to npm
        run: |
          echo "$TAG"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}